
/**
 * almond 0.1.4 Copyright (c) 2011, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/jrburke/almond for details
 */
//Going sloppy to avoid 'use strict' string cost, but strict practices should
//be followed.
/*jslint sloppy: true */
/*global setTimeout: false */

var requirejs, require, define;
(function (undef) {
    var main, req,
        defined = {},
        waiting = {},
        config = {},
        defining = {},
        aps = [].slice;

    /**
     * Given a relative module name, like ./something, normalize it to
     * a real name that can be mapped to a path.
     * @param {String} name the relative name
     * @param {String} baseName a real name that the name arg is relative
     * to.
     * @returns {String} normalized name
     */
    function normalize(name, baseName) {
        var nameParts, nameSegment, mapValue, foundMap,
            foundI, foundStarMap, starI, i, j, part,
            baseParts = baseName && baseName.split("/"),
            map = config.map,
            starMap = (map && map['*']) || {};

        //Adjust any relative paths.
        if (name && name.charAt(0) === ".") {
            //If have a base name, try to normalize against it,
            //otherwise, assume it is a top-level require that will
            //be relative to baseUrl in the end.
            if (baseName) {
                //Convert baseName to array, and lop off the last part,
                //so that . matches that "directory" and not name of the baseName's
                //module. For instance, baseName of "one/two/three", maps to
                //"one/two/three.js", but we want the directory, "one/two" for
                //this normalization.
                baseParts = baseParts.slice(0, baseParts.length - 1);

                name = baseParts.concat(name.split("/"));

                //start trimDots
                for (i = 0; i < name.length; i += 1) {
                    part = name[i];
                    if (part === ".") {
                        name.splice(i, 1);
                        i -= 1;
                    } else if (part === "..") {
                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {
                            //End of the line. Keep at least one non-dot
                            //path segment at the front so it can be mapped
                            //correctly to disk. Otherwise, there is likely
                            //no path mapping for a path starting with '..'.
                            //This can still fail, but catches the most reasonable
                            //uses of ..
                            break;
                        } else if (i > 0) {
                            name.splice(i - 1, 2);
                            i -= 2;
                        }
                    }
                }
                //end trimDots

                name = name.join("/");
            }
        }

        //Apply map config if available.
        if ((baseParts || starMap) && map) {
            nameParts = name.split('/');

            for (i = nameParts.length; i > 0; i -= 1) {
                nameSegment = nameParts.slice(0, i).join("/");

                if (baseParts) {
                    //Find the longest baseName segment match in the config.
                    //So, do joins on the biggest to smallest lengths of baseParts.
                    for (j = baseParts.length; j > 0; j -= 1) {
                        mapValue = map[baseParts.slice(0, j).join('/')];

                        //baseName segment has  config, find if it has one for
                        //this name.
                        if (mapValue) {
                            mapValue = mapValue[nameSegment];
                            if (mapValue) {
                                //Match, update name to the new value.
                                foundMap = mapValue;
                                foundI = i;
                                break;
                            }
                        }
                    }
                }

                if (foundMap) {
                    break;
                }

                //Check for a star map match, but just hold on to it,
                //if there is a shorter segment match later in a matching
                //config, then favor over this star map.
                if (!foundStarMap && starMap && starMap[nameSegment]) {
                    foundStarMap = starMap[nameSegment];
                    starI = i;
                }
            }

            if (!foundMap && foundStarMap) {
                foundMap = foundStarMap;
                foundI = starI;
            }

            if (foundMap) {
                nameParts.splice(0, foundI, foundMap);
                name = nameParts.join('/');
            }
        }

        return name;
    }

    function makeRequire(relName, forceSync) {
        return function () {
            //A version of a require function that passes a moduleName
            //value for items that may need to
            //look up paths relative to the moduleName
            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));
        };
    }

    function makeNormalize(relName) {
        return function (name) {
            return normalize(name, relName);
        };
    }

    function makeLoad(depName) {
        return function (value) {
            defined[depName] = value;
        };
    }

    function callDep(name) {
        if (waiting.hasOwnProperty(name)) {
            var args = waiting[name];
            delete waiting[name];
            defining[name] = true;
            main.apply(undef, args);
        }

        if (!defined.hasOwnProperty(name)) {
            throw new Error('No ' + name);
        }
        return defined[name];
    }

    /**
     * Makes a name map, normalizing the name, and using a plugin
     * for normalization if necessary. Grabs a ref to plugin
     * too, as an optimization.
     */
    function makeMap(name, relName) {
        var prefix, plugin,
            index = name.indexOf('!');

        if (index !== -1) {
            prefix = normalize(name.slice(0, index), relName);
            name = name.slice(index + 1);
            plugin = callDep(prefix);

            //Normalize according
            if (plugin && plugin.normalize) {
                name = plugin.normalize(name, makeNormalize(relName));
            } else {
                name = normalize(name, relName);
            }
        } else {
            name = normalize(name, relName);
        }

        //Using ridiculous property names for space reasons
        return {
            f: prefix ? prefix + '!' + name : name, //fullName
            n: name,
            p: plugin
        };
    }

    function makeConfig(name) {
        return function () {
            return (config && config.config && config.config[name]) || {};
        };
    }

    main = function (name, deps, callback, relName) {
        var cjsModule, depName, ret, map, i,
            args = [],
            usingExports;

        //Use name if no relName
        relName = relName || name;

        //Call the callback to define the module, if necessary.
        if (typeof callback === 'function') {

            //Pull out the defined dependencies and pass the ordered
            //values to the callback.
            //Default to [require, exports, module] if no deps
            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;
            for (i = 0; i < deps.length; i += 1) {
                map = makeMap(deps[i], relName);
                depName = map.f;

                //Fast path CommonJS standard dependencies.
                if (depName === "require") {
                    args[i] = makeRequire(name);
                } else if (depName === "exports") {
                    //CommonJS module spec 1.1
                    args[i] = defined[name] = {};
                    usingExports = true;
                } else if (depName === "module") {
                    //CommonJS module spec 1.1
                    cjsModule = args[i] = {
                        id: name,
                        uri: '',
                        exports: defined[name],
                        config: makeConfig(name)
                    };
                } else if (defined.hasOwnProperty(depName) || waiting.hasOwnProperty(depName)) {
                    args[i] = callDep(depName);
                } else if (map.p) {
                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});
                    args[i] = defined[depName];
                } else if (!defining[depName]) {
                    throw new Error(name + ' missing ' + depName);
                }
            }

            ret = callback.apply(defined[name], args);

            if (name) {
                //If setting exports via "module" is in play,
                //favor that over return value and exports. After that,
                //favor a non-undefined return value over exports use.
                if (cjsModule && cjsModule.exports !== undef &&
                        cjsModule.exports !== defined[name]) {
                    defined[name] = cjsModule.exports;
                } else if (ret !== undef || !usingExports) {
                    //Use the return value from the function.
                    defined[name] = ret;
                }
            }
        } else if (name) {
            //May just be an object definition for the module. Only
            //worry about defining if have a module name.
            defined[name] = callback;
        }
    };

    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {
        if (typeof deps === "string") {
            //Just return the module wanted. In this scenario, the
            //deps arg is the module name, and second arg (if passed)
            //is just the relName.
            //Normalize module name, if it contains . or ..
            return callDep(makeMap(deps, callback).f);
        } else if (!deps.splice) {
            //deps is a config object, not an array.
            config = deps;
            if (callback.splice) {
                //callback is an array, which means it is a dependency list.
                //Adjust args if there are dependencies
                deps = callback;
                callback = relName;
                relName = null;
            } else {
                deps = undef;
            }
        }

        //Support require(['a'])
        callback = callback || function () {};

        //If relName is a function, it is an errback handler,
        //so remove it.
        if (typeof relName === 'function') {
            relName = forceSync;
            forceSync = alt;
        }

        //Simulate async callback;
        if (forceSync) {
            main(undef, deps, callback, relName);
        } else {
            setTimeout(function () {
                main(undef, deps, callback, relName);
            }, 15);
        }

        return req;
    };

    /**
     * Just drops the config on the floor, but returns req in case
     * the config return value is used.
     */
    req.config = function (cfg) {
        config = cfg;
        return req;
    };

    define = function (name, deps, callback) {

        //This module may not have dependencies
        if (!deps.splice) {
            //deps is not an array, so probably means
            //an object literal or factory function for
            //the value. Adjust args.
            callback = deps;
            deps = [];
        }

        waiting[name] = [name, deps, callback];
    };

    define.amd = {
        jQuery: true
    };
}());
define("build/almond", function(){});

/* Modernizr 2.5.3 (Custom Build) | MIT & BSD
 * Build: http://www.modernizr.com/download/#-fontface-backgroundsize-borderimage-borderradius-boxshadow-flexbox-flexbox_legacy-hsla-multiplebgs-opacity-rgba-textshadow-cssanimations-csscolumns-generatedcontent-cssgradients-cssreflections-csstransforms-csstransforms3d-csstransitions-applicationcache-canvas-canvastext-draganddrop-hashchange-history-audio-video-indexeddb-input-inputtypes-localstorage-postmessage-sessionstorage-websockets-websqldatabase-webworkers-geolocation-inlinesvg-smil-svg-svgclippaths-touch-shiv-cssclasses-teststyles-testprop-testallprops-hasevent-prefixes-domprefixes-load
 */
;window.Modernizr=function(a,b,c){function C(a){j.cssText=a}function D(a,b){return C(n.join(a+";")+(b||""))}function E(a,b){return typeof a===b}function F(a,b){return!!~(""+a).indexOf(b)}function G(a,b){for(var d in a)if(j[a[d]]!==c)return b=="pfx"?a[d]:!0;return!1}function H(a,b,d){for(var e in a){var f=b[a[e]];if(f!==c)return d===!1?a[e]:E(f,"function")?f.bind(d||b):f}return!1}function I(a,b,c){var d=a.charAt(0).toUpperCase()+a.substr(1),e=(a+" "+p.join(d+" ")+d).split(" ");return E(b,"string")||E(b,"undefined")?G(e,b):(e=(a+" "+q.join(d+" ")+d).split(" "),H(e,b,c))}function K(){e.input=function(c){for(var d=0,e=c.length;d<e;d++)u[c[d]]=c[d]in k;return u.list&&(u.list=!!b.createElement("datalist")&&!!a.HTMLDataListElement),u}("autocomplete autofocus list placeholder max min multiple pattern required step".split(" ")),e.inputtypes=function(a){for(var d=0,e,f,h,i=a.length;d<i;d++)k.setAttribute("type",f=a[d]),e=k.type!=="text",e&&(k.value=l,k.style.cssText="position:absolute;visibility:hidden;",/^range$/.test(f)&&k.style.WebkitAppearance!==c?(g.appendChild(k),h=b.defaultView,e=h.getComputedStyle&&h.getComputedStyle(k,null).WebkitAppearance!=="textfield"&&k.offsetHeight!==0,g.removeChild(k)):/^(search|tel)$/.test(f)||(/^(url|email)$/.test(f)?e=k.checkValidity&&k.checkValidity()===!1:/^color$/.test(f)?(g.appendChild(k),g.offsetWidth,e=k.value!=l,g.removeChild(k)):e=k.value!=l)),t[a[d]]=!!e;return t}("search tel url email datetime date month week time datetime-local number range color".split(" "))}var d="2.5.3",e={},f=!0,g=b.documentElement,h="modernizr",i=b.createElement(h),j=i.style,k=b.createElement("input"),l=":)",m={}.toString,n=" -webkit- -moz- -o- -ms- ".split(" "),o="Webkit Moz O ms",p=o.split(" "),q=o.toLowerCase().split(" "),r={svg:"http://www.w3.org/2000/svg"},s={},t={},u={},v=[],w=v.slice,x,y=function(a,c,d,e){var f,i,j,k=b.createElement("div"),l=b.body,m=l?l:b.createElement("body");if(parseInt(d,10))while(d--)j=b.createElement("div"),j.id=e?e[d]:h+(d+1),k.appendChild(j);return f=["&#173;","<style>",a,"</style>"].join(""),k.id=h,(l?k:m).innerHTML+=f,m.appendChild(k),l||(m.style.background="",g.appendChild(m)),i=c(k,a),l?k.parentNode.removeChild(k):m.parentNode.removeChild(m),!!i},z=function(){function d(d,e){e=e||b.createElement(a[d]||"div"),d="on"+d;var f=d in e;return f||(e.setAttribute||(e=b.createElement("div")),e.setAttribute&&e.removeAttribute&&(e.setAttribute(d,""),f=E(e[d],"function"),E(e[d],"undefined")||(e[d]=c),e.removeAttribute(d))),e=null,f}var a={select:"input",change:"input",submit:"form",reset:"form",error:"img",load:"img",abort:"img"};return d}(),A={}.hasOwnProperty,B;!E(A,"undefined")&&!E(A.call,"undefined")?B=function(a,b){return A.call(a,b)}:B=function(a,b){return b in a&&E(a.constructor.prototype[b],"undefined")},Function.prototype.bind||(Function.prototype.bind=function(b){var c=this;if(typeof c!="function")throw new TypeError;var d=w.call(arguments,1),e=function(){if(this instanceof e){var a=function(){};a.prototype=c.prototype;var f=new a,g=c.apply(f,d.concat(w.call(arguments)));return Object(g)===g?g:f}return c.apply(b,d.concat(w.call(arguments)))};return e});var J=function(c,d){var f=c.join(""),g=d.length;y(f,function(c,d){var f=b.styleSheets[b.styleSheets.length-1],h=f?f.cssRules&&f.cssRules[0]?f.cssRules[0].cssText:f.cssText||"":"",i=c.childNodes,j={};while(g--)j[i[g].id]=i[g];e.touch="ontouchstart"in a||a.DocumentTouch&&b instanceof DocumentTouch||(j.touch&&j.touch.offsetTop)===9,e.csstransforms3d=(j.csstransforms3d&&j.csstransforms3d.offsetLeft)===9&&j.csstransforms3d.offsetHeight===3,e.generatedcontent=(j.generatedcontent&&j.generatedcontent.offsetHeight)>=1,e.fontface=/src/i.test(h)&&h.indexOf(d.split(" ")[0])===0},g,d)}(['@font-face {font-family:"font";src:url("https://")}',["@media (",n.join("touch-enabled),("),h,")","{#touch{top:9px;position:absolute}}"].join(""),["@media (",n.join("transform-3d),("),h,")","{#csstransforms3d{left:9px;position:absolute;height:3px;}}"].join(""),['#generatedcontent:after{content:"',l,'";visibility:hidden}'].join("")],["fontface","touch","csstransforms3d","generatedcontent"]);s.flexbox=function(){return I("flexOrder")},s["flexbox-legacy"]=function(){return I("boxDirection")},s.canvas=function(){var a=b.createElement("canvas");return!!a.getContext&&!!a.getContext("2d")},s.canvastext=function(){return!!e.canvas&&!!E(b.createElement("canvas").getContext("2d").fillText,"function")},s.touch=function(){return e.touch},s.geolocation=function(){return!!navigator.geolocation},s.postmessage=function(){return!!a.postMessage},s.websqldatabase=function(){return!!a.openDatabase},s.indexedDB=function(){return!!I("indexedDB",a)},s.hashchange=function(){return z("hashchange",a)&&(b.documentMode===c||b.documentMode>7)},s.history=function(){return!!a.history&&!!history.pushState},s.draganddrop=function(){var a=b.createElement("div");return"draggable"in a||"ondragstart"in a&&"ondrop"in a},s.websockets=function(){for(var b=-1,c=p.length;++b<c;)if(a[p[b]+"WebSocket"])return!0;return"WebSocket"in a},s.rgba=function(){return C("background-color:rgba(150,255,150,.5)"),F(j.backgroundColor,"rgba")},s.hsla=function(){return C("background-color:hsla(120,40%,100%,.5)"),F(j.backgroundColor,"rgba")||F(j.backgroundColor,"hsla")},s.multiplebgs=function(){return C("background:url(https://),url(https://),red url(https://)"),/(url\s*\(.*?){3}/.test(j.background)},s.backgroundsize=function(){return I("backgroundSize")},s.borderimage=function(){return I("borderImage")},s.borderradius=function(){return I("borderRadius")},s.boxshadow=function(){return I("boxShadow")},s.textshadow=function(){return b.createElement("div").style.textShadow===""},s.opacity=function(){return D("opacity:.55"),/^0.55$/.test(j.opacity)},s.cssanimations=function(){return I("animationName")},s.csscolumns=function(){return I("columnCount")},s.cssgradients=function(){var a="background-image:",b="gradient(linear,left top,right bottom,from(#9f9),to(white));",c="linear-gradient(left top,#9f9, white);";return C((a+"-webkit- ".split(" ").join(b+a)+n.join(c+a)).slice(0,-a.length)),F(j.backgroundImage,"gradient")},s.cssreflections=function(){return I("boxReflect")},s.csstransforms=function(){return!!I("transform")},s.csstransforms3d=function(){var a=!!I("perspective");return a&&"webkitPerspective"in g.style&&(a=e.csstransforms3d),a},s.csstransitions=function(){return I("transition")},s.fontface=function(){return e.fontface},s.generatedcontent=function(){return e.generatedcontent},s.video=function(){var a=b.createElement("video"),c=!1;try{if(c=!!a.canPlayType)c=new Boolean(c),c.ogg=a.canPlayType('video/ogg; codecs="theora"').replace(/^no$/,""),c.h264=a.canPlayType('video/mp4; codecs="avc1.42E01E"').replace(/^no$/,""),c.webm=a.canPlayType('video/webm; codecs="vp8, vorbis"').replace(/^no$/,"")}catch(d){}return c},s.audio=function(){var a=b.createElement("audio"),c=!1;try{if(c=!!a.canPlayType)c=new Boolean(c),c.ogg=a.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,""),c.mp3=a.canPlayType("audio/mpeg;").replace(/^no$/,""),c.wav=a.canPlayType('audio/wav; codecs="1"').replace(/^no$/,""),c.m4a=(a.canPlayType("audio/x-m4a;")||a.canPlayType("audio/aac;")).replace(/^no$/,"")}catch(d){}return c},s.localstorage=function(){try{return localStorage.setItem(h,h),localStorage.removeItem(h),!0}catch(a){return!1}},s.sessionstorage=function(){try{return sessionStorage.setItem(h,h),sessionStorage.removeItem(h),!0}catch(a){return!1}},s.webworkers=function(){return!!a.Worker},s.applicationcache=function(){return!!a.applicationCache},s.svg=function(){return!!b.createElementNS&&!!b.createElementNS(r.svg,"svg").createSVGRect},s.inlinesvg=function(){var a=b.createElement("div");return a.innerHTML="<svg/>",(a.firstChild&&a.firstChild.namespaceURI)==r.svg},s.smil=function(){return!!b.createElementNS&&/SVGAnimate/.test(m.call(b.createElementNS(r.svg,"animate")))},s.svgclippaths=function(){return!!b.createElementNS&&/SVGClipPath/.test(m.call(b.createElementNS(r.svg,"clipPath")))};for(var L in s)B(s,L)&&(x=L.toLowerCase(),e[x]=s[L](),v.push((e[x]?"":"no-")+x));return e.input||K(),C(""),i=k=null,function(a,b){function g(a,b){var c=a.createElement("p"),d=a.getElementsByTagName("head")[0]||a.documentElement;return c.innerHTML="x<style>"+b+"</style>",d.insertBefore(c.lastChild,d.firstChild)}function h(){var a=k.elements;return typeof a=="string"?a.split(" "):a}function i(a){var b={},c=a.createElement,e=a.createDocumentFragment,f=e();a.createElement=function(a){var e=(b[a]||(b[a]=c(a))).cloneNode();return k.shivMethods&&e.canHaveChildren&&!d.test(a)?f.appendChild(e):e},a.createDocumentFragment=Function("h,f","return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&("+h().join().replace(/\w+/g,function(a){return b[a]=c(a),f.createElement(a),'c("'+a+'")'})+");return n}")(k,f)}function j(a){var b;return a.documentShived?a:(k.shivCSS&&!e&&(b=!!g(a,"article,aside,details,figcaption,figure,footer,header,hgroup,nav,section{display:block}audio{display:none}canvas,video{display:inline-block;*display:inline;*zoom:1}[hidden]{display:none}audio[controls]{display:inline-block;*display:inline;*zoom:1}mark{background:#FF0;color:#000}")),f||(b=!i(a)),b&&(a.documentShived=b),a)}var c=a.html5||{},d=/^<|^(?:button|form|map|select|textarea)$/i,e,f;(function(){var a=b.createElement("a");a.innerHTML="<xyz></xyz>",e="hidden"in a,f=a.childNodes.length==1||function(){try{b.createElement("a")}catch(a){return!0}var c=b.createDocumentFragment();return typeof c.cloneNode=="undefined"||typeof c.createDocumentFragment=="undefined"||typeof c.createElement=="undefined"}()})();var k={elements:c.elements||"abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video",shivCSS:c.shivCSS!==!1,shivMethods:c.shivMethods!==!1,type:"default",shivDocument:j};a.html5=k,j(b)}(this,b),e._version=d,e._prefixes=n,e._domPrefixes=q,e._cssomPrefixes=p,e.hasEvent=z,e.testProp=function(a){return G([a])},e.testAllProps=I,e.testStyles=y,g.className=g.className.replace(/(^|\s)no-js(\s|$)/,"$1$2")+(f?" js "+v.join(" "):""),e}(this,this.document),function(a,b,c){function d(a){return o.call(a)=="[object Function]"}function e(a){return typeof a=="string"}function f(){}function g(a){return!a||a=="loaded"||a=="complete"||a=="uninitialized"}function h(){var a=p.shift();q=1,a?a.t?m(function(){(a.t=="c"?B.injectCss:B.injectJs)(a.s,0,a.a,a.x,a.e,1)},0):(a(),h()):q=0}function i(a,c,d,e,f,i,j){function k(b){if(!o&&g(l.readyState)&&(u.r=o=1,!q&&h(),l.onload=l.onreadystatechange=null,b)){a!="img"&&m(function(){t.removeChild(l)},50);for(var d in y[c])y[c].hasOwnProperty(d)&&y[c][d].onload()}}var j=j||B.errorTimeout,l={},o=0,r=0,u={t:d,s:c,e:f,a:i,x:j};y[c]===1&&(r=1,y[c]=[],l=b.createElement(a)),a=="object"?l.data=c:(l.src=c,l.type=a),l.width=l.height="0",l.onerror=l.onload=l.onreadystatechange=function(){k.call(this,r)},p.splice(e,0,u),a!="img"&&(r||y[c]===2?(t.insertBefore(l,s?null:n),m(k,j)):y[c].push(l))}function j(a,b,c,d,f){return q=0,b=b||"j",e(a)?i(b=="c"?v:u,a,b,this.i++,c,d,f):(p.splice(this.i++,0,a),p.length==1&&h()),this}function k(){var a=B;return a.loader={load:j,i:0},a}var l=b.documentElement,m=a.setTimeout,n=b.getElementsByTagName("script")[0],o={}.toString,p=[],q=0,r="MozAppearance"in l.style,s=r&&!!b.createRange().compareNode,t=s?l:n.parentNode,l=a.opera&&o.call(a.opera)=="[object Opera]",l=!!b.attachEvent&&!l,u=r?"object":l?"script":"img",v=l?"script":u,w=Array.isArray||function(a){return o.call(a)=="[object Array]"},x=[],y={},z={timeout:function(a,b){return b.length&&(a.timeout=b[0]),a}},A,B;B=function(a){function b(a){var a=a.split("!"),b=x.length,c=a.pop(),d=a.length,c={url:c,origUrl:c,prefixes:a},e,f,g;for(f=0;f<d;f++)g=a[f].split("="),(e=z[g.shift()])&&(c=e(c,g));for(f=0;f<b;f++)c=x[f](c);return c}function g(a,e,f,g,i){var j=b(a),l=j.autoCallback;j.url.split(".").pop().split("?").shift(),j.bypass||(e&&(e=d(e)?e:e[a]||e[g]||e[a.split("/").pop().split("?")[0]]||h),j.instead?j.instead(a,e,f,g,i):(y[j.url]?j.noexec=!0:y[j.url]=1,f.load(j.url,j.forceCSS||!j.forceJS&&"css"==j.url.split(".").pop().split("?").shift()?"c":c,j.noexec,j.attrs,j.timeout),(d(e)||d(l))&&f.load(function(){k(),e&&e(j.origUrl,i,g),l&&l(j.origUrl,i,g),y[j.url]=2})))}function i(a,b){function c(a,c){if(a){if(e(a))c||(j=function(){var a=[].slice.call(arguments);k.apply(this,a),l()}),g(a,j,b,0,h);else if(Object(a)===a)for(n in m=function(){var b=0,c;for(c in a)a.hasOwnProperty(c)&&b++;return b}(),a)a.hasOwnProperty(n)&&(!c&&!--m&&(d(j)?j=function(){var a=[].slice.call(arguments);k.apply(this,a),l()}:j[n]=function(a){return function(){var b=[].slice.call(arguments);a&&a.apply(this,b),l()}}(k[n])),g(a[n],j,b,n,h))}else!c&&l()}var h=!!a.test,i=a.load||a.both,j=a.callback||f,k=j,l=a.complete||f,m,n;c(h?a.yep:a.nope,!!i),i&&c(i)}var j,l,m=this.yepnope.loader;if(e(a))g(a,0,m,0);else if(w(a))for(j=0;j<a.length;j++)l=a[j],e(l)?g(l,0,m,0):w(l)?B(l):Object(l)===l&&i(l,m);else Object(a)===a&&i(a,m)},B.addPrefix=function(a,b){z[a]=b},B.addFilter=function(a){x.push(a)},B.errorTimeout=1e4,b.readyState==null&&b.addEventListener&&(b.readyState="loading",b.addEventListener("DOMContentLoaded",A=function(){b.removeEventListener("DOMContentLoaded",A,0),b.readyState="complete"},0)),a.yepnope=k(),a.yepnope.executeStack=h,a.yepnope.injectJs=function(a,c,d,e,i,j){var k=b.createElement("script"),l,o,e=e||B.errorTimeout;k.src=a;for(o in d)k.setAttribute(o,d[o]);c=j?h:c||f,k.onreadystatechange=k.onload=function(){!l&&g(k.readyState)&&(l=1,c(),k.onload=k.onreadystatechange=null)},m(function(){l||(l=1,c(1))},e),i?k.onload():n.parentNode.insertBefore(k,n)},a.yepnope.injectCss=function(a,c,d,e,g,i){var e=b.createElement("link"),j,c=i?h:c||f;e.href=a,e.rel="stylesheet",e.type="text/css";for(j in d)e.setAttribute(j,d[j]);g||(n.parentNode.insertBefore(e,n),m(c,0))}}(this,document),Modernizr.load=function(){yepnope.apply(window,[].slice.call(arguments,0))};
define("modernizr", function(){});

/*!
 * jQuery JavaScript Library v1.8.1
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2012 jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: Thu Aug 30 2012 17:17:22 GMT-0400 (Eastern Daylight Time)
 */
(function( window, undefined ) {
var
	// A central reference to the root jQuery(document)
	rootjQuery,

	// The deferred used on DOM ready
	readyList,

	// Use the correct document accordingly with window argument (sandbox)
	document = window.document,
	location = window.location,
	navigator = window.navigator,

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$,

	// Save a reference to some core methods
	core_push = Array.prototype.push,
	core_slice = Array.prototype.slice,
	core_indexOf = Array.prototype.indexOf,
	core_toString = Object.prototype.toString,
	core_hasOwn = Object.prototype.hasOwnProperty,
	core_trim = String.prototype.trim,

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		return new jQuery.fn.init( selector, context, rootjQuery );
	},

	// Used for matching numbers
	core_pnum = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,

	// Used for detecting and trimming whitespace
	core_rnotwhite = /\S/,
	core_rspace = /\s+/,

	// Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	rquickExpr = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,

	// Match a standalone tag
	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,

	// JSON RegExp
	rvalidchars = /^[\],:{}\s]*$/,
	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,
	rvalidescape = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
	rvalidtokens = /"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return ( letter + "" ).toUpperCase();
	},

	// The ready event handler and self cleanup method
	DOMContentLoaded = function() {
		if ( document.addEventListener ) {
			document.removeEventListener( "DOMContentLoaded", DOMContentLoaded, false );
			jQuery.ready();
		} else if ( document.readyState === "complete" ) {
			// we're here because readyState === "complete" in oldIE
			// which is good enough for us to call the dom ready!
			document.detachEvent( "onreadystatechange", DOMContentLoaded );
			jQuery.ready();
		}
	},

	// [[Class]] -> type pairs
	class2type = {};

jQuery.fn = jQuery.prototype = {
	constructor: jQuery,
	init: function( selector, context, rootjQuery ) {
		var match, elem, ret, doc;

		// Handle $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Handle $(DOMElement)
		if ( selector.nodeType ) {
			this.context = this[0] = selector;
			this.length = 1;
			return this;
		}

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					context = context instanceof jQuery ? context[0] : context;
					doc = ( context && context.nodeType ? context.ownerDocument || context : document );

					// scripts is true for back-compat
					selector = jQuery.parseHTML( match[1], doc, true );
					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
						this.attr.call( selector, context, true );
					}

					return jQuery.merge( this, selector );

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[2] );

					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id !== match[2] ) {
							return rootjQuery.find( selector );
						}

						// Otherwise, we inject the element directly into the jQuery object
						this.length = 1;
						this[0] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || rootjQuery ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return rootjQuery.ready( selector );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	},

	// Start with an empty selector
	selector: "",

	// The current version of jQuery being used
	jquery: "1.8.1",

	// The default length of a jQuery object is 0
	length: 0,

	// The number of elements contained in the matched element set
	size: function() {
		return this.length;
	},

	toArray: function() {
		return core_slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num == null ?

			// Return a 'clean' array
			this.toArray() :

			// Return just the object
			( num < 0 ? this[ this.length + num ] : this[ num ] );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems, name, selector ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		ret.context = this.context;

		if ( name === "find" ) {
			ret.selector = this.selector + ( this.selector ? " " : "" ) + selector;
		} else if ( name ) {
			ret.selector = this.selector + "." + name + "(" + selector + ")";
		}

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},

	ready: function( fn ) {
		// Add the callback
		jQuery.ready.promise().done( fn );

		return this;
	},

	eq: function( i ) {
		i = +i;
		return i === -1 ?
			this.slice( i ) :
			this.slice( i, i + 1 );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	slice: function() {
		return this.pushStack( core_slice.apply( this, arguments ),
			"slice", core_slice.call(arguments).join(",") );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},

	end: function() {
		return this.prevObject || this.constructor(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: core_push,
	sort: [].sort,
	splice: [].splice
};

// Give the init function the jQuery prototype for later instantiation
jQuery.fn.init.prototype = jQuery.fn;

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( length === i ) {
		target = this;
		--i;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	noConflict: function( deep ) {
		if ( window.$ === jQuery ) {
			window.$ = _$;
		}

		if ( deep && window.jQuery === jQuery ) {
			window.jQuery = _jQuery;
		}

		return jQuery;
	},

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
		if ( !document.body ) {
			return setTimeout( jQuery.ready, 1 );
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.trigger ) {
			jQuery( document ).trigger("ready").off("ready");
		}
	},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return jQuery.type(obj) === "function";
	},

	isArray: Array.isArray || function( obj ) {
		return jQuery.type(obj) === "array";
	},

	isWindow: function( obj ) {
		return obj != null && obj == obj.window;
	},

	isNumeric: function( obj ) {
		return !isNaN( parseFloat(obj) ) && isFinite( obj );
	},

	type: function( obj ) {
		return obj == null ?
			String( obj ) :
			class2type[ core_toString.call(obj) ] || "object";
	},

	isPlainObject: function( obj ) {
		// Must be an Object.
		// Because of IE, we also have to check the presence of the constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as well
		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		try {
			// Not own constructor property must be Object
			if ( obj.constructor &&
				!core_hasOwn.call(obj, "constructor") &&
				!core_hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
				return false;
			}
		} catch ( e ) {
			// IE8,9 Will throw exceptions on certain host objects #9897
			return false;
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.

		var key;
		for ( key in obj ) {}

		return key === undefined || core_hasOwn.call( obj, key );
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	error: function( msg ) {
		throw new Error( msg );
	},

	// data: string of html
	// context (optional): If specified, the fragment will be created in this context, defaults to document
	// scripts (optional): If true, will include scripts passed in the html string
	parseHTML: function( data, context, scripts ) {
		var parsed;
		if ( !data || typeof data !== "string" ) {
			return null;
		}
		if ( typeof context === "boolean" ) {
			scripts = context;
			context = 0;
		}
		context = context || document;

		// Single tag
		if ( (parsed = rsingleTag.exec( data )) ) {
			return [ context.createElement( parsed[1] ) ];
		}

		parsed = jQuery.buildFragment( [ data ], context, scripts ? null : [] );
		return jQuery.merge( [],
			(parsed.cacheable ? jQuery.clone( parsed.fragment ) : parsed.fragment).childNodes );
	},

	parseJSON: function( data ) {
		if ( !data || typeof data !== "string") {
			return null;
		}

		// Make sure leading/trailing whitespace is removed (IE can't handle it)
		data = jQuery.trim( data );

		// Attempt to parse using the native JSON parser first
		if ( window.JSON && window.JSON.parse ) {
			return window.JSON.parse( data );
		}

		// Make sure the incoming data is actual JSON
		// Logic borrowed from http://json.org/json2.js
		if ( rvalidchars.test( data.replace( rvalidescape, "@" )
			.replace( rvalidtokens, "]" )
			.replace( rvalidbraces, "")) ) {

			return ( new Function( "return " + data ) )();

		}
		jQuery.error( "Invalid JSON: " + data );
	},

	// Cross-browser xml parsing
	parseXML: function( data ) {
		var xml, tmp;
		if ( !data || typeof data !== "string" ) {
			return null;
		}
		try {
			if ( window.DOMParser ) { // Standard
				tmp = new DOMParser();
				xml = tmp.parseFromString( data , "text/xml" );
			} else { // IE
				xml = new ActiveXObject( "Microsoft.XMLDOM" );
				xml.async = "false";
				xml.loadXML( data );
			}
		} catch( e ) {
			xml = undefined;
		}
		if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
			jQuery.error( "Invalid XML: " + data );
		}
		return xml;
	},

	noop: function() {},

	// Evaluates a script in a global context
	// Workarounds based on findings by Jim Driscoll
	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
	globalEval: function( data ) {
		if ( data && core_rnotwhite.test( data ) ) {
			// We use execScript on Internet Explorer
			// We use an anonymous function so that context is window
			// rather than jQuery in Firefox
			( window.execScript || function( data ) {
				window[ "eval" ].call( window, data );
			} )( data );
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toUpperCase() === name.toUpperCase();
	},

	// args is for internal usage only
	each: function( obj, callback, args ) {
		var name,
			i = 0,
			length = obj.length,
			isObj = length === undefined || jQuery.isFunction( obj );

		if ( args ) {
			if ( isObj ) {
				for ( name in obj ) {
					if ( callback.apply( obj[ name ], args ) === false ) {
						break;
					}
				}
			} else {
				for ( ; i < length; ) {
					if ( callback.apply( obj[ i++ ], args ) === false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isObj ) {
				for ( name in obj ) {
					if ( callback.call( obj[ name ], name, obj[ name ] ) === false ) {
						break;
					}
				}
			} else {
				for ( ; i < length; ) {
					if ( callback.call( obj[ i ], i, obj[ i++ ] ) === false ) {
						break;
					}
				}
			}
		}

		return obj;
	},

	// Use native String.trim function wherever possible
	trim: core_trim && !core_trim.call("\uFEFF\xA0") ?
		function( text ) {
			return text == null ?
				"" :
				core_trim.call( text );
		} :

		// Otherwise use our own trimming functionality
		function( text ) {
			return text == null ?
				"" :
				text.toString().replace( rtrim, "" );
		},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var type,
			ret = results || [];

		if ( arr != null ) {
			// The window, strings (and functions) also have 'length'
			// Tweaked logic slightly to handle Blackberry 4.7 RegExp issues #6930
			type = jQuery.type( arr );

			if ( arr.length == null || type === "string" || type === "function" || type === "regexp" || jQuery.isWindow( arr ) ) {
				core_push.call( ret, arr );
			} else {
				jQuery.merge( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		var len;

		if ( arr ) {
			if ( core_indexOf ) {
				return core_indexOf.call( arr, elem, i );
			}

			len = arr.length;
			i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;

			for ( ; i < len; i++ ) {
				// Skip accessing in sparse arrays
				if ( i in arr && arr[ i ] === elem ) {
					return i;
				}
			}
		}

		return -1;
	},

	merge: function( first, second ) {
		var l = second.length,
			i = first.length,
			j = 0;

		if ( typeof l === "number" ) {
			for ( ; j < l; j++ ) {
				first[ i++ ] = second[ j ];
			}

		} else {
			while ( second[j] !== undefined ) {
				first[ i++ ] = second[ j++ ];
			}
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, inv ) {
		var retVal,
			ret = [],
			i = 0,
			length = elems.length;
		inv = !!inv;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			retVal = !!callback( elems[ i ], i );
			if ( inv !== retVal ) {
				ret.push( elems[ i ] );
			}
		}

		return ret;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var value, key,
			ret = [],
			i = 0,
			length = elems.length,
			// jquery objects are treated as arrays
			isArray = elems instanceof jQuery || length !== undefined && typeof length === "number" && ( ( length > 0 && elems[ 0 ] && elems[ length -1 ] ) || length === 0 || jQuery.isArray( elems ) ) ;

		// Go through the array, translating each of the items to their
		if ( isArray ) {
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}

		// Go through every key on the object,
		} else {
			for ( key in elems ) {
				value = callback( elems[ key ], key, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}
		}

		// Flatten any nested arrays
		return ret.concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = core_slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context, args.concat( core_slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || proxy.guid || jQuery.guid++;

		return proxy;
	},

	// Multifunctional method to get and set values of a collection
	// The value/s can optionally be executed if it's a function
	access: function( elems, fn, key, value, chainable, emptyGet, pass ) {
		var exec,
			bulk = key == null,
			i = 0,
			length = elems.length;

		// Sets many values
		if ( key && typeof key === "object" ) {
			for ( i in key ) {
				jQuery.access( elems, fn, i, key[i], 1, emptyGet, value );
			}
			chainable = 1;

		// Sets one value
		} else if ( value !== undefined ) {
			// Optionally, function values get executed if exec is true
			exec = pass === undefined && jQuery.isFunction( value );

			if ( bulk ) {
				// Bulk operations only iterate when executing function values
				if ( exec ) {
					exec = fn;
					fn = function( elem, key, value ) {
						return exec.call( jQuery( elem ), value );
					};

				// Otherwise they run against the entire set
				} else {
					fn.call( elems, value );
					fn = null;
				}
			}

			if ( fn ) {
				for (; i < length; i++ ) {
					fn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key ) ) : value, pass );
				}
			}

			chainable = 1;
		}

		return chainable ?
			elems :

			// Gets
			bulk ?
				fn.call( elems ) :
				length ? fn( elems[0], key ) : emptyGet;
	},

	now: function() {
		return ( new Date() ).getTime();
	}
});

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called after the browser event has already occurred.
		// we once tried to use readyState "interactive" here, but it caused issues like the one
		// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
		if ( document.readyState === "complete" ) {
			// Handle it asynchronously to allow scripts the opportunity to delay ready
			setTimeout( jQuery.ready, 1 );

		// Standards-based browsers support DOMContentLoaded
		} else if ( document.addEventListener ) {
			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", DOMContentLoaded, false );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", jQuery.ready, false );

		// If IE event model is used
		} else {
			// Ensure firing before onload, maybe late but safe also for iframes
			document.attachEvent( "onreadystatechange", DOMContentLoaded );

			// A fallback to window.onload, that will always work
			window.attachEvent( "onload", jQuery.ready );

			// If IE and not a frame
			// continually check to see if the document is ready
			var top = false;

			try {
				top = window.frameElement == null && document.documentElement;
			} catch(e) {}

			if ( top && top.doScroll ) {
				(function doScrollCheck() {
					if ( !jQuery.isReady ) {

						try {
							// Use the trick by Diego Perini
							// http://javascript.nwbox.com/IEContentLoaded/
							top.doScroll("left");
						} catch(e) {
							return setTimeout( doScrollCheck, 50 );
						}

						// and execute any waiting functions
						jQuery.ready();
					}
				})();
			}
		}
	}
	return readyList.promise( obj );
};

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(i, name) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

// All jQuery objects should point back to these
rootjQuery = jQuery(document);
// String to Object options format cache
var optionsCache = {};

// Convert String-formatted options into Object-formatted ones and store in cache
function createOptions( options ) {
	var object = optionsCache[ options ] = {};
	jQuery.each( options.split( core_rspace ), function( _, flag ) {
		object[ flag ] = true;
	});
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		( optionsCache[ options ] || createOptions( options ) ) :
		jQuery.extend( {}, options );

	var // Last fire value (for non-forgettable lists)
		memory,
		// Flag to know if list was already fired
		fired,
		// Flag to know if list is currently firing
		firing,
		// First callback to fire (used internally by add and fireWith)
		firingStart,
		// End of the loop when firing
		firingLength,
		// Index of currently firing callback (modified by remove if needed)
		firingIndex,
		// Actual callback list
		list = [],
		// Stack of fire calls for repeatable lists
		stack = !options.once && [],
		// Fire callbacks
		fire = function( data ) {
			memory = options.memory && data;
			fired = true;
			firingIndex = firingStart || 0;
			firingStart = 0;
			firingLength = list.length;
			firing = true;
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
					memory = false; // To prevent further calls using add
					break;
				}
			}
			firing = false;
			if ( list ) {
				if ( stack ) {
					if ( stack.length ) {
						fire( stack.shift() );
					}
				} else if ( memory ) {
					list = [];
				} else {
					self.disable();
				}
			}
		},
		// Actual Callbacks object
		self = {
			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {
					// First, we save the current length
					var start = list.length;
					(function add( args ) {
						jQuery.each( args, function( _, arg ) {
							var type = jQuery.type( arg );
							if ( type === "function" && ( !options.unique || !self.has( arg ) ) ) {
								list.push( arg );
							} else if ( arg && arg.length && type !== "string" ) {
								// Inspect recursively
								add( arg );
							}
						});
					})( arguments );
					// Do we need to add the callbacks to the
					// current firing batch?
					if ( firing ) {
						firingLength = list.length;
					// With memory, if we're not firing then
					// we should call right away
					} else if ( memory ) {
						firingStart = start;
						fire( memory );
					}
				}
				return this;
			},
			// Remove a callback from the list
			remove: function() {
				if ( list ) {
					jQuery.each( arguments, function( _, arg ) {
						var index;
						while( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
							list.splice( index, 1 );
							// Handle firing indexes
							if ( firing ) {
								if ( index <= firingLength ) {
									firingLength--;
								}
								if ( index <= firingIndex ) {
									firingIndex--;
								}
							}
						}
					});
				}
				return this;
			},
			// Control if a given callback is in the list
			has: function( fn ) {
				return jQuery.inArray( fn, list ) > -1;
			},
			// Remove all callbacks from the list
			empty: function() {
				list = [];
				return this;
			},
			// Have the list do nothing anymore
			disable: function() {
				list = stack = memory = undefined;
				return this;
			},
			// Is it disabled?
			disabled: function() {
				return !list;
			},
			// Lock the list in its current state
			lock: function() {
				stack = undefined;
				if ( !memory ) {
					self.disable();
				}
				return this;
			},
			// Is it locked?
			locked: function() {
				return !stack;
			},
			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				args = args || [];
				args = [ context, args.slice ? args.slice() : args ];
				if ( list && ( !fired || stack ) ) {
					if ( firing ) {
						stack.push( args );
					} else {
						fire( args );
					}
				}
				return this;
			},
			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},
			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};
jQuery.extend({

	Deferred: function( func ) {
		var tuples = [
				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks("memory") ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred(function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var action = tuple[ 0 ],
								fn = fns[ i ];
							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[1] ]( jQuery.isFunction( fn ) ?
								function() {
									var returned = fn.apply( this, arguments );
									if ( returned && jQuery.isFunction( returned.promise ) ) {
										returned.promise()
											.done( newDefer.resolve )
											.fail( newDefer.reject )
											.progress( newDefer.notify );
									} else {
										newDefer[ action + "With" ]( this === deferred ? newDefer : this, [ returned ] );
									}
								} :
								newDefer[ action ]
							);
						});
						fns = null;
					}).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return typeof obj === "object" ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[1] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(function() {
					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ] = list.fire
			deferred[ tuple[0] ] = list.fire;
			deferred[ tuple[0] + "With" ] = list.fireWith;
		});

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = core_slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? core_slice.call( arguments ) : value;
					if( values === progressValues ) {
						deferred.notifyWith( contexts, values );
					} else if ( !( --remaining ) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject )
						.progress( updateFunc( i, progressContexts, progressValues ) );
				} else {
					--remaining;
				}
			}
		}

		// if we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
});
jQuery.support = (function() {

	var support,
		all,
		a,
		select,
		opt,
		input,
		fragment,
		eventName,
		i,
		isSupported,
		clickFn,
		div = document.createElement("div");

	// Preliminary tests
	div.setAttribute( "className", "t" );
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";

	all = div.getElementsByTagName("*");
	a = div.getElementsByTagName("a")[ 0 ];
	a.style.cssText = "top:1px;float:left;opacity:.5";

	// Can't get basic test support
	if ( !all || !all.length || !a ) {
		return {};
	}

	// First batch of supports tests
	select = document.createElement("select");
	opt = select.appendChild( document.createElement("option") );
	input = div.getElementsByTagName("input")[ 0 ];

	support = {
		// IE strips leading whitespace when .innerHTML is used
		leadingWhitespace: ( div.firstChild.nodeType === 3 ),

		// Make sure that tbody elements aren't automatically inserted
		// IE will insert them into empty tables
		tbody: !div.getElementsByTagName("tbody").length,

		// Make sure that link elements get serialized correctly by innerHTML
		// This requires a wrapper element in IE
		htmlSerialize: !!div.getElementsByTagName("link").length,

		// Get the style information from getAttribute
		// (IE uses .cssText instead)
		style: /top/.test( a.getAttribute("style") ),

		// Make sure that URLs aren't manipulated
		// (IE normalizes it by default)
		hrefNormalized: ( a.getAttribute("href") === "/a" ),

		// Make sure that element opacity exists
		// (IE uses filter instead)
		// Use a regex to work around a WebKit issue. See #5145
		opacity: /^0.5/.test( a.style.opacity ),

		// Verify style float existence
		// (IE uses styleFloat instead of cssFloat)
		cssFloat: !!a.style.cssFloat,

		// Make sure that if no value is specified for a checkbox
		// that it defaults to "on".
		// (WebKit defaults to "" instead)
		checkOn: ( input.value === "on" ),

		// Make sure that a selected-by-default option has a working selected property.
		// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
		optSelected: opt.selected,

		// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)
		getSetAttribute: div.className !== "t",

		// Tests for enctype support on a form(#6743)
		enctype: !!document.createElement("form").enctype,

		// Makes sure cloning an html5 element does not cause problems
		// Where outerHTML is undefined, this still works
		html5Clone: document.createElement("nav").cloneNode( true ).outerHTML !== "<:nav></:nav>",

		// jQuery.support.boxModel DEPRECATED in 1.8 since we don't support Quirks Mode
		boxModel: ( document.compatMode === "CSS1Compat" ),

		// Will be defined later
		submitBubbles: true,
		changeBubbles: true,
		focusinBubbles: false,
		deleteExpando: true,
		noCloneEvent: true,
		inlineBlockNeedsLayout: false,
		shrinkWrapBlocks: false,
		reliableMarginRight: true,
		boxSizingReliable: true,
		pixelPosition: false
	};

	// Make sure checked status is properly cloned
	input.checked = true;
	support.noCloneChecked = input.cloneNode( true ).checked;

	// Make sure that the options inside disabled selects aren't marked as disabled
	// (WebKit marks them as disabled)
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Test to see if it's possible to delete an expando from an element
	// Fails in Internet Explorer
	try {
		delete div.test;
	} catch( e ) {
		support.deleteExpando = false;
	}

	if ( !div.addEventListener && div.attachEvent && div.fireEvent ) {
		div.attachEvent( "onclick", clickFn = function() {
			// Cloning a node shouldn't copy over any
			// bound event handlers (IE does this)
			support.noCloneEvent = false;
		});
		div.cloneNode( true ).fireEvent("onclick");
		div.detachEvent( "onclick", clickFn );
	}

	// Check if a radio maintains its value
	// after being appended to the DOM
	input = document.createElement("input");
	input.value = "t";
	input.setAttribute( "type", "radio" );
	support.radioValue = input.value === "t";

	input.setAttribute( "checked", "checked" );

	// #11217 - WebKit loses check when the name is after the checked attribute
	input.setAttribute( "name", "t" );

	div.appendChild( input );
	fragment = document.createDocumentFragment();
	fragment.appendChild( div.lastChild );

	// WebKit doesn't clone checked state correctly in fragments
	support.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Check if a disconnected checkbox will retain its checked
	// value of true after appended to the DOM (IE6/7)
	support.appendChecked = input.checked;

	fragment.removeChild( input );
	fragment.appendChild( div );

	// Technique from Juriy Zaytsev
	// http://perfectionkills.com/detecting-event-support-without-browser-sniffing/
	// We only care about the case where non-standard event systems
	// are used, namely in IE. Short-circuiting here helps us to
	// avoid an eval call (in setAttribute) which can cause CSP
	// to go haywire. See: https://developer.mozilla.org/en/Security/CSP
	if ( div.attachEvent ) {
		for ( i in {
			submit: true,
			change: true,
			focusin: true
		}) {
			eventName = "on" + i;
			isSupported = ( eventName in div );
			if ( !isSupported ) {
				div.setAttribute( eventName, "return;" );
				isSupported = ( typeof div[ eventName ] === "function" );
			}
			support[ i + "Bubbles" ] = isSupported;
		}
	}

	// Run tests that need a body at doc ready
	jQuery(function() {
		var container, div, tds, marginDiv,
			divReset = "padding:0;margin:0;border:0;display:block;overflow:hidden;",
			body = document.getElementsByTagName("body")[0];

		if ( !body ) {
			// Return for frameset docs that don't have a body
			return;
		}

		container = document.createElement("div");
		container.style.cssText = "visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px";
		body.insertBefore( container, body.firstChild );

		// Construct the test element
		div = document.createElement("div");
		container.appendChild( div );

		// Check if table cells still have offsetWidth/Height when they are set
		// to display:none and there are still other visible table cells in a
		// table row; if so, offsetWidth/Height are not reliable for use when
		// determining if an element has been hidden directly using
		// display:none (it is still safe to use offsets if a parent element is
		// hidden; don safety goggles and see bug #4512 for more information).
		// (only IE 8 fails this test)
		div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
		tds = div.getElementsByTagName("td");
		tds[ 0 ].style.cssText = "padding:0;margin:0;border:0;display:none";
		isSupported = ( tds[ 0 ].offsetHeight === 0 );

		tds[ 0 ].style.display = "";
		tds[ 1 ].style.display = "none";

		// Check if empty table cells still have offsetWidth/Height
		// (IE <= 8 fail this test)
		support.reliableHiddenOffsets = isSupported && ( tds[ 0 ].offsetHeight === 0 );

		// Check box-sizing and margin behavior
		div.innerHTML = "";
		div.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;";
		support.boxSizing = ( div.offsetWidth === 4 );
		support.doesNotIncludeMarginInBodyOffset = ( body.offsetTop !== 1 );

		// NOTE: To any future maintainer, we've window.getComputedStyle
		// because jsdom on node.js will break without it.
		if ( window.getComputedStyle ) {
			support.pixelPosition = ( window.getComputedStyle( div, null ) || {} ).top !== "1%";
			support.boxSizingReliable = ( window.getComputedStyle( div, null ) || { width: "4px" } ).width === "4px";

			// Check if div with explicit width and no margin-right incorrectly
			// gets computed margin-right based on width of container. For more
			// info see bug #3333
			// Fails in WebKit before Feb 2011 nightlies
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			marginDiv = document.createElement("div");
			marginDiv.style.cssText = div.style.cssText = divReset;
			marginDiv.style.marginRight = marginDiv.style.width = "0";
			div.style.width = "1px";
			div.appendChild( marginDiv );
			support.reliableMarginRight =
				!parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} ).marginRight );
		}

		if ( typeof div.style.zoom !== "undefined" ) {
			// Check if natively block-level elements act like inline-block
			// elements when setting their display to 'inline' and giving
			// them layout
			// (IE < 8 does this)
			div.innerHTML = "";
			div.style.cssText = divReset + "width:1px;padding:1px;display:inline;zoom:1";
			support.inlineBlockNeedsLayout = ( div.offsetWidth === 3 );

			// Check if elements with layout shrink-wrap their children
			// (IE 6 does this)
			div.style.display = "block";
			div.style.overflow = "visible";
			div.innerHTML = "<div></div>";
			div.firstChild.style.width = "5px";
			support.shrinkWrapBlocks = ( div.offsetWidth !== 3 );

			container.style.zoom = 1;
		}

		// Null elements to avoid leaks in IE
		body.removeChild( container );
		container = div = tds = marginDiv = null;
	});

	// Null elements to avoid leaks in IE
	fragment.removeChild( div );
	all = a = select = opt = input = fragment = div = null;

	return support;
})();
var rbrace = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/,
	rmultiDash = /([A-Z])/g;

jQuery.extend({
	cache: {},

	deletedIds: [],

	// Please use with caution
	uuid: 0,

	// Unique for each copy of jQuery on the page
	// Non-digits removed to match rinlinejQuery
	expando: "jQuery" + ( jQuery.fn.jquery + Math.random() ).replace( /\D/g, "" ),

	// The following elements throw uncatchable exceptions if you
	// attempt to add expando properties to them.
	noData: {
		"embed": true,
		// Ban all objects except for Flash (which handle expandos)
		"object": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
		"applet": true
	},

	hasData: function( elem ) {
		elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];
		return !!elem && !isEmptyDataObject( elem );
	},

	data: function( elem, name, data, pvt /* Internal Use Only */ ) {
		if ( !jQuery.acceptData( elem ) ) {
			return;
		}

		var thisCache, ret,
			internalKey = jQuery.expando,
			getByName = typeof name === "string",

			// We have to handle DOM nodes and JS objects differently because IE6-7
			// can't GC object references properly across the DOM-JS boundary
			isNode = elem.nodeType,

			// Only DOM nodes need the global jQuery cache; JS object data is
			// attached directly to the object so GC can occur automatically
			cache = isNode ? jQuery.cache : elem,

			// Only defining an ID for JS objects if its cache already exists allows
			// the code to shortcut on the same path as a DOM node with no cache
			id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;

		// Avoid doing any more work than we need to when trying to get data on an
		// object that has no data at all
		if ( (!id || !cache[id] || (!pvt && !cache[id].data)) && getByName && data === undefined ) {
			return;
		}

		if ( !id ) {
			// Only DOM nodes need a new unique ID for each element since their data
			// ends up in the global cache
			if ( isNode ) {
				elem[ internalKey ] = id = jQuery.deletedIds.pop() || ++jQuery.uuid;
			} else {
				id = internalKey;
			}
		}

		if ( !cache[ id ] ) {
			cache[ id ] = {};

			// Avoids exposing jQuery metadata on plain JS objects when the object
			// is serialized using JSON.stringify
			if ( !isNode ) {
				cache[ id ].toJSON = jQuery.noop;
			}
		}

		// An object can be passed to jQuery.data instead of a key/value pair; this gets
		// shallow copied over onto the existing cache
		if ( typeof name === "object" || typeof name === "function" ) {
			if ( pvt ) {
				cache[ id ] = jQuery.extend( cache[ id ], name );
			} else {
				cache[ id ].data = jQuery.extend( cache[ id ].data, name );
			}
		}

		thisCache = cache[ id ];

		// jQuery data() is stored in a separate object inside the object's internal data
		// cache in order to avoid key collisions between internal data and user-defined
		// data.
		if ( !pvt ) {
			if ( !thisCache.data ) {
				thisCache.data = {};
			}

			thisCache = thisCache.data;
		}

		if ( data !== undefined ) {
			thisCache[ jQuery.camelCase( name ) ] = data;
		}

		// Check for both converted-to-camel and non-converted data property names
		// If a data property was specified
		if ( getByName ) {

			// First Try to find as-is property data
			ret = thisCache[ name ];

			// Test for null|undefined property data
			if ( ret == null ) {

				// Try to find the camelCased property
				ret = thisCache[ jQuery.camelCase( name ) ];
			}
		} else {
			ret = thisCache;
		}

		return ret;
	},

	removeData: function( elem, name, pvt /* Internal Use Only */ ) {
		if ( !jQuery.acceptData( elem ) ) {
			return;
		}

		var thisCache, i, l,

			isNode = elem.nodeType,

			// See jQuery.data for more information
			cache = isNode ? jQuery.cache : elem,
			id = isNode ? elem[ jQuery.expando ] : jQuery.expando;

		// If there is already no cache entry for this object, there is no
		// purpose in continuing
		if ( !cache[ id ] ) {
			return;
		}

		if ( name ) {

			thisCache = pvt ? cache[ id ] : cache[ id ].data;

			if ( thisCache ) {

				// Support array or space separated string names for data keys
				if ( !jQuery.isArray( name ) ) {

					// try the string as a key before any manipulation
					if ( name in thisCache ) {
						name = [ name ];
					} else {

						// split the camel cased version by spaces unless a key with the spaces exists
						name = jQuery.camelCase( name );
						if ( name in thisCache ) {
							name = [ name ];
						} else {
							name = name.split(" ");
						}
					}
				}

				for ( i = 0, l = name.length; i < l; i++ ) {
					delete thisCache[ name[i] ];
				}

				// If there is no data left in the cache, we want to continue
				// and let the cache object itself get destroyed
				if ( !( pvt ? isEmptyDataObject : jQuery.isEmptyObject )( thisCache ) ) {
					return;
				}
			}
		}

		// See jQuery.data for more information
		if ( !pvt ) {
			delete cache[ id ].data;

			// Don't destroy the parent cache unless the internal data object
			// had been the only thing left in it
			if ( !isEmptyDataObject( cache[ id ] ) ) {
				return;
			}
		}

		// Destroy the cache
		if ( isNode ) {
			jQuery.cleanData( [ elem ], true );

		// Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)
		} else if ( jQuery.support.deleteExpando || cache != cache.window ) {
			delete cache[ id ];

		// When all else fails, null
		} else {
			cache[ id ] = null;
		}
	},

	// For internal use only.
	_data: function( elem, name, data ) {
		return jQuery.data( elem, name, data, true );
	},

	// A method for determining if a DOM node can handle the data expando
	acceptData: function( elem ) {
		var noData = elem.nodeName && jQuery.noData[ elem.nodeName.toLowerCase() ];

		// nodes accept data unless otherwise specified; rejection can be conditional
		return !noData || noData !== true && elem.getAttribute("classid") === noData;
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		var parts, part, attr, name, l,
			elem = this[0],
			i = 0,
			data = null;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = jQuery.data( elem );

				if ( elem.nodeType === 1 && !jQuery._data( elem, "parsedAttrs" ) ) {
					attr = elem.attributes;
					for ( l = attr.length; i < l; i++ ) {
						name = attr[i].name;

						if ( name.indexOf( "data-" ) === 0 ) {
							name = jQuery.camelCase( name.substring(5) );

							dataAttr( elem, name, data[ name ] );
						}
					}
					jQuery._data( elem, "parsedAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each(function() {
				jQuery.data( this, key );
			});
		}

		parts = key.split( ".", 2 );
		parts[1] = parts[1] ? "." + parts[1] : "";
		part = parts[1] + "!";

		return jQuery.access( this, function( value ) {

			if ( value === undefined ) {
				data = this.triggerHandler( "getData" + part, [ parts[0] ] );

				// Try to fetch any internally stored data first
				if ( data === undefined && elem ) {
					data = jQuery.data( elem, key );
					data = dataAttr( elem, key, data );
				}

				return data === undefined && parts[1] ?
					this.data( parts[0] ) :
					data;
			}

			parts[1] = value;
			this.each(function() {
				var self = jQuery( this );

				self.triggerHandler( "setData" + part, parts );
				jQuery.data( this, key, value );
				self.triggerHandler( "changeData" + part, parts );
			});
		}, null, value, arguments.length > 1, null, false );
	},

	removeData: function( key ) {
		return this.each(function() {
			jQuery.removeData( this, key );
		});
	}
});

function dataAttr( elem, key, data ) {
	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {

		var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();

		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
				data === "false" ? false :
				data === "null" ? null :
				// Only convert to a number if it doesn't change the string
				+data + "" === data ? +data :
				rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch( e ) {}

			// Make sure we set the data so it isn't changed later
			jQuery.data( elem, key, data );

		} else {
			data = undefined;
		}
	}

	return data;
}

// checks a cache object for emptiness
function isEmptyDataObject( obj ) {
	var name;
	for ( name in obj ) {

		// if the public data object is empty, the private is still empty
		if ( name === "data" && jQuery.isEmptyObject( obj[name] ) ) {
			continue;
		}
		if ( name !== "toJSON" ) {
			return false;
		}
	}

	return true;
}
jQuery.extend({
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = jQuery._data( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray(data) ) {
					queue = jQuery._data( elem, type, jQuery.makeArray(data) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// not intended for public consumption - generates a queueHooks object, or returns the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return jQuery._data( elem, key ) || jQuery._data( elem, key, {
			empty: jQuery.Callbacks("once memory").add(function() {
				jQuery.removeData( elem, type + "queue", true );
				jQuery.removeData( elem, key, true );
			})
		});
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[0], type );
		}

		return data === undefined ?
			this :
			this.each(function() {
				var queue = jQuery.queue( this, type, data );

				// ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[0] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},
	// Based off of the plugin by Clint Helfers, with permission.
	// http://blindsignals.com/index.php/2009/07/jquery-delay/
	delay: function( time, type ) {
		time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
		type = type || "fx";

		return this.queue( type, function( next, hooks ) {
			var timeout = setTimeout( next, time );
			hooks.stop = function() {
				clearTimeout( timeout );
			};
		});
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},
	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while( i-- ) {
			tmp = jQuery._data( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
});
var nodeHook, boolHook, fixSpecified,
	rclass = /[\t\r\n]/g,
	rreturn = /\r/g,
	rtype = /^(?:button|input)$/i,
	rfocusable = /^(?:button|input|object|select|textarea)$/i,
	rclickable = /^a(?:rea|)$/i,
	rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
	getSetAttribute = jQuery.support.getSetAttribute;

jQuery.fn.extend({
	attr: function( name, value ) {
		return jQuery.access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each(function() {
			jQuery.removeAttr( this, name );
		});
	},

	prop: function( name, value ) {
		return jQuery.access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		name = jQuery.propFix[ name ] || name;
		return this.each(function() {
			// try/catch handles cases where IE balks (such as removing a property on window)
			try {
				this[ name ] = undefined;
				delete this[ name ];
			} catch( e ) {}
		});
	},

	addClass: function( value ) {
		var classNames, i, l, elem,
			setClass, c, cl;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).addClass( value.call(this, j, this.className) );
			});
		}

		if ( value && typeof value === "string" ) {
			classNames = value.split( core_rspace );

			for ( i = 0, l = this.length; i < l; i++ ) {
				elem = this[ i ];

				if ( elem.nodeType === 1 ) {
					if ( !elem.className && classNames.length === 1 ) {
						elem.className = value;

					} else {
						setClass = " " + elem.className + " ";

						for ( c = 0, cl = classNames.length; c < cl; c++ ) {
							if ( !~setClass.indexOf( " " + classNames[ c ] + " " ) ) {
								setClass += classNames[ c ] + " ";
							}
						}
						elem.className = jQuery.trim( setClass );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var removes, className, elem, c, cl, i, l;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).removeClass( value.call(this, j, this.className) );
			});
		}
		if ( (value && typeof value === "string") || value === undefined ) {
			removes = ( value || "" ).split( core_rspace );

			for ( i = 0, l = this.length; i < l; i++ ) {
				elem = this[ i ];
				if ( elem.nodeType === 1 && elem.className ) {

					className = (" " + elem.className + " ").replace( rclass, " " );

					// loop over each item in the removal list
					for ( c = 0, cl = removes.length; c < cl; c++ ) {
						// Remove until there is nothing to remove,
						while ( className.indexOf(" " + removes[ c ] + " ") > -1 ) {
							className = className.replace( " " + removes[ c ] + " " , " " );
						}
					}
					elem.className = value ? jQuery.trim( className ) : "";
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isBool = typeof stateVal === "boolean";

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( i ) {
				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
			});
		}

		return this.each(function() {
			if ( type === "string" ) {
				// toggle individual class names
				var className,
					i = 0,
					self = jQuery( this ),
					state = stateVal,
					classNames = value.split( core_rspace );

				while ( (className = classNames[ i++ ]) ) {
					// check each className given, space separated list
					state = isBool ? state : !self.hasClass( className );
					self[ state ? "addClass" : "removeClass" ]( className );
				}

			} else if ( type === "undefined" || type === "boolean" ) {
				if ( this.className ) {
					// store className if set
					jQuery._data( this, "__className__", this.className );
				}

				// toggle whole className
				this.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className = " " + selector + " ",
			i = 0,
			l = this.length;
		for ( ; i < l; i++ ) {
			if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) > -1 ) {
				return true;
			}
		}

		return false;
	},

	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[0];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?
					// handle most common string cases
					ret.replace(rreturn, "") :
					// handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each(function( i ) {
			var val,
				self = jQuery(this);

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, self.val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";
			} else if ( typeof val === "number" ) {
				val += "";
			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map(val, function ( value ) {
					return value == null ? "" : value + "";
				});
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		});
	}
});

jQuery.extend({
	valHooks: {
		option: {
			get: function( elem ) {
				// attributes.value is undefined in Blackberry 4.7 but
				// uses .value. See #6932
				var val = elem.attributes.value;
				return !val || val.specified ? elem.value : elem.text;
			}
		},
		select: {
			get: function( elem ) {
				var value, i, max, option,
					index = elem.selectedIndex,
					values = [],
					options = elem.options,
					one = elem.type === "select-one";

				// Nothing was selected
				if ( index < 0 ) {
					return null;
				}

				// Loop through all the selected options
				i = one ? index : 0;
				max = one ? index + 1 : options.length;
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Don't return options that are disabled or in a disabled optgroup
					if ( option.selected && (jQuery.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null) &&
							(!option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" )) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				// Fixes Bug #2551 -- select.val() broken in IE after form.reset()
				if ( one && !values.length && options.length ) {
					return jQuery( options[ index ] ).val();
				}

				return values;
			},

			set: function( elem, value ) {
				var values = jQuery.makeArray( value );

				jQuery(elem).find("option").each(function() {
					this.selected = jQuery.inArray( jQuery(this).val(), values ) >= 0;
				});

				if ( !values.length ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	},

	// Unused in 1.8, left in so attrFn-stabbers won't die; remove in 1.9
	attrFn: {},

	attr: function( elem, name, value, pass ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set attributes on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( pass && jQuery.isFunction( jQuery.fn[ name ] ) ) {
			return jQuery( elem )[ name ]( value );
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( notxml ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] || ( rboolean.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {

			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;

			} else if ( hooks && "set" in hooks && notxml && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				elem.setAttribute( name, "" + value );
				return value;
			}

		} else if ( hooks && "get" in hooks && notxml && (ret = hooks.get( elem, name )) !== null ) {
			return ret;

		} else {

			ret = elem.getAttribute( name );

			// Non-existent attributes return null, we normalize to undefined
			return ret === null ?
				undefined :
				ret;
		}
	},

	removeAttr: function( elem, value ) {
		var propName, attrNames, name, isBool,
			i = 0;

		if ( value && elem.nodeType === 1 ) {

			attrNames = value.split( core_rspace );

			for ( ; i < attrNames.length; i++ ) {
				name = attrNames[ i ];

				if ( name ) {
					propName = jQuery.propFix[ name ] || name;
					isBool = rboolean.test( name );

					// See #9699 for explanation of this approach (setting first, then removal)
					// Do not do this for boolean attributes (see #10870)
					if ( !isBool ) {
						jQuery.attr( elem, name, "" );
					}
					elem.removeAttribute( getSetAttribute ? name : propName );

					// Set corresponding property to false for boolean attributes
					if ( isBool && propName in elem ) {
						elem[ propName ] = false;
					}
				}
			}
		}
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				// We can't allow the type property to be changed (since it causes problems in IE)
				if ( rtype.test( elem.nodeName ) && elem.parentNode ) {
					jQuery.error( "type property can't be changed" );
				} else if ( !jQuery.support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
					// Setting the type on a radio button after the value resets the value in IE6-9
					// Reset value to it's default in case type is set after value
					// This is for element creation
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		},
		// Use the value property for back compat
		// Use the nodeHook for button elements in IE6/7 (#1954)
		value: {
			get: function( elem, name ) {
				if ( nodeHook && jQuery.nodeName( elem, "button" ) ) {
					return nodeHook.get( elem, name );
				}
				return name in elem ?
					elem.value :
					null;
			},
			set: function( elem, value, name ) {
				if ( nodeHook && jQuery.nodeName( elem, "button" ) ) {
					return nodeHook.set( elem, value, name );
				}
				// Does not return so that setAttribute is also used
				elem.value = value;
			}
		}
	},

	propFix: {
		tabindex: "tabIndex",
		readonly: "readOnly",
		"for": "htmlFor",
		"class": "className",
		maxlength: "maxLength",
		cellspacing: "cellSpacing",
		cellpadding: "cellPadding",
		rowspan: "rowSpan",
		colspan: "colSpan",
		usemap: "useMap",
		frameborder: "frameBorder",
		contenteditable: "contentEditable"
	},

	prop: function( elem, name, value ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set properties on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		if ( notxml ) {
			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				return ( elem[ name ] = value );
			}

		} else {
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
				return ret;

			} else {
				return elem[ name ];
			}
		}
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {
				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				var attributeNode = elem.getAttributeNode("tabindex");

				return attributeNode && attributeNode.specified ?
					parseInt( attributeNode.value, 10 ) :
					rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?
						0 :
						undefined;
			}
		}
	}
});

// Hook for boolean attributes
boolHook = {
	get: function( elem, name ) {
		// Align boolean attributes with corresponding properties
		// Fall back to attribute presence where some booleans are not supported
		var attrNode,
			property = jQuery.prop( elem, name );
		return property === true || typeof property !== "boolean" && ( attrNode = elem.getAttributeNode(name) ) && attrNode.nodeValue !== false ?
			name.toLowerCase() :
			undefined;
	},
	set: function( elem, value, name ) {
		var propName;
		if ( value === false ) {
			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			// value is true since we know at this point it's type boolean and not false
			// Set boolean attributes to the same name and set the DOM property
			propName = jQuery.propFix[ name ] || name;
			if ( propName in elem ) {
				// Only set the IDL specifically if it already exists on the element
				elem[ propName ] = true;
			}

			elem.setAttribute( name, name.toLowerCase() );
		}
		return name;
	}
};

// IE6/7 do not support getting/setting some attributes with get/setAttribute
if ( !getSetAttribute ) {

	fixSpecified = {
		name: true,
		id: true,
		coords: true
	};

	// Use this for any attribute in IE6/7
	// This fixes almost every IE6/7 issue
	nodeHook = jQuery.valHooks.button = {
		get: function( elem, name ) {
			var ret;
			ret = elem.getAttributeNode( name );
			return ret && ( fixSpecified[ name ] ? ret.value !== "" : ret.specified ) ?
				ret.value :
				undefined;
		},
		set: function( elem, value, name ) {
			// Set the existing or create a new attribute node
			var ret = elem.getAttributeNode( name );
			if ( !ret ) {
				ret = document.createAttribute( name );
				elem.setAttributeNode( ret );
			}
			return ( ret.value = value + "" );
		}
	};

	// Set width and height to auto instead of 0 on empty string( Bug #8150 )
	// This is for removals
	jQuery.each([ "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {
			set: function( elem, value ) {
				if ( value === "" ) {
					elem.setAttribute( name, "auto" );
					return value;
				}
			}
		});
	});

	// Set contenteditable to false on removals(#10429)
	// Setting to empty string throws an error as an invalid value
	jQuery.attrHooks.contenteditable = {
		get: nodeHook.get,
		set: function( elem, value, name ) {
			if ( value === "" ) {
				value = "false";
			}
			nodeHook.set( elem, value, name );
		}
	};
}


// Some attributes require a special call on IE
if ( !jQuery.support.hrefNormalized ) {
	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {
			get: function( elem ) {
				var ret = elem.getAttribute( name, 2 );
				return ret === null ? undefined : ret;
			}
		});
	});
}

if ( !jQuery.support.style ) {
	jQuery.attrHooks.style = {
		get: function( elem ) {
			// Return undefined in the case of empty string
			// Normalize to lowercase since IE uppercases css property names
			return elem.style.cssText.toLowerCase() || undefined;
		},
		set: function( elem, value ) {
			return ( elem.style.cssText = "" + value );
		}
	};
}

// Safari mis-reports the default selected property of an option
// Accessing the parent's selectedIndex property fixes it
if ( !jQuery.support.optSelected ) {
	jQuery.propHooks.selected = jQuery.extend( jQuery.propHooks.selected, {
		get: function( elem ) {
			var parent = elem.parentNode;

			if ( parent ) {
				parent.selectedIndex;

				// Make sure that it also works with optgroups, see #5701
				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
			return null;
		}
	});
}

// IE6/7 call enctype encoding
if ( !jQuery.support.enctype ) {
	jQuery.propFix.enctype = "encoding";
}

// Radios and checkboxes getter/setter
if ( !jQuery.support.checkOn ) {
	jQuery.each([ "radio", "checkbox" ], function() {
		jQuery.valHooks[ this ] = {
			get: function( elem ) {
				// Handle the case where in Webkit "" is returned instead of "on" if a value isn't specified
				return elem.getAttribute("value") === null ? "on" : elem.value;
			}
		};
	});
}
jQuery.each([ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = jQuery.extend( jQuery.valHooks[ this ], {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
			}
		}
	});
});
var rformElems = /^(?:textarea|input|select)$/i,
	rtypenamespace = /^([^\.]*|)(?:\.(.+)|)$/,
	rhoverHack = /(?:^|\s)hover(\.\S+|)\b/,
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|contextmenu)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	hoverHack = function( events ) {
		return jQuery.event.special.hover ? events : events.replace( rhoverHack, "mouseenter$1 mouseleave$1" );
	};

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	add: function( elem, types, handler, data, selector ) {

		var elemData, eventHandle, events,
			t, tns, type, namespaces, handleObj,
			handleObjIn, handlers, special;

		// Don't attach events to noData or text/comment nodes (allow plain objects tho)
		if ( elem.nodeType === 3 || elem.nodeType === 8 || !types || !handler || !(elemData = jQuery._data( elem )) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		events = elemData.events;
		if ( !events ) {
			elemData.events = events = {};
		}
		eventHandle = elemData.handle;
		if ( !eventHandle ) {
			elemData.handle = eventHandle = function( e ) {
				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && (!e || jQuery.event.triggered !== e.type) ?
					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
					undefined;
			};
			// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events
			eventHandle.elem = elem;
		}

		// Handle multiple events separated by a space
		// jQuery(...).bind("mouseover mouseout", fn);
		types = jQuery.trim( hoverHack(types) ).split( " " );
		for ( t = 0; t < types.length; t++ ) {

			tns = rtypenamespace.exec( types[t] ) || [];
			type = tns[1];
			namespaces = ( tns[2] || "" ).split( "." ).sort();

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend({
				type: type,
				origType: tns[1],
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				namespace: namespaces.join(".")
			}, handleObjIn );

			// Init the event handler queue if we're the first
			handlers = events[ type ];
			if ( !handlers ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener/attachEvent if the special events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					// Bind the global event handler to the element
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );

					} else if ( elem.attachEvent ) {
						elem.attachEvent( "on" + type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem = null;
	},

	global: {},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var t, tns, type, origType, namespaces, origCount,
			j, events, special, eventType, handleObj,
			elemData = jQuery.hasData( elem ) && jQuery._data( elem );

		if ( !elemData || !(events = elemData.events) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = jQuery.trim( hoverHack( types || "" ) ).split(" ");
		for ( t = 0; t < types.length; t++ ) {
			tns = rtypenamespace.exec( types[t] ) || [];
			type = origType = tns[1];
			namespaces = tns[2];

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector? special.delegateType : special.bindType ) || type;
			eventType = events[ type ] || [];
			origCount = eventType.length;
			namespaces = namespaces ? new RegExp("(^|\\.)" + namespaces.split(".").sort().join("\\.(?:.*\\.|)") + "(\\.|$)") : null;

			// Remove matching events
			for ( j = 0; j < eventType.length; j++ ) {
				handleObj = eventType[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					 ( !handler || handler.guid === handleObj.guid ) &&
					 ( !namespaces || namespaces.test( handleObj.namespace ) ) &&
					 ( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
					eventType.splice( j--, 1 );

					if ( handleObj.selector ) {
						eventType.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( eventType.length === 0 && origCount !== eventType.length ) {
				if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			delete elemData.handle;

			// removeData also checks for emptiness and clears the expando if empty
			// so use it instead of delete
			jQuery.removeData( elem, "events", true );
		}
	},

	// Events that are safe to short-circuit if no handlers are attached.
	// Native DOM events should not be added, they may have inline handlers.
	customEvent: {
		"getData": true,
		"setData": true,
		"changeData": true
	},

	trigger: function( event, data, elem, onlyHandlers ) {
		// Don't do events on text and comment nodes
		if ( elem && (elem.nodeType === 3 || elem.nodeType === 8) ) {
			return;
		}

		// Event object or event type
		var cache, exclusive, i, cur, old, ontype, special, handle, eventPath, bubbleType,
			type = event.type || event,
			namespaces = [];

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "!" ) >= 0 ) {
			// Exclusive events trigger only for the exact event (no namespaces)
			type = type.slice(0, -1);
			exclusive = true;
		}

		if ( type.indexOf( "." ) >= 0 ) {
			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split(".");
			type = namespaces.shift();
			namespaces.sort();
		}

		if ( (!elem || jQuery.event.customEvent[ type ]) && !jQuery.event.global[ type ] ) {
			// No jQuery handlers for this event type, and it can't have inline handlers
			return;
		}

		// Caller can pass in an Event, Object, or just an event type string
		event = typeof event === "object" ?
			// jQuery.Event object
			event[ jQuery.expando ] ? event :
			// Object literal
			new jQuery.Event( type, event ) :
			// Just the event type (string)
			new jQuery.Event( type );

		event.type = type;
		event.isTrigger = true;
		event.exclusive = exclusive;
		event.namespace = namespaces.join( "." );
		event.namespace_re = event.namespace? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
		ontype = type.indexOf( ":" ) < 0 ? "on" + type : "";

		// Handle a global trigger
		if ( !elem ) {

			// TODO: Stop taunting the data cache; remove global events and always attach to document
			cache = jQuery.cache;
			for ( i in cache ) {
				if ( cache[ i ].events && cache[ i ].events[ type ] ) {
					jQuery.event.trigger( event, data, cache[ i ].handle.elem, true );
				}
			}
			return;
		}

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data != null ? jQuery.makeArray( data ) : [];
		data.unshift( event );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		eventPath = [[ elem, special.bindType || type ]];
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			cur = rfocusMorph.test( bubbleType + type ) ? elem : elem.parentNode;
			for ( old = elem; cur; cur = cur.parentNode ) {
				eventPath.push([ cur, bubbleType ]);
				old = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( old === (elem.ownerDocument || document) ) {
				eventPath.push([ old.defaultView || old.parentWindow || window, bubbleType ]);
			}
		}

		// Fire handlers on the event path
		for ( i = 0; i < eventPath.length && !event.isPropagationStopped(); i++ ) {

			cur = eventPath[i][0];
			event.type = eventPath[i][1];

			handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] && jQuery._data( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}
			// Note that this is a bare JS function and not a jQuery handler
			handle = ontype && cur[ ontype ];
			if ( handle && jQuery.acceptData( cur ) && handle.apply( cur, data ) === false ) {
				event.preventDefault();
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( (!special._default || special._default.apply( elem.ownerDocument, data ) === false) &&
				!(type === "click" && jQuery.nodeName( elem, "a" )) && jQuery.acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Can't use an .isFunction() check here because IE6/7 fails that test.
				// Don't do default actions on window, that's where global variables be (#6170)
				// IE<9 dies on focus/blur to hidden element (#1486)
				if ( ontype && elem[ type ] && ((type !== "focus" && type !== "blur") || event.target.offsetWidth !== 0) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					old = elem[ ontype ];

					if ( old ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( old ) {
						elem[ ontype ] = old;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event || window.event );

		var i, j, cur, ret, selMatch, matched, matches, handleObj, sel, related,
			handlers = ( (jQuery._data( this, "events" ) || {} )[ event.type ] || []),
			delegateCount = handlers.delegateCount,
			args = [].slice.call( arguments ),
			run_all = !event.exclusive && !event.namespace,
			special = jQuery.event.special[ event.type ] || {},
			handlerQueue = [];

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[0] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers that should run if there are delegated events
		// Avoid non-left-click bubbling in Firefox (#3861)
		if ( delegateCount && !(event.button && event.type === "click") ) {

			for ( cur = event.target; cur != this; cur = cur.parentNode || this ) {

				// Don't process clicks (ONLY) on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.disabled !== true || event.type !== "click" ) {
					selMatch = {};
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];
						sel = handleObj.selector;

						if ( selMatch[ sel ] === undefined ) {
							selMatch[ sel ] = jQuery( sel, this ).index( cur ) >= 0;
						}
						if ( selMatch[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push({ elem: cur, matches: matches });
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( handlers.length > delegateCount ) {
			handlerQueue.push({ elem: this, matches: handlers.slice( delegateCount ) });
		}

		// Run delegates first; they may want to stop propagation beneath us
		for ( i = 0; i < handlerQueue.length && !event.isPropagationStopped(); i++ ) {
			matched = handlerQueue[ i ];
			event.currentTarget = matched.elem;

			for ( j = 0; j < matched.matches.length && !event.isImmediatePropagationStopped(); j++ ) {
				handleObj = matched.matches[ j ];

				// Triggered event must either 1) be non-exclusive and have no namespace, or
				// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
				if ( run_all || (!event.namespace && !handleObj.namespace) || event.namespace_re && event.namespace_re.test( handleObj.namespace ) ) {

					event.data = handleObj.data;
					event.handleObj = handleObj;

					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
							.apply( matched.elem, args );

					if ( ret !== undefined ) {
						event.result = ret;
						if ( ret === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	// *** attrChange attrName relatedNode srcElement  are not normalized, non-W3C, deprecated, will be removed in 1.8 ***
	props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split(" "),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
		filter: function( event, original ) {
			var eventDoc, doc, body,
				button = original.button,
				fromElement = original.fromElement;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add relatedTarget, if necessary
			if ( !event.relatedTarget && fromElement ) {
				event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop,
			originalEvent = event,
			fixHook = jQuery.event.fixHooks[ event.type ] || {},
			copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = jQuery.Event( originalEvent );

		for ( i = copy.length; i; ) {
			prop = copy[ --i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Fix target property, if necessary (#1925, IE 6/7/8 & Safari2)
		if ( !event.target ) {
			event.target = originalEvent.srcElement || document;
		}

		// Target should not be a text node (#504, Safari)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		// For mouse/key events, metaKey==false if it's undefined (#3368, #11328; IE6/7/8)
		event.metaKey = !!event.metaKey;

		return fixHook.filter? fixHook.filter( event, originalEvent ) : event;
	},

	special: {
		load: {
			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},

		focus: {
			delegateType: "focusin"
		},
		blur: {
			delegateType: "focusout"
		},

		beforeunload: {
			setup: function( data, namespaces, eventHandle ) {
				// We only want to do this special case on windows
				if ( jQuery.isWindow( this ) ) {
					this.onbeforeunload = eventHandle;
				}
			},

			teardown: function( namespaces, eventHandle ) {
				if ( this.onbeforeunload === eventHandle ) {
					this.onbeforeunload = null;
				}
			}
		}
	},

	simulate: function( type, elem, event, bubble ) {
		// Piggyback on a donor event to simulate a different one.
		// Fake originalEvent to avoid donor's stopPropagation, but if the
		// simulated event prevents default then we do the same on the donor.
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{ type: type,
				isSimulated: true,
				originalEvent: {}
			}
		);
		if ( bubble ) {
			jQuery.event.trigger( e, null, elem );
		} else {
			jQuery.event.dispatch.call( elem, e );
		}
		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

// Some plugins are using, but it's undocumented/deprecated and will be removed.
// The 1.7 special event interface should provide all the hooks needed now.
jQuery.event.handle = jQuery.event.dispatch;

jQuery.removeEvent = document.removeEventListener ?
	function( elem, type, handle ) {
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle, false );
		}
	} :
	function( elem, type, handle ) {
		var name = "on" + type;

		if ( elem.detachEvent ) {

			// #8545, #7054, preventing memory leaks for custom events in IE6-8 –
			// detachEvent needed property on element, by name of that event, to properly expose it to GC
			if ( typeof elem[ name ] === "undefined" ) {
				elem[ name ] = null;
			}

			elem.detachEvent( name, handle );
		}
	};

jQuery.Event = function( src, props ) {
	// Allow instantiation without the 'new' keyword
	if ( !(this instanceof jQuery.Event) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = ( src.defaultPrevented || src.returnValue === false ||
			src.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

function returnFalse() {
	return false;
}
function returnTrue() {
	return true;
}

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	preventDefault: function() {
		this.isDefaultPrevented = returnTrue;

		var e = this.originalEvent;
		if ( !e ) {
			return;
		}

		// if preventDefault exists run it on the original event
		if ( e.preventDefault ) {
			e.preventDefault();

		// otherwise set the returnValue property of the original event to false (IE)
		} else {
			e.returnValue = false;
		}
	},
	stopPropagation: function() {
		this.isPropagationStopped = returnTrue;

		var e = this.originalEvent;
		if ( !e ) {
			return;
		}
		// if stopPropagation exists run it on the original event
		if ( e.stopPropagation ) {
			e.stopPropagation();
		}
		// otherwise set the cancelBubble property of the original event to true (IE)
		e.cancelBubble = true;
	},
	stopImmediatePropagation: function() {
		this.isImmediatePropagationStopped = returnTrue;
		this.stopPropagation();
	},
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse
};

// Create mouseenter/leave events using mouseover/out and event-time checks
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj,
				selector = handleObj.selector;

			// For mousenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
});

// IE submit delegation
if ( !jQuery.support.submitBubbles ) {

	jQuery.event.special.submit = {
		setup: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Lazy-add a submit handler when a descendant form may potentially be submitted
			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
				// Node name check avoids a VML-related crash in IE (#9807)
				var elem = e.target,
					form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ? elem.form : undefined;
				if ( form && !jQuery._data( form, "_submit_attached" ) ) {
					jQuery.event.add( form, "submit._submit", function( event ) {
						event._submit_bubble = true;
					});
					jQuery._data( form, "_submit_attached", true );
				}
			});
			// return undefined since we don't need an event listener
		},

		postDispatch: function( event ) {
			// If form was submitted by the user, bubble the event up the tree
			if ( event._submit_bubble ) {
				delete event._submit_bubble;
				if ( this.parentNode && !event.isTrigger ) {
					jQuery.event.simulate( "submit", this.parentNode, event, true );
				}
			}
		},

		teardown: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Remove delegated handlers; cleanData eventually reaps submit handlers attached above
			jQuery.event.remove( this, "._submit" );
		}
	};
}

// IE change delegation and checkbox/radio fix
if ( !jQuery.support.changeBubbles ) {

	jQuery.event.special.change = {

		setup: function() {

			if ( rformElems.test( this.nodeName ) ) {
				// IE doesn't fire change on a check/radio until blur; trigger it on click
				// after a propertychange. Eat the blur-change in special.change.handle.
				// This still fires onchange a second time for check/radio after blur.
				if ( this.type === "checkbox" || this.type === "radio" ) {
					jQuery.event.add( this, "propertychange._change", function( event ) {
						if ( event.originalEvent.propertyName === "checked" ) {
							this._just_changed = true;
						}
					});
					jQuery.event.add( this, "click._change", function( event ) {
						if ( this._just_changed && !event.isTrigger ) {
							this._just_changed = false;
						}
						// Allow triggered, simulated change events (#11500)
						jQuery.event.simulate( "change", this, event, true );
					});
				}
				return false;
			}
			// Delegated event; lazy-add a change handler on descendant inputs
			jQuery.event.add( this, "beforeactivate._change", function( e ) {
				var elem = e.target;

				if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, "_change_attached" ) ) {
					jQuery.event.add( elem, "change._change", function( event ) {
						if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
							jQuery.event.simulate( "change", this.parentNode, event, true );
						}
					});
					jQuery._data( elem, "_change_attached", true );
				}
			});
		},

		handle: function( event ) {
			var elem = event.target;

			// Swallow native change events from checkbox/radio, we already triggered them above
			if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== "radio" && elem.type !== "checkbox") ) {
				return event.handleObj.handler.apply( this, arguments );
			}
		},

		teardown: function() {
			jQuery.event.remove( this, "._change" );

			return !rformElems.test( this.nodeName );
		}
	};
}

// Create "bubbling" focus and blur events
if ( !jQuery.support.focusinBubbles ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler while someone wants focusin/focusout
		var attaches = 0,
			handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
			};

		jQuery.event.special[ fix ] = {
			setup: function() {
				if ( attaches++ === 0 ) {
					document.addEventListener( orig, handler, true );
				}
			},
			teardown: function() {
				if ( --attaches === 0 ) {
					document.removeEventListener( orig, handler, true );
				}
			}
		};
	});
}

jQuery.fn.extend({

	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
		var origFn, type;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {
			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) { // && selector != null
				// ( types-Object, data )
				data = data || selector;
				selector = undefined;
			}
			for ( type in types ) {
				this.on( type, selector, data, types[ type ], one );
			}
			return this;
		}

		if ( data == null && fn == null ) {
			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {
				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {
				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return this;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {
				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};
			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return this.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		});
	},
	one: function( types, selector, data, fn ) {
		return this.on( types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {
			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {
			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {
			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each(function() {
			jQuery.event.remove( this, types, fn, selector );
		});
	},

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	live: function( types, data, fn ) {
		jQuery( this.context ).on( types, this.selector, data, fn );
		return this;
	},
	die: function( types, fn ) {
		jQuery( this.context ).off( types, this.selector || "**", fn );
		return this;
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {
		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length == 1? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
	},

	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},
	triggerHandler: function( type, data ) {
		if ( this[0] ) {
			return jQuery.event.trigger( type, data, this[0], true );
		}
	},

	toggle: function( fn ) {
		// Save reference to arguments for access in closure
		var args = arguments,
			guid = fn.guid || jQuery.guid++,
			i = 0,
			toggler = function( event ) {
				// Figure out which function to execute
				var lastToggle = ( jQuery._data( this, "lastToggle" + fn.guid ) || 0 ) % i;
				jQuery._data( this, "lastToggle" + fn.guid, lastToggle + 1 );

				// Make sure that clicks stop
				event.preventDefault();

				// and execute the function
				return args[ lastToggle ].apply( this, arguments ) || false;
			};

		// link all the functions, so any of them can unbind this click handler
		toggler.guid = guid;
		while ( i < args.length ) {
			args[ i++ ].guid = guid;
		}

		return this.click( toggler );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
});

jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		if ( fn == null ) {
			fn = data;
			data = null;
		}

		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};

	if ( rkeyEvent.test( name ) ) {
		jQuery.event.fixHooks[ name ] = jQuery.event.keyHooks;
	}

	if ( rmouseEvent.test( name ) ) {
		jQuery.event.fixHooks[ name ] = jQuery.event.mouseHooks;
	}
});
/*!
 * Sizzle CSS Selector Engine
 *  Copyright 2012 jQuery Foundation and other contributors
 *  Released under the MIT license
 *  http://sizzlejs.com/
 */
(function( window, undefined ) {

var dirruns,
	cachedruns,
	assertGetIdNotName,
	Expr,
	getText,
	isXML,
	contains,
	compile,
	sortOrder,
	hasDuplicate,

	baseHasDuplicate = true,
	strundefined = "undefined",

	expando = ( "sizcache" + Math.random() ).replace( ".", "" ),

	document = window.document,
	docElem = document.documentElement,
	done = 0,
	slice = [].slice,
	push = [].push,

	// Augment a function for special use by Sizzle
	markFunction = function( fn, value ) {
		fn[ expando ] = value || true;
		return fn;
	},

	createCache = function() {
		var cache = {},
			keys = [];

		return markFunction(function( key, value ) {
			// Only keep the most recent entries
			if ( keys.push( key ) > Expr.cacheLength ) {
				delete cache[ keys.shift() ];
			}

			return (cache[ key ] = value);
		}, cache );
	},

	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),

	// Regex

	// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",
	// http://www.w3.org/TR/css3-syntax/#characters
	characterEncoding = "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+",

	// Loosely modeled on CSS identifier characters
	// An unquoted value should be a CSS identifier (http://www.w3.org/TR/css3-selectors/#attribute-selectors)
	// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = characterEncoding.replace( "w", "w#" ),

	// Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors
	operators = "([*^$|!~]?=)",
	attributes = "\\[" + whitespace + "*(" + characterEncoding + ")" + whitespace +
		"*(?:" + operators + whitespace + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + identifier + ")|)|)" + whitespace + "*\\]",

	// Prefer arguments not in parens/brackets,
	//   then attribute selectors and non-pseudos (denoted by :),
	//   then anything else
	// These preferences are here to reduce the number of selectors
	//   needing tokenize in the PSEUDO preFilter
	pseudos = ":(" + characterEncoding + ")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:" + attributes + ")|[^:]|\\\\.)*|.*))\\)|)",

	// For matchExpr.POS and matchExpr.needsContext
	pos = ":(nth|eq|gt|lt|first|last|even|odd)(?:\\(((?:-\\d)?\\d*)\\)|)(?=[^-]|$)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([\\x20\\t\\r\\n\\f>+~])" + whitespace + "*" ),
	rpseudo = new RegExp( pseudos ),

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,

	rnot = /^:not/,
	rsibling = /[\x20\t\r\n\f]*[+~]/,
	rendsWithNot = /:not\($/,

	rheader = /h\d/i,
	rinputs = /input|select|textarea|button/i,

	rbackslash = /\\(?!\\)/g,

	matchExpr = {
		"ID": new RegExp( "^#(" + characterEncoding + ")" ),
		"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
		"NAME": new RegExp( "^\\[name=['\"]?(" + characterEncoding + ")['\"]?\\]" ),
		"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|nth|last|first)-child(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"POS": new RegExp( pos, "ig" ),
		// For use in libraries implementing .is()
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|" + pos, "i" )
	},

	// Support

	// Used for testing something on an element
	assert = function( fn ) {
		var div = document.createElement("div");

		try {
			return fn( div );
		} catch (e) {
			return false;
		} finally {
			// release memory in IE
			div = null;
		}
	},

	// Check if getElementsByTagName("*") returns only elements
	assertTagNameNoComments = assert(function( div ) {
		div.appendChild( document.createComment("") );
		return !div.getElementsByTagName("*").length;
	}),

	// Check if getAttribute returns normalized href attributes
	assertHrefNotNormalized = assert(function( div ) {
		div.innerHTML = "<a href='#'></a>";
		return div.firstChild && typeof div.firstChild.getAttribute !== strundefined &&
			div.firstChild.getAttribute("href") === "#";
	}),

	// Check if attributes should be retrieved by attribute nodes
	assertAttributes = assert(function( div ) {
		div.innerHTML = "<select></select>";
		var type = typeof div.lastChild.getAttribute("multiple");
		// IE8 returns a string for some attributes even when not present
		return type !== "boolean" && type !== "string";
	}),

	// Check if getElementsByClassName can be trusted
	assertUsableClassName = assert(function( div ) {
		// Opera can't find a second classname (in 9.6)
		div.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>";
		if ( !div.getElementsByClassName || !div.getElementsByClassName("e").length ) {
			return false;
		}

		// Safari 3.2 caches class attributes and doesn't catch changes
		div.lastChild.className = "e";
		return div.getElementsByClassName("e").length === 2;
	}),

	// Check if getElementById returns elements by name
	// Check if getElementsByName privileges form controls or returns elements by ID
	assertUsableName = assert(function( div ) {
		// Inject content
		div.id = expando + 0;
		div.innerHTML = "<a name='" + expando + "'></a><div name='" + expando + "'></div>";
		docElem.insertBefore( div, docElem.firstChild );

		// Test
		var pass = document.getElementsByName &&
			// buggy browsers will return fewer than the correct 2
			document.getElementsByName( expando ).length === 2 +
			// buggy browsers will return more than the correct 0
			document.getElementsByName( expando + 0 ).length;
		assertGetIdNotName = !document.getElementById( expando );

		// Cleanup
		docElem.removeChild( div );

		return pass;
	});

// If slice is not available, provide a backup
try {
	slice.call( docElem.childNodes, 0 )[0].nodeType;
} catch ( e ) {
	slice = function( i ) {
		var elem, results = [];
		for ( ; (elem = this[i]); i++ ) {
			results.push( elem );
		}
		return results;
	};
}

function Sizzle( selector, context, results, seed ) {
	results = results || [];
	context = context || document;
	var match, elem, xml, m,
		nodeType = context.nodeType;

	if ( nodeType !== 1 && nodeType !== 9 ) {
		return [];
	}

	if ( !selector || typeof selector !== "string" ) {
		return results;
	}

	xml = isXML( context );

	if ( !xml && !seed ) {
		if ( (match = rquickExpr.exec( selector )) ) {
			// Speed-up: Sizzle("#ID")
			if ( (m = match[1]) ) {
				if ( nodeType === 9 ) {
					elem = context.getElementById( m );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Handle the case where IE, Opera, and Webkit return items
						// by name instead of ID
						if ( elem.id === m ) {
							results.push( elem );
							return results;
						}
					} else {
						return results;
					}
				} else {
					// Context is not a document
					if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
						contains( context, elem ) && elem.id === m ) {
						results.push( elem );
						return results;
					}
				}

			// Speed-up: Sizzle("TAG")
			} else if ( match[2] ) {
				push.apply( results, slice.call(context.getElementsByTagName( selector ), 0) );
				return results;

			// Speed-up: Sizzle(".CLASS")
			} else if ( (m = match[3]) && assertUsableClassName && context.getElementsByClassName ) {
				push.apply( results, slice.call(context.getElementsByClassName( m ), 0) );
				return results;
			}
		}
	}

	// All others
	return select( selector, context, results, seed, xml );
}

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	return Sizzle( expr, null, null, [ elem ] ).length > 0;
};

// Returns a function to use in pseudos for input types
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

// Returns a function to use in pseudos for buttons
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( nodeType ) {
		if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
			// Use textContent for elements
			// innerText usage removed for consistency of new lines (see #11153)
			if ( typeof elem.textContent === "string" ) {
				return elem.textContent;
			} else {
				// Traverse its children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
					ret += getText( elem );
				}
			}
		} else if ( nodeType === 3 || nodeType === 4 ) {
			return elem.nodeValue;
		}
		// Do not include comment or processing instruction nodes
	} else {

		// If no nodeType, this is expected to be an array
		for ( ; (node = elem[i]); i++ ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	}
	return ret;
};

isXML = Sizzle.isXML = function isXML( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

// Element contains another
contains = Sizzle.contains = docElem.contains ?
	function( a, b ) {
		var adown = a.nodeType === 9 ? a.documentElement : a,
			bup = b && b.parentNode;
		return a === bup || !!( bup && bup.nodeType === 1 && adown.contains && adown.contains(bup) );
	} :
	docElem.compareDocumentPosition ?
	function( a, b ) {
		return b && !!( a.compareDocumentPosition( b ) & 16 );
	} :
	function( a, b ) {
		while ( (b = b.parentNode) ) {
			if ( b === a ) {
				return true;
			}
		}
		return false;
	};

Sizzle.attr = function( elem, name ) {
	var attr,
		xml = isXML( elem );

	if ( !xml ) {
		name = name.toLowerCase();
	}
	if ( Expr.attrHandle[ name ] ) {
		return Expr.attrHandle[ name ]( elem );
	}
	if ( assertAttributes || xml ) {
		return elem.getAttribute( name );
	}
	attr = elem.getAttributeNode( name );
	return attr ?
		typeof elem[ name ] === "boolean" ?
			elem[ name ] ? name : null :
			attr.specified ? attr.value : null :
		null;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	order: new RegExp( "ID|TAG" +
		(assertUsableName ? "|NAME" : "") +
		(assertUsableClassName ? "|CLASS" : "")
	),

	// IE6/7 return a modified href
	attrHandle: assertHrefNotNormalized ?
		{} :
		{
			"href": function( elem ) {
				return elem.getAttribute( "href", 2 );
			},
			"type": function( elem ) {
				return elem.getAttribute("type");
			}
		},

	find: {
		"ID": assertGetIdNotName ?
			function( id, context, xml ) {
				if ( typeof context.getElementById !== strundefined && !xml ) {
					var m = context.getElementById( id );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					return m && m.parentNode ? [m] : [];
				}
			} :
			function( id, context, xml ) {
				if ( typeof context.getElementById !== strundefined && !xml ) {
					var m = context.getElementById( id );

					return m ?
						m.id === id || typeof m.getAttributeNode !== strundefined && m.getAttributeNode("id").value === id ?
							[m] :
							undefined :
						[];
				}
			},

		"TAG": assertTagNameNoComments ?
			function( tag, context ) {
				if ( typeof context.getElementsByTagName !== strundefined ) {
					return context.getElementsByTagName( tag );
				}
			} :
			function( tag, context ) {
				var results = context.getElementsByTagName( tag );

				// Filter out possible comments
				if ( tag === "*" ) {
					var elem,
						tmp = [],
						i = 0;

					for ( ; (elem = results[i]); i++ ) {
						if ( elem.nodeType === 1 ) {
							tmp.push( elem );
						}
					}

					return tmp;
				}
				return results;
			},

		"NAME": function( tag, context ) {
			if ( typeof context.getElementsByName !== strundefined ) {
				return context.getElementsByName( name );
			}
		},

		"CLASS": function( className, context, xml ) {
			if ( typeof context.getElementsByClassName !== strundefined && !xml ) {
				return context.getElementsByClassName( className );
			}
		}
	},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( rbackslash, "" );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[4] || match[5] || "" ).replace( rbackslash, "" );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr.CHILD
				1 type (only|nth|...)
				2 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				3 xn-component of xn+y argument ([+-]?\d*n|)
				4 sign of xn-component
				5 x of xn-component
				6 sign of y-component
				7 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1] === "nth" ) {
				// nth-child requires argument
				if ( !match[2] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[3] = +( match[3] ? match[4] + (match[5] || 1) : 2 * ( match[2] === "even" || match[2] === "odd" ) );
				match[4] = +( ( match[6] + match[7] ) || match[2] === "odd" );

			// other types prohibit arguments
			} else if ( match[2] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match, context, xml ) {
			var unquoted, excess;
			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			if ( match[3] ) {
				match[2] = match[3];
			} else if ( (unquoted = match[4]) ) {
				// Only check arguments that contain a pseudo
				if ( rpseudo.test(unquoted) &&
					// Get excess from tokenize (recursively)
					(excess = tokenize( unquoted, context, xml, true )) &&
					// advance to the next closing parenthesis
					(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

					// excess is a negative index
					unquoted = unquoted.slice( 0, excess );
					match[0] = match[0].slice( 0, excess );
				}
				match[2] = unquoted;
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {
		"ID": assertGetIdNotName ?
			function( id ) {
				id = id.replace( rbackslash, "" );
				return function( elem ) {
					return elem.getAttribute("id") === id;
				};
			} :
			function( id ) {
				id = id.replace( rbackslash, "" );
				return function( elem ) {
					var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode("id");
					return node && node.value === id;
				};
			},

		"TAG": function( nodeName ) {
			if ( nodeName === "*" ) {
				return function() { return true; };
			}
			nodeName = nodeName.replace( rbackslash, "" ).toLowerCase();

			return function( elem ) {
				return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
			};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ expando ][ className ];
			if ( !pattern ) {
				pattern = classCache( className, new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)") );
			}
			return function( elem ) {
				return pattern.test( elem.className || (typeof elem.getAttribute !== strundefined && elem.getAttribute("class")) || "" );
			};
		},

		"ATTR": function( name, operator, check ) {
			if ( !operator ) {
				return function( elem ) {
					return Sizzle.attr( elem, name ) != null;
				};
			}

			return function( elem ) {
				var result = Sizzle.attr( elem, name ),
					value = result + "";

				if ( result == null ) {
					return operator === "!=";
				}

				switch ( operator ) {
					case "=":
						return value === check;
					case "!=":
						return value !== check;
					case "^=":
						return check && value.indexOf( check ) === 0;
					case "*=":
						return check && value.indexOf( check ) > -1;
					case "$=":
						return check && value.substr( value.length - check.length ) === check;
					case "~=":
						return ( " " + value + " " ).indexOf( check ) > -1;
					case "|=":
						return value === check || value.substr( 0, check.length + 1 ) === check + "-";
				}
			};
		},

		"CHILD": function( type, argument, first, last ) {

			if ( type === "nth" ) {
				var doneName = done++;

				return function( elem ) {
					var parent, diff,
						count = 0,
						node = elem;

					if ( first === 1 && last === 0 ) {
						return true;
					}

					parent = elem.parentNode;

					if ( parent && (parent[ expando ] !== doneName || !elem.sizset) ) {
						for ( node = parent.firstChild; node; node = node.nextSibling ) {
							if ( node.nodeType === 1 ) {
								node.sizset = ++count;
								if ( node === elem ) {
									break;
								}
							}
						}

						parent[ expando ] = doneName;
					}

					diff = elem.sizset - last;

					if ( first === 0 ) {
						return diff === 0;

					} else {
						return ( diff % first === 0 && diff / first >= 0 );
					}
				};
			}

			return function( elem ) {
				var node = elem;

				switch ( type ) {
					case "only":
					case "first":
						while ( (node = node.previousSibling) ) {
							if ( node.nodeType === 1 ) {
								return false;
							}
						}

						if ( type === "first" ) {
							return true;
						}

						node = elem;

						/* falls through */
					case "last":
						while ( (node = node.nextSibling) ) {
							if ( node.nodeType === 1 ) {
								return false;
							}
						}

						return true;
				}
			};
		},

		"PSEUDO": function( pseudo, argument, context, xml ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.pseudos[ pseudo.toLowerCase() ];

			if ( !fn ) {
				Sizzle.error( "unsupported pseudo: " + pseudo );
			}

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( !fn[ expando ] ) {
				if ( fn.length > 1 ) {
					args = [ pseudo, pseudo, "", argument ];
					return function( elem ) {
						return fn( elem, 0, args );
					};
				}
				return fn;
			}

			return fn( argument, context, xml );
		}
	},

	pseudos: {
		"not": markFunction(function( selector, context, xml ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var matcher = compile( selector.replace( rtrim, "$1" ), context, xml );
			return function( elem ) {
				return !matcher( elem );
			};
		}),

		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is only affected by element nodes and content nodes(including text(3), cdata(4)),
			//   not comment, processing instructions, or others
			// Thanks to Diego Perini for the nodeName shortcut
			//   Greater than "@" means alpha characters (specifically not starting with "#" or "?")
			var nodeType;
			elem = elem.firstChild;
			while ( elem ) {
				if ( elem.nodeName > "@" || (nodeType = elem.nodeType) === 3 || nodeType === 4 ) {
					return false;
				}
				elem = elem.nextSibling;
			}
			return true;
		},

		"contains": markFunction(function( text ) {
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"text": function( elem ) {
			var type, attr;
			// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)
			// use getAttribute instead to test this case
			return elem.nodeName.toLowerCase() === "input" &&
				(type = elem.type) === "text" &&
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === type );
		},

		// Input types
		"radio": createInputPseudo("radio"),
		"checkbox": createInputPseudo("checkbox"),
		"file": createInputPseudo("file"),
		"password": createInputPseudo("password"),
		"image": createInputPseudo("image"),

		"submit": createButtonPseudo("submit"),
		"reset": createButtonPseudo("reset"),

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"focus": function( elem ) {
			var doc = elem.ownerDocument;
			return elem === doc.activeElement && (!doc.hasFocus || doc.hasFocus()) && !!(elem.type || elem.href);
		},

		"active": function( elem ) {
			return elem === elem.ownerDocument.activeElement;
		}
	},

	setFilters: {
		"first": function( elements, argument, not ) {
			return not ? elements.slice( 1 ) : [ elements[0] ];
		},

		"last": function( elements, argument, not ) {
			var elem = elements.pop();
			return not ? elements : [ elem ];
		},

		"even": function( elements, argument, not ) {
			var results = [],
				i = not ? 1 : 0,
				len = elements.length;
			for ( ; i < len; i = i + 2 ) {
				results.push( elements[i] );
			}
			return results;
		},

		"odd": function( elements, argument, not ) {
			var results = [],
				i = not ? 0 : 1,
				len = elements.length;
			for ( ; i < len; i = i + 2 ) {
				results.push( elements[i] );
			}
			return results;
		},

		"lt": function( elements, argument, not ) {
			return not ? elements.slice( +argument ) : elements.slice( 0, +argument );
		},

		"gt": function( elements, argument, not ) {
			return not ? elements.slice( 0, +argument + 1 ) : elements.slice( +argument + 1 );
		},

		"eq": function( elements, argument, not ) {
			var elem = elements.splice( +argument, 1 );
			return not ? elements : elem;
		}
	}
};

function siblingCheck( a, b, ret ) {
	if ( a === b ) {
		return ret;
	}

	var cur = a.nextSibling;

	while ( cur ) {
		if ( cur === b ) {
			return -1;
		}

		cur = cur.nextSibling;
	}

	return 1;
}

sortOrder = docElem.compareDocumentPosition ?
	function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		return ( !a.compareDocumentPosition || !b.compareDocumentPosition ?
			a.compareDocumentPosition :
			a.compareDocumentPosition(b) & 4
		) ? -1 : 1;
	} :
	function( a, b ) {
		// The nodes are identical, we can exit early
		if ( a === b ) {
			hasDuplicate = true;
			return 0;

		// Fallback to using sourceIndex (in IE) if it's available on both nodes
		} else if ( a.sourceIndex && b.sourceIndex ) {
			return a.sourceIndex - b.sourceIndex;
		}

		var al, bl,
			ap = [],
			bp = [],
			aup = a.parentNode,
			bup = b.parentNode,
			cur = aup;

		// If the nodes are siblings (or identical) we can do a quick check
		if ( aup === bup ) {
			return siblingCheck( a, b );

		// If no parents were found then the nodes are disconnected
		} else if ( !aup ) {
			return -1;

		} else if ( !bup ) {
			return 1;
		}

		// Otherwise they're somewhere else in the tree so we need
		// to build up a full list of the parentNodes for comparison
		while ( cur ) {
			ap.unshift( cur );
			cur = cur.parentNode;
		}

		cur = bup;

		while ( cur ) {
			bp.unshift( cur );
			cur = cur.parentNode;
		}

		al = ap.length;
		bl = bp.length;

		// Start walking down the tree looking for a discrepancy
		for ( var i = 0; i < al && i < bl; i++ ) {
			if ( ap[i] !== bp[i] ) {
				return siblingCheck( ap[i], bp[i] );
			}
		}

		// We ended someplace up the tree so do a sibling check
		return i === al ?
			siblingCheck( a, bp[i], -1 ) :
			siblingCheck( ap[i], b, 1 );
	};

// Always assume the presence of duplicates if sort doesn't
// pass them to our comparison function (as in Google Chrome).
[0, 0].sort( sortOrder );
baseHasDuplicate = !hasDuplicate;

// Document sorting and removing duplicates
Sizzle.uniqueSort = function( results ) {
	var elem,
		i = 1;

	hasDuplicate = baseHasDuplicate;
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		for ( ; (elem = results[i]); i++ ) {
			if ( elem === results[ i - 1 ] ) {
				results.splice( i--, 1 );
			}
		}
	}

	return results;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

function tokenize( selector, context, xml, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, group, i,
		preFilters, filters,
		checkContext = !xml && context !== document,
		// Token cache should maintain spaces
		key = ( checkContext ? "<s>" : "" ) + selector.replace( rtrim, "$1<s>" ),
		cached = tokenCache[ expando ][ key ];

	if ( cached ) {
		return parseOnly ? 0 : slice.call( cached, 0 );
	}

	soFar = selector;
	groups = [];
	i = 0;
	preFilters = Expr.preFilter;
	filters = Expr.filter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				soFar = soFar.slice( match[0].length );
				tokens.selector = group;
			}
			groups.push( tokens = [] );
			group = "";

			// Need to make sure we're within a narrower context if necessary
			// Adding a descendant combinator will generate what is needed
			if ( checkContext ) {
				soFar = " " + soFar;
			}
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			group += match[0];
			soFar = soFar.slice( match[0].length );

			// Cast descendant combinators to space
			matched = tokens.push({
				part: match.pop().replace( rtrim, " " ),
				string: match[0],
				captures: match
			});
		}

		// Filters
		for ( type in filters ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				( match = preFilters[ type ](match, context, xml) )) ) {

				group += match[0];
				soFar = soFar.slice( match[0].length );
				matched = tokens.push({
					part: type,
					string: match.shift(),
					captures: match
				});
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Attach the full group as a selector
	if ( group ) {
		tokens.selector = group;
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			slice.call( tokenCache(key, groups), 0 );
}

function addCombinator( matcher, combinator, context, xml ) {
	var dir = combinator.dir,
		doneName = done++;

	if ( !matcher ) {
		// If there is no matcher to check, check against the context
		matcher = function( elem ) {
			return elem === context;
		};
	}
	return combinator.first ?
		function( elem ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 ) {
					return matcher( elem ) && elem;
				}
			}
		} :
		xml ?
			function( elem ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 ) {
						if ( matcher( elem ) ) {
							return elem;
						}
					}
				}
			} :
			function( elem ) {
				var cache,
					dirkey = doneName + "." + dirruns,
					cachedkey = dirkey + "." + cachedruns;
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 ) {
						if ( (cache = elem[ expando ]) === cachedkey ) {
							return elem.sizset;
						} else if ( typeof cache === "string" && cache.indexOf(dirkey) === 0 ) {
							if ( elem.sizset ) {
								return elem;
							}
						} else {
							elem[ expando ] = cachedkey;
							if ( matcher( elem ) ) {
								elem.sizset = true;
								return elem;
							}
							elem.sizset = false;
						}
					}
				}
			};
}

function addMatcher( higher, deeper ) {
	return higher ?
		function( elem ) {
			var result = deeper( elem );
			return result && higher( result === true ? elem : result );
		} :
		deeper;
}

// ["TAG", ">", "ID", " ", "CLASS"]
function matcherFromTokens( tokens, context, xml ) {
	var token, matcher,
		i = 0;

	for ( ; (token = tokens[i]); i++ ) {
		if ( Expr.relative[ token.part ] ) {
			matcher = addCombinator( matcher, Expr.relative[ token.part ], context, xml );
		} else {
			matcher = addMatcher( matcher, Expr.filter[ token.part ].apply(null, token.captures.concat( context, xml )) );
		}
	}

	return matcher;
}

function matcherFromGroupMatchers( matchers ) {
	return function( elem ) {
		var matcher,
			j = 0;
		for ( ; (matcher = matchers[j]); j++ ) {
			if ( matcher(elem) ) {
				return true;
			}
		}
		return false;
	};
}

compile = Sizzle.compile = function( selector, context, xml ) {
	var group, i, len,
		cached = compilerCache[ expando ][ selector ];

	// Return a cached group function if already generated (context dependent)
	if ( cached && cached.context === context ) {
		return cached;
	}

	// Generate a function of recursive functions that can be used to check each element
	group = tokenize( selector, context, xml );
	for ( i = 0, len = group.length; i < len; i++ ) {
		group[i] = matcherFromTokens(group[i], context, xml);
	}

	// Cache the compiled function
	cached = compilerCache( selector, matcherFromGroupMatchers(group) );
	cached.context = context;
	cached.runs = cached.dirruns = 0;
	return cached;
};

function multipleContexts( selector, contexts, results, seed ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results, seed );
	}
}

function handlePOSGroup( selector, posfilter, argument, contexts, seed, not ) {
	var results,
		fn = Expr.setFilters[ posfilter.toLowerCase() ];

	if ( !fn ) {
		Sizzle.error( posfilter );
	}

	if ( selector || !(results = seed) ) {
		multipleContexts( selector || "*", contexts, (results = []), seed );
	}

	return results.length > 0 ? fn( results, argument, not ) : [];
}

function handlePOS( groups, context, results, seed ) {
	var group, part, j, groupLen, token, selector,
		anchor, elements, match, matched,
		lastIndex, currentContexts, not,
		i = 0,
		len = groups.length,
		rpos = matchExpr["POS"],
		// This is generated here in case matchExpr["POS"] is extended
		rposgroups = new RegExp( "^" + rpos.source + "(?!" + whitespace + ")", "i" ),
		// This is for making sure non-participating
		// matching groups are represented cross-browser (IE6-8)
		setUndefined = function() {
			var i = 1,
				len = arguments.length - 2;
			for ( ; i < len; i++ ) {
				if ( arguments[i] === undefined ) {
					match[i] = undefined;
				}
			}
		};

	for ( ; i < len; i++ ) {
		group = groups[i];
		part = "";
		elements = seed;
		for ( j = 0, groupLen = group.length; j < groupLen; j++ ) {
			token = group[j];
			selector = token.string;
			if ( token.part === "PSEUDO" ) {
				// Reset regex index to 0
				rpos.exec("");
				anchor = 0;
				while ( (match = rpos.exec( selector )) ) {
					matched = true;
					lastIndex = rpos.lastIndex = match.index + match[0].length;
					if ( lastIndex > anchor ) {
						part += selector.slice( anchor, match.index );
						anchor = lastIndex;
						currentContexts = [ context ];

						if ( rcombinators.test(part) ) {
							if ( elements ) {
								currentContexts = elements;
							}
							elements = seed;
						}

						if ( (not = rendsWithNot.test( part )) ) {
							part = part.slice( 0, -5 ).replace( rcombinators, "$&*" );
							anchor++;
						}

						if ( match.length > 1 ) {
							match[0].replace( rposgroups, setUndefined );
						}
						elements = handlePOSGroup( part, match[1], match[2], currentContexts, elements, not );
					}
					part = "";
				}

			}

			if ( !matched ) {
				part += selector;
			}
			matched = false;
		}

		if ( part ) {
			if ( rcombinators.test(part) ) {
				multipleContexts( part, elements || [ context ], results, seed );
			} else {
				Sizzle( part, context, results, seed ? seed.concat(elements) : elements );
			}
		} else {
			push.apply( results, elements );
		}
	}

	// Do not sort if this is a single filter
	return len === 1 ? results : Sizzle.uniqueSort( results );
}

function select( selector, context, results, seed, xml ) {
	// Remove excessive whitespace
	selector = selector.replace( rtrim, "$1" );
	var elements, matcher, cached, elem,
		i, tokens, token, lastToken, findContext, type,
		match = tokenize( selector, context, xml ),
		contextNodeType = context.nodeType;

	// POS handling
	if ( matchExpr["POS"].test(selector) ) {
		return handlePOS( match, context, results, seed );
	}

	if ( seed ) {
		elements = slice.call( seed, 0 );

	// To maintain document order, only narrow the
	// set if there is one group
	} else if ( match.length === 1 ) {

		// Take a shortcut and set the context if the root selector is an ID
		if ( (tokens = slice.call( match[0], 0 )).length > 2 &&
				(token = tokens[0]).part === "ID" &&
				contextNodeType === 9 && !xml &&
				Expr.relative[ tokens[1].part ] ) {

			context = Expr.find["ID"]( token.captures[0].replace( rbackslash, "" ), context, xml )[0];
			if ( !context ) {
				return results;
			}

			selector = selector.slice( tokens.shift().string.length );
		}

		findContext = ( (match = rsibling.exec( tokens[0].string )) && !match.index && context.parentNode ) || context;

		// Reduce the set if possible
		lastToken = "";
		for ( i = tokens.length - 1; i >= 0; i-- ) {
			token = tokens[i];
			type = token.part;
			lastToken = token.string + lastToken;
			if ( Expr.relative[ type ] ) {
				break;
			}
			if ( Expr.order.test(type) ) {
				elements = Expr.find[ type ]( token.captures[0].replace( rbackslash, "" ), findContext, xml );
				if ( elements == null ) {
					continue;
				} else {
					selector = selector.slice( 0, selector.length - lastToken.length ) +
						lastToken.replace( matchExpr[ type ], "" );

					if ( !selector ) {
						push.apply( results, slice.call(elements, 0) );
					}

					break;
				}
			}
		}
	}

	// Only loop over the given elements once
	if ( selector ) {
		matcher = compile( selector, context, xml );
		dirruns = matcher.dirruns++;
		if ( elements == null ) {
			elements = Expr.find["TAG"]( "*", (rsibling.test( selector ) && context.parentNode) || context );
		}

		for ( i = 0; (elem = elements[i]); i++ ) {
			cachedruns = matcher.runs++;
			if ( matcher(elem) ) {
				results.push( elem );
			}
		}
	}

	return results;
}

if ( document.querySelectorAll ) {
	(function() {
		var disconnectedMatch,
			oldSelect = select,
			rescape = /'|\\/g,
			rattributeQuotes = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,
			rbuggyQSA = [],
			// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
			// A support test would require too much code (would include document ready)
			// just skip matchesSelector for :active
			rbuggyMatches = [":active"],
			matches = docElem.matchesSelector ||
				docElem.mozMatchesSelector ||
				docElem.webkitMatchesSelector ||
				docElem.oMatchesSelector ||
				docElem.msMatchesSelector;

		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explictly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			div.innerHTML = "<select><option selected=''></option></select>";

			// IE8 - Some boolean attributes are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:checked|disabled|ismap|multiple|readonly|selected|value)" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here (do not put tests after this one)
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}
		});

		assert(function( div ) {

			// Opera 10-12/IE9 - ^= $= *= and empty values
			// Should not select anything
			div.innerHTML = "<p test=''></p>";
			if ( div.querySelectorAll("[test^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:\"\"|'')" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here (do not put tests after this one)
			div.innerHTML = "<input type='hidden'/>";
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push(":enabled", ":disabled");
			}
		});

		rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );

		select = function( selector, context, results, seed, xml ) {
			// Only use querySelectorAll when not filtering,
			// when this is not xml,
			// and when no QSA bugs apply
			if ( !seed && !xml && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
				if ( context.nodeType === 9 ) {
					try {
						push.apply( results, slice.call(context.querySelectorAll( selector ), 0) );
						return results;
					} catch(qsaError) {}
				// qSA works strangely on Element-rooted queries
				// We can work around this by specifying an extra ID on the root
				// and working up from there (Thanks to Andrew Dupont for the technique)
				// IE 8 doesn't work on object elements
				} else if ( context.nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
					var groups, i, len,
						old = context.getAttribute("id"),
						nid = old || expando,
						newContext = rsibling.test( selector ) && context.parentNode || context;

					if ( old ) {
						nid = nid.replace( rescape, "\\$&" );
					} else {
						context.setAttribute( "id", nid );
					}

					groups = tokenize(selector, context, xml);
					// Trailing space is unnecessary
					// There is always a context check
					nid = "[id='" + nid + "']";
					for ( i = 0, len = groups.length; i < len; i++ ) {
						groups[i] = nid + groups[i].selector;
					}
					try {
						push.apply( results, slice.call( newContext.querySelectorAll(
							groups.join(",")
						), 0 ) );
						return results;
					} catch(qsaError) {
					} finally {
						if ( !old ) {
							context.removeAttribute("id");
						}
					}
				}
			}

			return oldSelect( selector, context, results, seed, xml );
		};

		if ( matches ) {
			assert(function( div ) {
				// Check to see if it's possible to do matchesSelector
				// on a disconnected node (IE 9)
				disconnectedMatch = matches.call( div, "div" );

				// This should fail with an exception
				// Gecko does not error, returns false instead
				try {
					matches.call( div, "[test!='']:sizzle" );
					rbuggyMatches.push( matchExpr["PSEUDO"].source, matchExpr["POS"].source, "!=" );
				} catch ( e ) {}
			});

			// rbuggyMatches always contains :active, so no need for a length check
			rbuggyMatches = /* rbuggyMatches.length && */ new RegExp( rbuggyMatches.join("|") );

			Sizzle.matchesSelector = function( elem, expr ) {
				// Make sure that attribute selectors are quoted
				expr = expr.replace( rattributeQuotes, "='$1']" );

				// rbuggyMatches always contains :active, so no need for an existence check
				if ( !isXML( elem ) && !rbuggyMatches.test( expr ) && (!rbuggyQSA || !rbuggyQSA.test( expr )) ) {
					try {
						var ret = matches.call( elem, expr );

						// IE 9's matchesSelector returns false on disconnected nodes
						if ( ret || disconnectedMatch ||
								// As well, disconnected nodes are said to be in a document
								// fragment in IE 9
								elem.document && elem.document.nodeType !== 11 ) {
							return ret;
						}
					} catch(e) {}
				}

				return Sizzle( expr, null, null, [ elem ] ).length > 0;
			};
		}
	})();
}

// Deprecated
Expr.setFilters["nth"] = Expr.setFilters["eq"];

// Back-compat
Expr.filters = Expr.pseudos;

// Override sizzle attribute retrieval
Sizzle.attr = jQuery.attr;
jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.pseudos;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;


})( window );
var runtil = /Until$/,
	rparentsprev = /^(?:parents|prev(?:Until|All))/,
	isSimple = /^.[^:#\[\.,]*$/,
	rneedsContext = jQuery.expr.match.needsContext,
	// methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend({
	find: function( selector ) {
		var i, l, length, n, r, ret,
			self = this;

		if ( typeof selector !== "string" ) {
			return jQuery( selector ).filter(function() {
				for ( i = 0, l = self.length; i < l; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			});
		}

		ret = this.pushStack( "", "find", selector );

		for ( i = 0, l = this.length; i < l; i++ ) {
			length = ret.length;
			jQuery.find( selector, this[i], ret );

			if ( i > 0 ) {
				// Make sure that the results are unique
				for ( n = length; n < ret.length; n++ ) {
					for ( r = 0; r < length; r++ ) {
						if ( ret[r] === ret[n] ) {
							ret.splice(n--, 1);
							break;
						}
					}
				}
			}
		}

		return ret;
	},

	has: function( target ) {
		var i,
			targets = jQuery( target, this ),
			len = targets.length;

		return this.filter(function() {
			for ( i = 0; i < len; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	not: function( selector ) {
		return this.pushStack( winnow(this, selector, false), "not", selector);
	},

	filter: function( selector ) {
		return this.pushStack( winnow(this, selector, true), "filter", selector );
	},

	is: function( selector ) {
		return !!selector && (
			typeof selector === "string" ?
				// If this is a positional/relative selector, check membership in the returned set
				// so $("p:first").is("p:last") won't return true for a doc with two "p".
				rneedsContext.test( selector ) ?
					jQuery( selector, this.context ).index( this[0] ) >= 0 :
					jQuery.filter( selector, this ).length > 0 :
				this.filter( selector ).length > 0 );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			ret = [],
			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			cur = this[i];

			while ( cur && cur.ownerDocument && cur !== context && cur.nodeType !== 11 ) {
				if ( pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors) ) {
					ret.push( cur );
					break;
				}
				cur = cur.parentNode;
			}
		}

		ret = ret.length > 1 ? jQuery.unique( ret ) : ret;

		return this.pushStack( ret, "closest", selectors );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[0] && this[0].parentNode ) ? this.prevAll().length : -1;
		}

		// index in selector
		if ( typeof elem === "string" ) {
			return jQuery.inArray( this[0], jQuery( elem ) );
		}

		// Locate the position of the desired element
		return jQuery.inArray(
			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[0] : elem, this );
	},

	add: function( selector, context ) {
		var set = typeof selector === "string" ?
				jQuery( selector, context ) :
				jQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),
			all = jQuery.merge( this.get(), set );

		return this.pushStack( isDisconnected( set[0] ) || isDisconnected( all[0] ) ?
			all :
			jQuery.unique( all ) );
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter(selector)
		);
	}
});

jQuery.fn.andSelf = jQuery.fn.addBack;

// A painfully simple check to see if an element is disconnected
// from a document (should be improved, where feasible).
function isDisconnected( node ) {
	return !node || !node.parentNode || node.parentNode.nodeType === 11;
}

function sibling( cur, dir ) {
	do {
		cur = cur[ dir ];
	} while ( cur && cur.nodeType !== 1 );

	return cur;
}

jQuery.each({
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return jQuery.nodeName( elem, "iframe" ) ?
			elem.contentDocument || elem.contentWindow.document :
			jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var ret = jQuery.map( this, fn, until );

		if ( !runtil.test( name ) ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			ret = jQuery.filter( selector, ret );
		}

		ret = this.length > 1 && !guaranteedUnique[ name ] ? jQuery.unique( ret ) : ret;

		if ( this.length > 1 && rparentsprev.test( name ) ) {
			ret = ret.reverse();
		}

		return this.pushStack( ret, name, core_slice.call( arguments ).join(",") );
	};
});

jQuery.extend({
	filter: function( expr, elems, not ) {
		if ( not ) {
			expr = ":not(" + expr + ")";
		}

		return elems.length === 1 ?
			jQuery.find.matchesSelector(elems[0], expr) ? [ elems[0] ] : [] :
			jQuery.find.matches(expr, elems);
	},

	dir: function( elem, dir, until ) {
		var matched = [],
			cur = elem[ dir ];

		while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {
			if ( cur.nodeType === 1 ) {
				matched.push( cur );
			}
			cur = cur[dir];
		}
		return matched;
	},

	sibling: function( n, elem ) {
		var r = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				r.push( n );
			}
		}

		return r;
	}
});

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, keep ) {

	// Can't pass null or undefined to indexOf in Firefox 4
	// Set to 0 to skip string check
	qualifier = qualifier || 0;

	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep(elements, function( elem, i ) {
			var retVal = !!qualifier.call( elem, i, elem );
			return retVal === keep;
		});

	} else if ( qualifier.nodeType ) {
		return jQuery.grep(elements, function( elem, i ) {
			return ( elem === qualifier ) === keep;
		});

	} else if ( typeof qualifier === "string" ) {
		var filtered = jQuery.grep(elements, function( elem ) {
			return elem.nodeType === 1;
		});

		if ( isSimple.test( qualifier ) ) {
			return jQuery.filter(qualifier, filtered, !keep);
		} else {
			qualifier = jQuery.filter( qualifier, filtered );
		}
	}

	return jQuery.grep(elements, function( elem, i ) {
		return ( jQuery.inArray( elem, qualifier ) >= 0 ) === keep;
	});
}
function createSafeFragment( document ) {
	var list = nodeNames.split( "|" ),
	safeFrag = document.createDocumentFragment();

	if ( safeFrag.createElement ) {
		while ( list.length ) {
			safeFrag.createElement(
				list.pop()
			);
		}
	}
	return safeFrag;
}

var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|" +
		"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
	rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g,
	rleadingWhitespace = /^\s+/,
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
	rtagName = /<([\w:]+)/,
	rtbody = /<tbody/i,
	rhtml = /<|&#?\w+;/,
	rnoInnerhtml = /<(?:script|style|link)/i,
	rnocache = /<(?:script|object|embed|option|style)/i,
	rnoshimcache = new RegExp("<(?:" + nodeNames + ")[\\s/>]", "i"),
	rcheckableType = /^(?:checkbox|radio)$/,
	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptType = /\/(java|ecma)script/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,
	wrapMap = {
		option: [ 1, "<select multiple='multiple'>", "</select>" ],
		legend: [ 1, "<fieldset>", "</fieldset>" ],
		thead: [ 1, "<table>", "</table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
		col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
		area: [ 1, "<map>", "</map>" ],
		_default: [ 0, "", "" ]
	},
	safeFragment = createSafeFragment( document ),
	fragmentDiv = safeFragment.appendChild( document.createElement("div") );

wrapMap.optgroup = wrapMap.option;
wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,
// unless wrapped in a div with non-breaking characters in front of it.
if ( !jQuery.support.htmlSerialize ) {
	wrapMap._default = [ 1, "X<div>", "</div>" ];
}

jQuery.fn.extend({
	text: function( value ) {
		return jQuery.access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );
		}, null, value, arguments.length );
	},

	wrapAll: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapAll( html.call(this, i) );
			});
		}

		if ( this[0] ) {
			// The elements to wrap the target around
			var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);

			if ( this[0].parentNode ) {
				wrap.insertBefore( this[0] );
			}

			wrap.map(function() {
				var elem = this;

				while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
					elem = elem.firstChild;
				}

				return elem;
			}).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each(function(i) {
			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	},

	append: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 ) {
				this.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 ) {
				this.insertBefore( elem, this.firstChild );
			}
		});
	},

	before: function() {
		if ( !isDisconnected( this[0] ) ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this );
			});
		}

		if ( arguments.length ) {
			var set = jQuery.clean( arguments );
			return this.pushStack( jQuery.merge( set, this ), "before", this.selector );
		}
	},

	after: function() {
		if ( !isDisconnected( this[0] ) ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			});
		}

		if ( arguments.length ) {
			var set = jQuery.clean( arguments );
			return this.pushStack( jQuery.merge( this, set ), "after", this.selector );
		}
	},

	// keepData is for internal use only--do not document
	remove: function( selector, keepData ) {
		var elem,
			i = 0;

		for ( ; (elem = this[i]) != null; i++ ) {
			if ( !selector || jQuery.filter( selector, [ elem ] ).length ) {
				if ( !keepData && elem.nodeType === 1 ) {
					jQuery.cleanData( elem.getElementsByTagName("*") );
					jQuery.cleanData( [ elem ] );
				}

				if ( elem.parentNode ) {
					elem.parentNode.removeChild( elem );
				}
			}
		}

		return this;
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; (elem = this[i]) != null; i++ ) {
			// Remove element nodes and prevent memory leaks
			if ( elem.nodeType === 1 ) {
				jQuery.cleanData( elem.getElementsByTagName("*") );
			}

			// Remove any remaining nodes
			while ( elem.firstChild ) {
				elem.removeChild( elem.firstChild );
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function () {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		});
	},

	html: function( value ) {
		return jQuery.access( this, function( value ) {
			var elem = this[0] || {},
				i = 0,
				l = this.length;

			if ( value === undefined ) {
				return elem.nodeType === 1 ?
					elem.innerHTML.replace( rinlinejQuery, "" ) :
					undefined;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				( jQuery.support.htmlSerialize || !rnoshimcache.test( value )  ) &&
				( jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
				!wrapMap[ ( rtagName.exec( value ) || ["", ""] )[1].toLowerCase() ] ) {

				value = value.replace( rxhtmlTag, "<$1></$2>" );

				try {
					for (; i < l; i++ ) {
						// Remove element nodes and prevent memory leaks
						elem = this[i] || {};
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( elem.getElementsByTagName( "*" ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch(e) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function( value ) {
		if ( !isDisconnected( this[0] ) ) {
			// Make sure that the elements are removed from the DOM before they are inserted
			// this can help fix replacing a parent with child elements
			if ( jQuery.isFunction( value ) ) {
				return this.each(function(i) {
					var self = jQuery(this), old = self.html();
					self.replaceWith( value.call( this, i, old ) );
				});
			}

			if ( typeof value !== "string" ) {
				value = jQuery( value ).detach();
			}

			return this.each(function() {
				var next = this.nextSibling,
					parent = this.parentNode;

				jQuery( this ).remove();

				if ( next ) {
					jQuery(next).before( value );
				} else {
					jQuery(parent).append( value );
				}
			});
		}

		return this.length ?
			this.pushStack( jQuery(jQuery.isFunction(value) ? value() : value), "replaceWith", value ) :
			this;
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, table, callback ) {

		// Flatten any nested arrays
		args = [].concat.apply( [], args );

		var results, first, fragment, iNoClone,
			i = 0,
			value = args[0],
			scripts = [],
			l = this.length;

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( !jQuery.support.checkClone && l > 1 && typeof value === "string" && rchecked.test( value ) ) {
			return this.each(function() {
				jQuery(this).domManip( args, table, callback );
			});
		}

		if ( jQuery.isFunction(value) ) {
			return this.each(function(i) {
				var self = jQuery(this);
				args[0] = value.call( this, i, table ? self.html() : undefined );
				self.domManip( args, table, callback );
			});
		}

		if ( this[0] ) {
			results = jQuery.buildFragment( args, this, scripts );
			fragment = results.fragment;
			first = fragment.firstChild;

			if ( fragment.childNodes.length === 1 ) {
				fragment = first;
			}

			if ( first ) {
				table = table && jQuery.nodeName( first, "tr" );

				// Use the original fragment for the last item instead of the first because it can end up
				// being emptied incorrectly in certain situations (#8070).
				// Fragments from the fragment cache must always be cloned and never used in place.
				for ( iNoClone = results.cacheable || l - 1; i < l; i++ ) {
					callback.call(
						table && jQuery.nodeName( this[i], "table" ) ?
							findOrAppend( this[i], "tbody" ) :
							this[i],
						i === iNoClone ?
							fragment :
							jQuery.clone( fragment, true, true )
					);
				}
			}

			// Fix #11809: Avoid leaking memory
			fragment = first = null;

			if ( scripts.length ) {
				jQuery.each( scripts, function( i, elem ) {
					if ( elem.src ) {
						if ( jQuery.ajax ) {
							jQuery.ajax({
								url: elem.src,
								type: "GET",
								dataType: "script",
								async: false,
								global: false,
								"throws": true
							});
						} else {
							jQuery.error("no ajax");
						}
					} else {
						jQuery.globalEval( ( elem.text || elem.textContent || elem.innerHTML || "" ).replace( rcleanScript, "" ) );
					}

					if ( elem.parentNode ) {
						elem.parentNode.removeChild( elem );
					}
				});
			}
		}

		return this;
	}
});

function findOrAppend( elem, tag ) {
	return elem.getElementsByTagName( tag )[0] || elem.appendChild( elem.ownerDocument.createElement( tag ) );
}

function cloneCopyEvent( src, dest ) {

	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
		return;
	}

	var type, i, l,
		oldData = jQuery._data( src ),
		curData = jQuery._data( dest, oldData ),
		events = oldData.events;

	if ( events ) {
		delete curData.handle;
		curData.events = {};

		for ( type in events ) {
			for ( i = 0, l = events[ type ].length; i < l; i++ ) {
				jQuery.event.add( dest, type, events[ type ][ i ] );
			}
		}
	}

	// make the cloned public data object a copy from the original
	if ( curData.data ) {
		curData.data = jQuery.extend( {}, curData.data );
	}
}

function cloneFixAttributes( src, dest ) {
	var nodeName;

	// We do not need to do anything for non-Elements
	if ( dest.nodeType !== 1 ) {
		return;
	}

	// clearAttributes removes the attributes, which we don't want,
	// but also removes the attachEvent events, which we *do* want
	if ( dest.clearAttributes ) {
		dest.clearAttributes();
	}

	// mergeAttributes, in contrast, only merges back on the
	// original attributes, not the events
	if ( dest.mergeAttributes ) {
		dest.mergeAttributes( src );
	}

	nodeName = dest.nodeName.toLowerCase();

	if ( nodeName === "object" ) {
		// IE6-10 improperly clones children of object elements using classid.
		// IE10 throws NoModificationAllowedError if parent is null, #12132.
		if ( dest.parentNode ) {
			dest.outerHTML = src.outerHTML;
		}

		// This path appears unavoidable for IE9. When cloning an object
		// element in IE9, the outerHTML strategy above is not sufficient.
		// If the src has innerHTML and the destination does not,
		// copy the src.innerHTML into the dest.innerHTML. #10324
		if ( jQuery.support.html5Clone && (src.innerHTML && !jQuery.trim(dest.innerHTML)) ) {
			dest.innerHTML = src.innerHTML;
		}

	} else if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		// IE6-8 fails to persist the checked state of a cloned checkbox
		// or radio button. Worse, IE6-7 fail to give the cloned element
		// a checked appearance if the defaultChecked value isn't also set

		dest.defaultChecked = dest.checked = src.checked;

		// IE6-7 get confused and end up setting the value of a cloned
		// checkbox/radio button to an empty string instead of "on"
		if ( dest.value !== src.value ) {
			dest.value = src.value;
		}

	// IE6-8 fails to return the selected option to the default selected
	// state when cloning options
	} else if ( nodeName === "option" ) {
		dest.selected = src.defaultSelected;

	// IE6-8 fails to set the defaultValue to the correct value when
	// cloning other types of input fields
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;

	// IE blanks contents when cloning scripts
	} else if ( nodeName === "script" && dest.text !== src.text ) {
		dest.text = src.text;
	}

	// Event data gets referenced instead of copied if the expando
	// gets copied too
	dest.removeAttribute( jQuery.expando );
}

jQuery.buildFragment = function( args, context, scripts ) {
	var fragment, cacheable, cachehit,
		first = args[ 0 ];

	// Set context from what may come in as undefined or a jQuery collection or a node
	// Updated to fix #12266 where accessing context[0] could throw an exception in IE9/10 &
	// also doubles as fix for #8950 where plain objects caused createDocumentFragment exception
	context = context || document;
	context = !context.nodeType && context[0] || context;
	context = context.ownerDocument || context;

	// Only cache "small" (1/2 KB) HTML strings that are associated with the main document
	// Cloning options loses the selected state, so don't cache them
	// IE 6 doesn't like it when you put <object> or <embed> elements in a fragment
	// Also, WebKit does not clone 'checked' attributes on cloneNode, so don't cache
	// Lastly, IE6,7,8 will not correctly reuse cached fragments that were created from unknown elems #10501
	if ( args.length === 1 && typeof first === "string" && first.length < 512 && context === document &&
		first.charAt(0) === "<" && !rnocache.test( first ) &&
		(jQuery.support.checkClone || !rchecked.test( first )) &&
		(jQuery.support.html5Clone || !rnoshimcache.test( first )) ) {

		// Mark cacheable and look for a hit
		cacheable = true;
		fragment = jQuery.fragments[ first ];
		cachehit = fragment !== undefined;
	}

	if ( !fragment ) {
		fragment = context.createDocumentFragment();
		jQuery.clean( args, context, fragment, scripts );

		// Update the cache, but only store false
		// unless this is a second parsing of the same content
		if ( cacheable ) {
			jQuery.fragments[ first ] = cachehit && fragment;
		}
	}

	return { fragment: fragment, cacheable: cacheable };
};

jQuery.fragments = {};

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			i = 0,
			ret = [],
			insert = jQuery( selector ),
			l = insert.length,
			parent = this.length === 1 && this[0].parentNode;

		if ( (parent == null || parent && parent.nodeType === 11 && parent.childNodes.length === 1) && l === 1 ) {
			insert[ original ]( this[0] );
			return this;
		} else {
			for ( ; i < l; i++ ) {
				elems = ( i > 0 ? this.clone(true) : this ).get();
				jQuery( insert[i] )[ original ]( elems );
				ret = ret.concat( elems );
			}

			return this.pushStack( ret, name, insert.selector );
		}
	};
});

function getAll( elem ) {
	if ( typeof elem.getElementsByTagName !== "undefined" ) {
		return elem.getElementsByTagName( "*" );

	} else if ( typeof elem.querySelectorAll !== "undefined" ) {
		return elem.querySelectorAll( "*" );

	} else {
		return [];
	}
}

// Used in clean, fixes the defaultChecked property
function fixDefaultChecked( elem ) {
	if ( rcheckableType.test( elem.type ) ) {
		elem.defaultChecked = elem.checked;
	}
}

jQuery.extend({
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var srcElements,
			destElements,
			i,
			clone;

		if ( jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( "<" + elem.nodeName + ">" ) ) {
			clone = elem.cloneNode( true );

		// IE<=8 does not properly clone detached, unknown element nodes
		} else {
			fragmentDiv.innerHTML = elem.outerHTML;
			fragmentDiv.removeChild( clone = fragmentDiv.firstChild );
		}

		if ( (!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &&
				(elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {
			// IE copies events bound via attachEvent when using cloneNode.
			// Calling detachEvent on the clone will also remove the events
			// from the original. In order to get around this, we use some
			// proprietary methods to clear the events. Thanks to MooTools
			// guys for this hotness.

			cloneFixAttributes( elem, clone );

			// Using Sizzle here is crazy slow, so we use getElementsByTagName instead
			srcElements = getAll( elem );
			destElements = getAll( clone );

			// Weird iteration because IE will replace the length property
			// with an element if you are cloning the body and one of the
			// elements on the page has a name or id of "length"
			for ( i = 0; srcElements[i]; ++i ) {
				// Ensure that the destination node is not null; Fixes #9587
				if ( destElements[i] ) {
					cloneFixAttributes( srcElements[i], destElements[i] );
				}
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			cloneCopyEvent( elem, clone );

			if ( deepDataAndEvents ) {
				srcElements = getAll( elem );
				destElements = getAll( clone );

				for ( i = 0; srcElements[i]; ++i ) {
					cloneCopyEvent( srcElements[i], destElements[i] );
				}
			}
		}

		srcElements = destElements = null;

		// Return the cloned set
		return clone;
	},

	clean: function( elems, context, fragment, scripts ) {
		var i, j, elem, tag, wrap, depth, div, hasBody, tbody, len, handleScript, jsTags,
			safe = context === document && safeFragment,
			ret = [];

		// Ensure that context is a document
		if ( !context || typeof context.createDocumentFragment === "undefined" ) {
			context = document;
		}

		// Use the already-created safe fragment if context permits
		for ( i = 0; (elem = elems[i]) != null; i++ ) {
			if ( typeof elem === "number" ) {
				elem += "";
			}

			if ( !elem ) {
				continue;
			}

			// Convert html string into DOM nodes
			if ( typeof elem === "string" ) {
				if ( !rhtml.test( elem ) ) {
					elem = context.createTextNode( elem );
				} else {
					// Ensure a safe container in which to render the html
					safe = safe || createSafeFragment( context );
					div = context.createElement("div");
					safe.appendChild( div );

					// Fix "XHTML"-style tags in all browsers
					elem = elem.replace(rxhtmlTag, "<$1></$2>");

					// Go to html and back, then peel off extra wrappers
					tag = ( rtagName.exec( elem ) || ["", ""] )[1].toLowerCase();
					wrap = wrapMap[ tag ] || wrapMap._default;
					depth = wrap[0];
					div.innerHTML = wrap[1] + elem + wrap[2];

					// Move to the right depth
					while ( depth-- ) {
						div = div.lastChild;
					}

					// Remove IE's autoinserted <tbody> from table fragments
					if ( !jQuery.support.tbody ) {

						// String was a <table>, *may* have spurious <tbody>
						hasBody = rtbody.test(elem);
							tbody = tag === "table" && !hasBody ?
								div.firstChild && div.firstChild.childNodes :

								// String was a bare <thead> or <tfoot>
								wrap[1] === "<table>" && !hasBody ?
									div.childNodes :
									[];

						for ( j = tbody.length - 1; j >= 0 ; --j ) {
							if ( jQuery.nodeName( tbody[ j ], "tbody" ) && !tbody[ j ].childNodes.length ) {
								tbody[ j ].parentNode.removeChild( tbody[ j ] );
							}
						}
					}

					// IE completely kills leading whitespace when innerHTML is used
					if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
						div.insertBefore( context.createTextNode( rleadingWhitespace.exec(elem)[0] ), div.firstChild );
					}

					elem = div.childNodes;

					// Take out of fragment container (we need a fresh div each time)
					div.parentNode.removeChild( div );
				}
			}

			if ( elem.nodeType ) {
				ret.push( elem );
			} else {
				jQuery.merge( ret, elem );
			}
		}

		// Fix #11356: Clear elements from safeFragment
		if ( div ) {
			elem = div = safe = null;
		}

		// Reset defaultChecked for any radios and checkboxes
		// about to be appended to the DOM in IE 6/7 (#8060)
		if ( !jQuery.support.appendChecked ) {
			for ( i = 0; (elem = ret[i]) != null; i++ ) {
				if ( jQuery.nodeName( elem, "input" ) ) {
					fixDefaultChecked( elem );
				} else if ( typeof elem.getElementsByTagName !== "undefined" ) {
					jQuery.grep( elem.getElementsByTagName("input"), fixDefaultChecked );
				}
			}
		}

		// Append elements to a provided document fragment
		if ( fragment ) {
			// Special handling of each script element
			handleScript = function( elem ) {
				// Check if we consider it executable
				if ( !elem.type || rscriptType.test( elem.type ) ) {
					// Detach the script and store it in the scripts array (if provided) or the fragment
					// Return truthy to indicate that it has been handled
					return scripts ?
						scripts.push( elem.parentNode ? elem.parentNode.removeChild( elem ) : elem ) :
						fragment.appendChild( elem );
				}
			};

			for ( i = 0; (elem = ret[i]) != null; i++ ) {
				// Check if we're done after handling an executable script
				if ( !( jQuery.nodeName( elem, "script" ) && handleScript( elem ) ) ) {
					// Append to fragment and handle embedded scripts
					fragment.appendChild( elem );
					if ( typeof elem.getElementsByTagName !== "undefined" ) {
						// handleScript alters the DOM, so use jQuery.merge to ensure snapshot iteration
						jsTags = jQuery.grep( jQuery.merge( [], elem.getElementsByTagName("script") ), handleScript );

						// Splice the scripts into ret after their former ancestor and advance our index beyond them
						ret.splice.apply( ret, [i + 1, 0].concat( jsTags ) );
						i += jsTags.length;
					}
				}
			}
		}

		return ret;
	},

	cleanData: function( elems, /* internal */ acceptData ) {
		var data, id, elem, type,
			i = 0,
			internalKey = jQuery.expando,
			cache = jQuery.cache,
			deleteExpando = jQuery.support.deleteExpando,
			special = jQuery.event.special;

		for ( ; (elem = elems[i]) != null; i++ ) {

			if ( acceptData || jQuery.acceptData( elem ) ) {

				id = elem[ internalKey ];
				data = id && cache[ id ];

				if ( data ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Remove cache only if it was not already removed by jQuery.event.remove
					if ( cache[ id ] ) {

						delete cache[ id ];

						// IE does not allow us to delete expando properties from nodes,
						// nor does it have a removeAttribute function on Document nodes;
						// we must handle all of these cases
						if ( deleteExpando ) {
							delete elem[ internalKey ];

						} else if ( elem.removeAttribute ) {
							elem.removeAttribute( internalKey );

						} else {
							elem[ internalKey ] = null;
						}

						jQuery.deletedIds.push( id );
					}
				}
			}
		}
	}
});
// Limit scope pollution from any deprecated API
(function() {

var matched, browser;

// Use of jQuery.browser is frowned upon.
// More details: http://api.jquery.com/jQuery.browser
// jQuery.uaMatch maintained for back-compat
jQuery.uaMatch = function( ua ) {
	ua = ua.toLowerCase();

	var match = /(chrome)[ \/]([\w.]+)/.exec( ua ) ||
		/(webkit)[ \/]([\w.]+)/.exec( ua ) ||
		/(opera)(?:.*version|)[ \/]([\w.]+)/.exec( ua ) ||
		/(msie) ([\w.]+)/.exec( ua ) ||
		ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec( ua ) ||
		[];

	return {
		browser: match[ 1 ] || "",
		version: match[ 2 ] || "0"
	};
};

matched = jQuery.uaMatch( navigator.userAgent );
browser = {};

if ( matched.browser ) {
	browser[ matched.browser ] = true;
	browser.version = matched.version;
}

// Chrome is Webkit, but Webkit is also Safari.
if ( browser.chrome ) {
	browser.webkit = true;
} else if ( browser.webkit ) {
	browser.safari = true;
}

jQuery.browser = browser;

jQuery.sub = function() {
	function jQuerySub( selector, context ) {
		return new jQuerySub.fn.init( selector, context );
	}
	jQuery.extend( true, jQuerySub, this );
	jQuerySub.superclass = this;
	jQuerySub.fn = jQuerySub.prototype = this();
	jQuerySub.fn.constructor = jQuerySub;
	jQuerySub.sub = this.sub;
	jQuerySub.fn.init = function init( selector, context ) {
		if ( context && context instanceof jQuery && !(context instanceof jQuerySub) ) {
			context = jQuerySub( context );
		}

		return jQuery.fn.init.call( this, selector, context, rootjQuerySub );
	};
	jQuerySub.fn.init.prototype = jQuerySub.fn;
	var rootjQuerySub = jQuerySub(document);
	return jQuerySub;
};

})();
var curCSS, iframe, iframeDoc,
	ralpha = /alpha\([^)]*\)/i,
	ropacity = /opacity=([^)]*)/,
	rposition = /^(top|right|bottom|left)$/,
	// swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
	// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rmargin = /^margin/,
	rnumsplit = new RegExp( "^(" + core_pnum + ")(.*)$", "i" ),
	rnumnonpx = new RegExp( "^(" + core_pnum + ")(?!px)[a-z%]+$", "i" ),
	rrelNum = new RegExp( "^([-+])=(" + core_pnum + ")", "i" ),
	elemdisplay = {},

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: 0,
		fontWeight: 400
	},

	cssExpand = [ "Top", "Right", "Bottom", "Left" ],
	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ],

	eventsToggle = jQuery.fn.toggle;

// return a css property mapped to a potentially vendor prefixed property
function vendorPropName( style, name ) {

	// shortcut for names that are not vendor prefixed
	if ( name in style ) {
		return name;
	}

	// check for vendor prefixed names
	var capName = name.charAt(0).toUpperCase() + name.slice(1),
		origName = name,
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in style ) {
			return name;
		}
	}

	return origName;
}

function isHidden( elem, el ) {
	elem = el || elem;
	return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
}

function showHide( elements, show ) {
	var elem, display,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		values[ index ] = jQuery._data( elem, "olddisplay" );
		if ( show ) {
			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && elem.style.display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] = jQuery._data( elem, "olddisplay", css_defaultDisplay(elem.nodeName) );
			}
		} else {
			display = curCSS( elem, "display" );

			if ( !values[ index ] && display !== "none" ) {
				jQuery._data( elem, "olddisplay", display );
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

jQuery.fn.extend({
	css: function( name, value ) {
		return jQuery.access( this, function( elem, name, value ) {
			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state, fn2 ) {
		var bool = typeof state === "boolean";

		if ( jQuery.isFunction( state ) && jQuery.isFunction( fn2 ) ) {
			return eventsToggle.apply( this, arguments );
		}

		return this.each(function() {
			if ( bool ? state : isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		});
	}
});

jQuery.extend({
	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {
					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;

				}
			}
		}
	},

	// Exclude the following css properties to add px
	cssNumber: {
		"fillOpacity": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		// normalize float css property
		"float": jQuery.support.cssFloat ? "cssFloat" : "styleFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {
		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// convert relative number strings (+= or -=) to relative numbers. #7345
			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
				// Fixes bug #9237
				type = "number";
			}

			// Make sure that NaN and null values aren't set. See: #7116
			if ( value == null || type === "number" && isNaN( value ) ) {
				return;
			}

			// If a number was passed in, add 'px' to the (except for certain CSS properties)
			if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
				value += "px";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {
				// Wrapped to prevent IE from throwing errors when 'invalid' values are provided
				// Fixes bug #5509
				try {
					style[ name ] = value;
				} catch(e) {}
			}

		} else {
			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, numeric, extra ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name );
		}

		//convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Return, converting to number if forced or a qualifier was provided and val looks numeric
		if ( numeric || extra !== undefined ) {
			num = parseFloat( val );
			return numeric || jQuery.isNumeric( num ) ? num || 0 : val;
		}
		return val;
	},

	// A method for quickly swapping in/out CSS properties to get correct calculations
	swap: function( elem, options, callback ) {
		var ret, name,
			old = {};

		// Remember the old values, and insert the new ones
		for ( name in options ) {
			old[ name ] = elem.style[ name ];
			elem.style[ name ] = options[ name ];
		}

		ret = callback.call( elem );

		// Revert the old values
		for ( name in options ) {
			elem.style[ name ] = old[ name ];
		}

		return ret;
	}
});

// NOTE: To any future maintainer, we've window.getComputedStyle
// because jsdom on node.js will break without it.
if ( window.getComputedStyle ) {
	curCSS = function( elem, name ) {
		var ret, width, minWidth, maxWidth,
			computed = window.getComputedStyle( elem, null ),
			style = elem.style;

		if ( computed ) {

			ret = computed[ name ];
			if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
				ret = jQuery.style( elem, name );
			}

			// A tribute to the "awesome hack by Dean Edwards"
			// Chrome < 17 and Safari 5.0 uses "computed value" instead of "used value" for margin-right
			// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
			// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
			if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		return ret;
	};
} else if ( document.documentElement.currentStyle ) {
	curCSS = function( elem, name ) {
		var left, rsLeft,
			ret = elem.currentStyle && elem.currentStyle[ name ],
			style = elem.style;

		// Avoid setting ret to empty string here
		// so we don't default to auto
		if ( ret == null && style && style[ name ] ) {
			ret = style[ name ];
		}

		// From the awesome hack by Dean Edwards
		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

		// If we're not dealing with a regular pixel number
		// but a number that has a weird ending, we need to convert it to pixels
		// but not position css attributes, as those are proportional to the parent element instead
		// and we can't measure the parent instead because it might trigger a "stacking dolls" problem
		if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {

			// Remember the original values
			left = style.left;
			rsLeft = elem.runtimeStyle && elem.runtimeStyle.left;

			// Put in the new values to get a computed value out
			if ( rsLeft ) {
				elem.runtimeStyle.left = elem.currentStyle.left;
			}
			style.left = name === "fontSize" ? "1em" : ret;
			ret = style.pixelLeft + "px";

			// Revert the changed values
			style.left = left;
			if ( rsLeft ) {
				elem.runtimeStyle.left = rsLeft;
			}
		}

		return ret === "" ? "auto" : ret;
	};
}

function setPositiveNumber( elem, value, subtract ) {
	var matches = rnumsplit.exec( value );
	return matches ?
			Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
			value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?
		// If we already have the right measurement, avoid augmentation
		4 :
		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {
		// both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			// we use jQuery.css instead of curCSS here
			// because of the reliableMarginRight CSS hook!
			val += jQuery.css( elem, extra + cssExpand[ i ], true );
		}

		// From this point on we use curCSS for maximum performance (relevant in animations)
		if ( isBorderBox ) {
			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= parseFloat( curCSS( elem, "padding" + cssExpand[ i ] ) ) || 0;
			}

			// at this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= parseFloat( curCSS( elem, "border" + cssExpand[ i ] + "Width" ) ) || 0;
			}
		} else {
			// at this point, extra isn't content, so add padding
			val += parseFloat( curCSS( elem, "padding" + cssExpand[ i ] ) ) || 0;

			// at this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += parseFloat( curCSS( elem, "border" + cssExpand[ i ] + "Width" ) ) || 0;
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		valueIsBorderBox = true,
		isBorderBox = jQuery.support.boxSizing && jQuery.css( elem, "boxSizing" ) === "border-box";

	// some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {
		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test(val) ) {
			return val;
		}

		// we need the check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox && ( jQuery.support.boxSizingReliable || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox
		)
	) + "px";
}


// Try to determine the default display value of an element
function css_defaultDisplay( nodeName ) {
	if ( elemdisplay[ nodeName ] ) {
		return elemdisplay[ nodeName ];
	}

	var elem = jQuery( "<" + nodeName + ">" ).appendTo( document.body ),
		display = elem.css("display");
	elem.remove();

	// If the simple way fails,
	// get element's real default display by attaching it to a temp iframe
	if ( display === "none" || display === "" ) {
		// Use the already-created iframe if possible
		iframe = document.body.appendChild(
			iframe || jQuery.extend( document.createElement("iframe"), {
				frameBorder: 0,
				width: 0,
				height: 0
			})
		);

		// Create a cacheable copy of the iframe document on first call.
		// IE and Opera will allow us to reuse the iframeDoc without re-writing the fake HTML
		// document to it; WebKit & Firefox won't allow reusing the iframe document.
		if ( !iframeDoc || !iframe.createElement ) {
			iframeDoc = ( iframe.contentWindow || iframe.contentDocument ).document;
			iframeDoc.write("<!doctype html><html><body>");
			iframeDoc.close();
		}

		elem = iframeDoc.body.appendChild( iframeDoc.createElement(nodeName) );

		display = curCSS( elem, "display" );
		document.body.removeChild( iframe );
	}

	// Store the correct default display
	elemdisplay[ nodeName ] = display;

	return display;
}

jQuery.each([ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {
				// certain elements can have dimension info if we invisibly show them
				// however, it must have a current display style that would benefit from this
				if ( elem.offsetWidth === 0 && rdisplayswap.test( curCSS( elem, "display" ) ) ) {
					return jQuery.swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, name, extra );
					});
				} else {
					return getWidthOrHeight( elem, name, extra );
				}
			}
		},

		set: function( elem, value, extra ) {
			return setPositiveNumber( elem, value, extra ?
				augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.support.boxSizing && jQuery.css( elem, "boxSizing" ) === "border-box"
				) : 0
			);
		}
	};
});

if ( !jQuery.support.opacity ) {
	jQuery.cssHooks.opacity = {
		get: function( elem, computed ) {
			// IE uses filters for opacity
			return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "" ) ?
				( 0.01 * parseFloat( RegExp.$1 ) ) + "" :
				computed ? "1" : "";
		},

		set: function( elem, value ) {
			var style = elem.style,
				currentStyle = elem.currentStyle,
				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
				filter = currentStyle && currentStyle.filter || style.filter || "";

			// IE has trouble with opacity if it does not have layout
			// Force it by setting the zoom level
			style.zoom = 1;

			// if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652
			if ( value >= 1 && jQuery.trim( filter.replace( ralpha, "" ) ) === "" &&
				style.removeAttribute ) {

				// Setting style.filter to null, "" & " " still leave "filter:" in the cssText
				// if "filter:" is present at all, clearType is disabled, we want to avoid this
				// style.removeAttribute is IE Only, but so apparently is this code path...
				style.removeAttribute( "filter" );

				// if there there is no filter style applied in a css rule, we are done
				if ( currentStyle && !currentStyle.filter ) {
					return;
				}
			}

			// otherwise, set new filter values
			style.filter = ralpha.test( filter ) ?
				filter.replace( ralpha, opacity ) :
				filter + " " + opacity;
		}
	};
}

// These hooks cannot be added until DOM ready because the support test
// for it is not run until after DOM ready
jQuery(function() {
	if ( !jQuery.support.reliableMarginRight ) {
		jQuery.cssHooks.marginRight = {
			get: function( elem, computed ) {
				// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
				// Work around by temporarily setting element display to inline-block
				return jQuery.swap( elem, { "display": "inline-block" }, function() {
					if ( computed ) {
						return curCSS( elem, "marginRight" );
					}
				});
			}
		};
	}

	// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
	// getComputedStyle returns percent when specified for top/left/bottom/right
	// rather than make the css module depend on the offset module, we just check for it here
	if ( !jQuery.support.pixelPosition && jQuery.fn.position ) {
		jQuery.each( [ "top", "left" ], function( i, prop ) {
			jQuery.cssHooks[ prop ] = {
				get: function( elem, computed ) {
					if ( computed ) {
						var ret = curCSS( elem, prop );
						// if curCSS returns percentage, fallback to offset
						return rnumnonpx.test( ret ) ? jQuery( elem ).position()[ prop ] + "px" : ret;
					}
				}
			};
		});
	}

});

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.hidden = function( elem ) {
		return ( elem.offsetWidth === 0 && elem.offsetHeight === 0 ) || (!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || curCSS( elem, "display" )) === "none");
	};

	jQuery.expr.filters.visible = function( elem ) {
		return !jQuery.expr.filters.hidden( elem );
	};
}

// These hooks are used by animate to expand properties
jQuery.each({
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i,

				// assumes a single number if not a string
				parts = typeof value === "string" ? value.split(" ") : [ value ],
				expanded = {};

			for ( i = 0; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
});
var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rinput = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
	rselectTextarea = /^(?:select|textarea)/i;

jQuery.fn.extend({
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map(function(){
			return this.elements ? jQuery.makeArray( this.elements ) : this;
		})
		.filter(function(){
			return this.name && !this.disabled &&
				( this.checked || rselectTextarea.test( this.nodeName ) ||
					rinput.test( this.type ) );
		})
		.map(function( i, elem ){
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val, i ){
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					}) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		}).get();
	}
});

//Serialize an array of form elements or a set of
//key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {
			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		});

	} else {
		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {
		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {
				// Treat each array item as a scalar.
				add( prefix, v );

			} else {
				// If array item is non-scalar (array or object), encode its
				// numeric index to resolve deserialization ambiguity issues.
				// Note that rack (as of 1.0.0) can't currently deserialize
				// nested arrays properly, and attempting to do so may cause
				// a server error. Possible fixes are to modify rack's
				// deserialization algorithm or to provide an option or flag
				// to force array serialization to be shallow.
				buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
			}
		});

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {
		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {
		// Serialize scalar item.
		add( prefix, obj );
	}
}
var // Document location
	ajaxLocation,
	// Document location segments
	ajaxLocParts,

	rhash = /#.*$/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, // IE leaves an \r character at EOL
	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rquery = /\?/,
	rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
	rts = /([?&])_=[^&]*/,
	rurl = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,

	// Keep a copy of the old load method
	_load = jQuery.fn.load,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = ["*/"] + ["*"];

// #8138, IE may throw an exception when accessing
// a field from window.location if document.domain has been set
try {
	ajaxLocation = location.href;
} catch( e ) {
	// Use the href attribute of an A element
	// since IE will modify it given document.location
	ajaxLocation = document.createElement( "a" );
	ajaxLocation.href = "";
	ajaxLocation = ajaxLocation.href;
}

// Segment location into parts
ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType, list, placeBefore,
			dataTypes = dataTypeExpression.toLowerCase().split( core_rspace ),
			i = 0,
			length = dataTypes.length;

		if ( jQuery.isFunction( func ) ) {
			// For each dataType in the dataTypeExpression
			for ( ; i < length; i++ ) {
				dataType = dataTypes[ i ];
				// We control if we're asked to add before
				// any existing element
				placeBefore = /^\+/.test( dataType );
				if ( placeBefore ) {
					dataType = dataType.substr( 1 ) || "*";
				}
				list = structure[ dataType ] = structure[ dataType ] || [];
				// then we add to the structure accordingly
				list[ placeBefore ? "unshift" : "push" ]( func );
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR,
		dataType /* internal */, inspected /* internal */ ) {

	dataType = dataType || options.dataTypes[ 0 ];
	inspected = inspected || {};

	inspected[ dataType ] = true;

	var selection,
		list = structure[ dataType ],
		i = 0,
		length = list ? list.length : 0,
		executeOnly = ( structure === prefilters );

	for ( ; i < length && ( executeOnly || !selection ); i++ ) {
		selection = list[ i ]( options, originalOptions, jqXHR );
		// If we got redirected to another dataType
		// we try there if executing only and not done already
		if ( typeof selection === "string" ) {
			if ( !executeOnly || inspected[ selection ] ) {
				selection = undefined;
			} else {
				options.dataTypes.unshift( selection );
				selection = inspectPrefiltersOrTransports(
						structure, options, originalOptions, jqXHR, selection, inspected );
			}
		}
	}
	// If we're only executing or nothing was selected
	// we try the catchall dataType if not done already
	if ( ( executeOnly || !selection ) && !inspected[ "*" ] ) {
		selection = inspectPrefiltersOrTransports(
				structure, options, originalOptions, jqXHR, "*", inspected );
	}
	// unnecessary when only executing (prefilters)
	// but it'll be ignored by the caller in that case
	return selection;
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};
	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}
}

jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	// Don't do a request if no elements are being requested
	if ( !this.length ) {
		return this;
	}

	var selector, type, response,
		self = this,
		off = url.indexOf(" ");

	if ( off >= 0 ) {
		selector = url.slice( off, url.length );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// Request the remote document
	jQuery.ajax({
		url: url,

		// if "type" variable is undefined, then "GET" method will be used
		type: type,
		dataType: "html",
		data: params,
		complete: function( jqXHR, status ) {
			if ( callback ) {
				self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
			}
		}
	}).done(function( responseText ) {

		// Save response for use in complete callback
		response = arguments;

		// See if a selector was specified
		self.html( selector ?

			// Create a dummy div to hold the results
			jQuery("<div>")

				// inject the contents of the document in, removing the scripts
				// to avoid any 'Permission Denied' errors in IE
				.append( responseText.replace( rscript, "" ) )

				// Locate the specified elements
				.find( selector ) :

			// If not, just inject the full result
			responseText );

	});

	return this;
};

// Attach a bunch of functions for handling common AJAX events
jQuery.each( "ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split( " " ), function( i, o ){
	jQuery.fn[ o ] = function( f ){
		return this.on( o, f );
	};
});

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {
		// shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		return jQuery.ajax({
			type: method,
			url: url,
			data: data,
			success: callback,
			dataType: type
		});
	};
});

jQuery.extend({

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		if ( settings ) {
			// Building a settings object
			ajaxExtend( target, jQuery.ajaxSettings );
		} else {
			// Extending ajaxSettings
			settings = target;
			target = jQuery.ajaxSettings;
		}
		ajaxExtend( target, settings );
		return target;
	},

	ajaxSettings: {
		url: ajaxLocation,
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		type: "GET",
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		processData: true,
		async: true,
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			xml: "application/xml, text/xml",
			html: "text/html",
			text: "text/plain",
			json: "application/json, text/javascript",
			"*": allTypes
		},

		contents: {
			xml: /xml/,
			html: /html/,
			json: /json/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText"
		},

		// List of data converters
		// 1) key format is "source_type destination_type" (a single space in-between)
		// 2) the catchall symbol "*" can be used for source_type
		converters: {

			// Convert anything to text
			"* text": window.String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			context: true,
			url: true
		}
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var // ifModified key
			ifModifiedKey,
			// Response headers
			responseHeadersString,
			responseHeaders,
			// transport
			transport,
			// timeout handle
			timeoutTimer,
			// Cross-domain detection vars
			parts,
			// To know if global events are to be dispatched
			fireGlobals,
			// Loop variable
			i,
			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),
			// Callbacks context
			callbackContext = s.context || s,
			// Context for global events
			// It's the callbackContext if one was provided in the options
			// and if it's a DOM node or a jQuery collection
			globalEventContext = callbackContext !== s &&
				( callbackContext.nodeType || callbackContext instanceof jQuery ) ?
						jQuery( callbackContext ) : jQuery.event,
			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),
			// Status-dependent callbacks
			statusCode = s.statusCode || {},
			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},
			// The jqXHR state
			state = 0,
			// Default abort message
			strAbort = "canceled",
			// Fake xhr
			jqXHR = {

				readyState: 0,

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( !state ) {
						var lname = name.toLowerCase();
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match === undefined ? null : match;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					statusText = statusText || strAbort;
					if ( transport ) {
						transport.abort( statusText );
					}
					done( 0, statusText );
					return this;
				}
			};

		// Callback for when everything is done
		// It is defined here because jslint complains if it is declared
		// at the end of the function (which would be more logical and readable)
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// If successful, handle type chaining
			if ( status >= 200 && status < 300 || status === 304 ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {

					modified = jqXHR.getResponseHeader("Last-Modified");
					if ( modified ) {
						jQuery.lastModified[ ifModifiedKey ] = modified;
					}
					modified = jqXHR.getResponseHeader("Etag");
					if ( modified ) {
						jQuery.etag[ ifModifiedKey ] = modified;
					}
				}

				// If not modified
				if ( status === 304 ) {

					statusText = "notmodified";
					isSuccess = true;

				// If we have data
				} else {

					isSuccess = ajaxConvert( s, response );
					statusText = isSuccess.state;
					success = isSuccess.data;
					error = isSuccess.error;
					isSuccess = !error;
				}
			} else {
				// We extract error from statusText
				// then normalize statusText and status for non-aborts
				error = statusText;
				if ( !statusText || status ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = "" + ( nativeStatusText || statusText );

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajax" + ( isSuccess ? "Success" : "Error" ),
						[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		// Attach deferreds
		deferred.promise( jqXHR );
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;
		jqXHR.complete = completeDeferred.add;

		// Status-dependent callbacks
		jqXHR.statusCode = function( map ) {
			if ( map ) {
				var tmp;
				if ( state < 2 ) {
					for ( tmp in map ) {
						statusCode[ tmp ] = [ statusCode[tmp], map[tmp] ];
					}
				} else {
					tmp = map[ jqXHR.status ];
					jqXHR.always( tmp );
				}
			}
			return this;
		};

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
		// We also use the url parameter if available
		s.url = ( ( url || s.url ) + "" ).replace( rhash, "" ).replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().split( core_rspace );

		// Determine if a cross-domain request is in order
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] != ajaxLocParts[ 1 ] || parts[ 2 ] != ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? 80 : 443 ) ) !=
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? 80 : 443 ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		fireGlobals = s.global;

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.data;
				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Get ifModifiedKey before adding the anti-cache parameter
			ifModifiedKey = s.url;

			// Add anti-cache in url if needed
			if ( s.cache === false ) {

				var ts = jQuery.now(),
					// try replacing _= if it is there
					ret = s.url.replace( rts, "$1_=" + ts );

				// if nothing was replaced, add timestamp to the end
				s.url = ret + ( ( ret === s.url ) ? ( rquery.test( s.url ) ? "&" : "?" ) + "_=" + ts : "" );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			ifModifiedKey = ifModifiedKey || s.url;
			if ( jQuery.lastModified[ ifModifiedKey ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ ifModifiedKey ] );
			}
			if ( jQuery.etag[ ifModifiedKey ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ ifModifiedKey ] );
			}
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
				// Abort if not done already and return
				return jqXHR.abort();

		}

		// aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;
			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}
			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = setTimeout( function(){
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch (e) {
				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );
				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		return jqXHR;
	},

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {}

});

/* Handles responses to an ajax request:
 * - sets all responseXXX fields accordingly
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes,
		responseFields = s.responseFields;

	// Fill responseXXX fields
	for ( type in responseFields ) {
		if ( type in responses ) {
			jqXHR[ responseFields[type] ] = responses[ type ];
		}
	}

	// Remove auto dataType and get content-type in the process
	while( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "content-type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {
		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}
		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

// Chain conversions given the request and the original response
function ajaxConvert( s, response ) {

	var conv, conv2, current, tmp,
		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice(),
		prev = dataTypes[ 0 ],
		converters = {},
		i = 0;

	// Apply the dataFilter if provided
	if ( s.dataFilter ) {
		response = s.dataFilter( response, s.dataType );
	}

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	// Convert to each sequential dataType, tolerating list modification
	for ( ; (current = dataTypes[++i]); ) {

		// There's only work to do if current dataType is non-auto
		if ( current !== "*" ) {

			// Convert response if prev dataType is non-auto and differs from current
			if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split(" ");
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {
								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.splice( i--, 0, current );
								}

								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s["throws"] ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
						}
					}
				}
			}

			// Update prev for next iteration
			prev = current;
		}
	}

	return { state: "success", data: response };
}
var oldCallbacks = [],
	rquestion = /\?/,
	rjsonp = /(=)\?(?=&|$)|\?\?/,
	nonce = jQuery.now();

// Default jsonp settings
jQuery.ajaxSetup({
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		data = s.data,
		url = s.url,
		hasCallback = s.jsonp !== false,
		replaceInUrl = hasCallback && rjsonp.test( url ),
		replaceInData = hasCallback && !replaceInUrl && typeof data === "string" &&
			!( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") &&
			rjsonp.test( data );

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( s.dataTypes[ 0 ] === "jsonp" || replaceInUrl || replaceInData ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;
		overwritten = window[ callbackName ];

		// Insert callback into url or form data
		if ( replaceInUrl ) {
			s.url = url.replace( rjsonp, "$1" + callbackName );
		} else if ( replaceInData ) {
			s.data = data.replace( rjsonp, "$1" + callbackName );
		} else if ( hasCallback ) {
			s.url += ( rquestion.test( url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters["script json"] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always(function() {
			// Restore preexisting value
			window[ callbackName ] = overwritten;

			// Save back as free
			if ( s[ callbackName ] ) {
				// make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		});

		// Delegate to script
		return "script";
	}
});
// Install script dataType
jQuery.ajaxSetup({
	accepts: {
		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /javascript|ecmascript/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
});

// Handle cache's special case and global
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
		s.global = false;
	}
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function(s) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {

		var script,
			head = document.head || document.getElementsByTagName( "head" )[0] || document.documentElement;

		return {

			send: function( _, callback ) {

				script = document.createElement( "script" );

				script.async = "async";

				if ( s.scriptCharset ) {
					script.charset = s.scriptCharset;
				}

				script.src = s.url;

				// Attach handlers for all browsers
				script.onload = script.onreadystatechange = function( _, isAbort ) {

					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

						// Handle memory leak in IE
						script.onload = script.onreadystatechange = null;

						// Remove the script
						if ( head && script.parentNode ) {
							head.removeChild( script );
						}

						// Dereference the script
						script = undefined;

						// Callback if not abort
						if ( !isAbort ) {
							callback( 200, "success" );
						}
					}
				};
				// Use insertBefore instead of appendChild  to circumvent an IE6 bug.
				// This arises when a base node is used (#2709 and #4378).
				head.insertBefore( script, head.firstChild );
			},

			abort: function() {
				if ( script ) {
					script.onload( 0, 1 );
				}
			}
		};
	}
});
var xhrCallbacks,
	// #5280: Internet Explorer will keep connections alive if we don't abort on unload
	xhrOnUnloadAbort = window.ActiveXObject ? function() {
		// Abort all pending requests
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]( 0, 1 );
		}
	} : false,
	xhrId = 0;

// Functions to create xhrs
function createStandardXHR() {
	try {
		return new window.XMLHttpRequest();
	} catch( e ) {}
}

function createActiveXHR() {
	try {
		return new window.ActiveXObject( "Microsoft.XMLHTTP" );
	} catch( e ) {}
}

// Create the request object
// (This is still attached to ajaxSettings for backward compatibility)
jQuery.ajaxSettings.xhr = window.ActiveXObject ?
	/* Microsoft failed to properly
	 * implement the XMLHttpRequest in IE7 (can't request local files),
	 * so we use the ActiveXObject when it is available
	 * Additionally XMLHttpRequest can be disabled in IE7/IE8 so
	 * we need a fallback.
	 */
	function() {
		return !this.isLocal && createStandardXHR() || createActiveXHR();
	} :
	// For all other browsers, use the standard XMLHttpRequest object
	createStandardXHR;

// Determine support properties
(function( xhr ) {
	jQuery.extend( jQuery.support, {
		ajax: !!xhr,
		cors: !!xhr && ( "withCredentials" in xhr )
	});
})( jQuery.ajaxSettings.xhr() );

// Create transport if the browser can provide an xhr
if ( jQuery.support.ajax ) {

	jQuery.ajaxTransport(function( s ) {
		// Cross domain only allowed if supported through XMLHttpRequest
		if ( !s.crossDomain || jQuery.support.cors ) {

			var callback;

			return {
				send: function( headers, complete ) {

					// Get a new xhr
					var handle, i,
						xhr = s.xhr();

					// Open the socket
					// Passing null username, generates a login popup on Opera (#2865)
					if ( s.username ) {
						xhr.open( s.type, s.url, s.async, s.username, s.password );
					} else {
						xhr.open( s.type, s.url, s.async );
					}

					// Apply custom fields if provided
					if ( s.xhrFields ) {
						for ( i in s.xhrFields ) {
							xhr[ i ] = s.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( s.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( s.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !s.crossDomain && !headers["X-Requested-With"] ) {
						headers[ "X-Requested-With" ] = "XMLHttpRequest";
					}

					// Need an extra try/catch for cross domain requests in Firefox 3
					try {
						for ( i in headers ) {
							xhr.setRequestHeader( i, headers[ i ] );
						}
					} catch( _ ) {}

					// Do send the request
					// This may raise an exception which is actually
					// handled in jQuery.ajax (so no try/catch here)
					xhr.send( ( s.hasContent && s.data ) || null );

					// Listener
					callback = function( _, isAbort ) {

						var status,
							statusText,
							responseHeaders,
							responses,
							xml;

						// Firefox throws exceptions when accessing properties
						// of an xhr when a network error occurred
						// http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)
						try {

							// Was never called and is aborted or complete
							if ( callback && ( isAbort || xhr.readyState === 4 ) ) {

								// Only called once
								callback = undefined;

								// Do not keep as active anymore
								if ( handle ) {
									xhr.onreadystatechange = jQuery.noop;
									if ( xhrOnUnloadAbort ) {
										delete xhrCallbacks[ handle ];
									}
								}

								// If it's an abort
								if ( isAbort ) {
									// Abort it manually if needed
									if ( xhr.readyState !== 4 ) {
										xhr.abort();
									}
								} else {
									status = xhr.status;
									responseHeaders = xhr.getAllResponseHeaders();
									responses = {};
									xml = xhr.responseXML;

									// Construct response list
									if ( xml && xml.documentElement /* #4958 */ ) {
										responses.xml = xml;
									}

									// When requesting binary data, IE6-9 will throw an exception
									// on any attempt to access responseText (#11426)
									try {
										responses.text = xhr.responseText;
									} catch( _ ) {
									}

									// Firefox throws an exception when accessing
									// statusText for faulty cross-domain requests
									try {
										statusText = xhr.statusText;
									} catch( e ) {
										// We normalize with Webkit giving an empty statusText
										statusText = "";
									}

									// Filter status for non standard behaviors

									// If the request is local and we have data: assume a success
									// (success with no data won't get notified, that's the best we
									// can do given current implementations)
									if ( !status && s.isLocal && !s.crossDomain ) {
										status = responses.text ? 200 : 404;
									// IE - #1450: sometimes returns 1223 when it should be 204
									} else if ( status === 1223 ) {
										status = 204;
									}
								}
							}
						} catch( firefoxAccessException ) {
							if ( !isAbort ) {
								complete( -1, firefoxAccessException );
							}
						}

						// Call complete if needed
						if ( responses ) {
							complete( status, statusText, responses, responseHeaders );
						}
					};

					if ( !s.async ) {
						// if we're in sync mode we fire the callback
						callback();
					} else if ( xhr.readyState === 4 ) {
						// (IE6 & IE7) if it's in cache and has been
						// retrieved directly we need to fire the callback
						setTimeout( callback, 0 );
					} else {
						handle = ++xhrId;
						if ( xhrOnUnloadAbort ) {
							// Create the active xhrs callbacks list if needed
							// and attach the unload handler
							if ( !xhrCallbacks ) {
								xhrCallbacks = {};
								jQuery( window ).unload( xhrOnUnloadAbort );
							}
							// Add to list of active xhrs callbacks
							xhrCallbacks[ handle ] = callback;
						}
						xhr.onreadystatechange = callback;
					}
				},

				abort: function() {
					if ( callback ) {
						callback(0,1);
					}
				}
			};
		}
	});
}
var fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rfxnum = new RegExp( "^(?:([-+])=|)(" + core_pnum + ")([a-z%]*)$", "i" ),
	rrun = /queueHooks$/,
	animationPrefilters = [ defaultPrefilter ],
	tweeners = {
		"*": [function( prop, value ) {
			var end, unit, prevScale,
				tween = this.createTween( prop, value ),
				parts = rfxnum.exec( value ),
				target = tween.cur(),
				start = +target || 0,
				scale = 1;

			if ( parts ) {
				end = +parts[2];
				unit = parts[3] || ( jQuery.cssNumber[ prop ] ? "" : "px" );

				// We need to compute starting value
				if ( unit !== "px" && start ) {
					// Iteratively approximate from a nonzero starting point
					// Prefer the current property, because this process will be trivial if it uses the same units
					// Fallback to end or a simple constant
					start = jQuery.css( tween.elem, prop, true ) || end || 1;

					do {
						// If previous iteration zeroed out, double until we get *something*
						// Use a string for doubling factor so we don't accidentally see scale as unchanged below
						prevScale = scale = scale || ".5";

						// Adjust and apply
						start = start / scale;
						jQuery.style( tween.elem, prop, start + unit );

						// Update scale, tolerating zeroes from tween.cur()
						scale = tween.cur() / target;

					// Stop looping if we've hit the mark or scale is unchanged
					} while ( scale !== 1 && scale !== prevScale );
				}

				tween.unit = unit;
				tween.start = start;
				// If a +=/-= token was provided, we're doing a relative animation
				tween.end = parts[1] ? start + ( parts[1] + 1 ) * end : end;
			}
			return tween;
		}]
	};

// Animations created synchronously will run synchronously
function createFxNow() {
	setTimeout(function() {
		fxNow = undefined;
	}, 0 );
	return ( fxNow = jQuery.now() );
}

function createTweens( animation, props ) {
	jQuery.each( props, function( prop, value ) {
		var collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
			index = 0,
			length = collection.length;
		for ( ; index < length; index++ ) {
			if ( collection[ index ].call( animation, prop, value ) ) {

				// we're done with this property
				return;
			}
		}
	});
}

function Animation( elem, properties, options ) {
	var result,
		index = 0,
		tweenerIndex = 0,
		length = animationPrefilters.length,
		deferred = jQuery.Deferred().always( function() {
			// don't match elem in the :animated selector
			delete tick.elem;
		}),
		tick = function() {
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
				percent = 1 - ( remaining / animation.duration || 0 ),
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ]);

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise({
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, { specialEasing: {} }, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end, easing ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,
					// if we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;

				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// resolve when we played the last frame
				// otherwise, reject
				if ( gotoEnd ) {
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		}),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			return result;
		}
	}

	createTweens( animation, props );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			anim: animation,
			queue: animation.opts.queue,
			elem: elem
		})
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// not quite $.extend, this wont overwrite keys already present.
			// also - reusing 'index' from above because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

jQuery.Animation = jQuery.extend( Animation, {

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.split(" ");
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			tweeners[ prop ] = tweeners[ prop ] || [];
			tweeners[ prop ].unshift( callback );
		}
	},

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			animationPrefilters.unshift( callback );
		} else {
			animationPrefilters.push( callback );
		}
	}
});

function defaultPrefilter( elem, props, opts ) {
	var index, prop, value, length, dataShow, tween, hooks, oldfire,
		anim = this,
		style = elem.style,
		orig = {},
		handled = [],
		hidden = elem.nodeType && isHidden( elem );

	// handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always(function() {
			// doing this makes sure that the complete handler will be called
			// before this completes
			anim.always(function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			});
		});
	}

	// height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE does not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		if ( jQuery.css( elem, "display" ) === "inline" &&
				jQuery.css( elem, "float" ) === "none" ) {

			// inline-level elements accept inline-block;
			// block-level elements need to be inline with layout
			if ( !jQuery.support.inlineBlockNeedsLayout || css_defaultDisplay( elem.nodeName ) === "inline" ) {
				style.display = "inline-block";

			} else {
				style.zoom = 1;
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		if ( !jQuery.support.shrinkWrapBlocks ) {
			anim.done(function() {
				style.overflow = opts.overflow[ 0 ];
				style.overflowX = opts.overflow[ 1 ];
				style.overflowY = opts.overflow[ 2 ];
			});
		}
	}


	// show/hide pass
	for ( index in props ) {
		value = props[ index ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ index ];
			if ( value === ( hidden ? "hide" : "show" ) ) {
				continue;
			}
			handled.push( index );
		}
	}

	length = handled.length;
	if ( length ) {
		dataShow = jQuery._data( elem, "fxshow" ) || jQuery._data( elem, "fxshow", {} );
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done(function() {
				jQuery( elem ).hide();
			});
		}
		anim.done(function() {
			var prop;
			jQuery.removeData( elem, "fxshow", true );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		});
		for ( index = 0 ; index < length ; index++ ) {
			prop = handled[ index ];
			tween = anim.createTween( prop, hidden ? dataShow[ prop ] : 0 );
			orig[ prop ] = dataShow[ prop ] || jQuery.style( elem, prop );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}
	}
}

function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || "swing";
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			if ( tween.elem[ tween.prop ] != null &&
				(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
				return tween.elem[ tween.prop ];
			}

			// passing any value as a 4th parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails
			// so, simple values such as "10px" are parsed to Float.
			// complex values such as "rotate(1rad)" are returned as is.
			result = jQuery.css( tween.elem, tween.prop, false, "" );
			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {
			// use step hook for back compat - use cssHook if its there - use .style if its
			// available and use plain properties where available
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Remove in 2.0 - this supports IE8's panic based approach
// to setting things on disconnected nodes

Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ||
			// special check for .toggle( handler, handler, ... )
			( !i && jQuery.isFunction( speed ) && jQuery.isFunction( easing ) ) ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
});

jQuery.fn.extend({
	fadeTo: function( speed, to, easing, callback ) {

		// show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// animate to the value specified
			.end().animate({ opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {
				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations resolve immediately
				if ( empty ) {
					anim.stop( true );
				}
			};

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each(function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = jQuery._data( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// start the next in the queue if the last step wasn't forced
			// timers currently will call their complete callbacks, which will dequeue
			// but only if they were gotoEnd
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		});
	}
});

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		attrs = { height: type },
		i = 0;

	// if we include width, step value is 1 to do all cssExpand values,
	// if we don't include width, step value is 2 to skip over Left and Right
	includeWidth = includeWidth? 1 : 0;
	for( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx("show"),
	slideUp: genFx("hide"),
	slideToggle: genFx("toggle"),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
});

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
		opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p*Math.PI ) / 2;
	}
};

jQuery.timers = [];
jQuery.fx = Tween.prototype.init;
jQuery.fx.tick = function() {
	var timer,
		timers = jQuery.timers,
		i = 0;

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];
		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
};

jQuery.fx.timer = function( timer ) {
	if ( timer() && jQuery.timers.push( timer ) && !timerId ) {
		timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.interval = 13;

jQuery.fx.stop = function() {
	clearInterval( timerId );
	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,
	// Default speed
	_default: 400
};

// Back Compat <1.8 extension point
jQuery.fx.step = {};

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.animated = function( elem ) {
		return jQuery.grep(jQuery.timers, function( fn ) {
			return elem === fn.elem;
		}).length;
	};
}
var rroot = /^(?:body|html)$/i;

jQuery.fn.offset = function( options ) {
	if ( arguments.length ) {
		return options === undefined ?
			this :
			this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
	}

	var box, docElem, body, win, clientTop, clientLeft, scrollTop, scrollLeft, top, left,
		elem = this[ 0 ],
		doc = elem && elem.ownerDocument;

	if ( !doc ) {
		return;
	}

	if ( (body = doc.body) === elem ) {
		return jQuery.offset.bodyOffset( elem );
	}

	docElem = doc.documentElement;

	// Make sure we're not dealing with a disconnected DOM node
	if ( !jQuery.contains( docElem, elem ) ) {
		return { top: 0, left: 0 };
	}

	box = elem.getBoundingClientRect();
	win = getWindow( doc );
	clientTop  = docElem.clientTop  || body.clientTop  || 0;
	clientLeft = docElem.clientLeft || body.clientLeft || 0;
	scrollTop  = win.pageYOffset || docElem.scrollTop;
	scrollLeft = win.pageXOffset || docElem.scrollLeft;
	top  = box.top  + scrollTop  - clientTop;
	left = box.left + scrollLeft - clientLeft;

	return { top: top, left: left };
};

jQuery.offset = {

	bodyOffset: function( body ) {
		var top = body.offsetTop,
			left = body.offsetLeft;

		if ( jQuery.support.doesNotIncludeMarginInBodyOffset ) {
			top  += parseFloat( jQuery.css(body, "marginTop") ) || 0;
			left += parseFloat( jQuery.css(body, "marginLeft") ) || 0;
		}

		return { top: top, left: left };
	},

	setOffset: function( elem, options, i ) {
		var position = jQuery.css( elem, "position" );

		// set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		var curElem = jQuery( elem ),
			curOffset = curElem.offset(),
			curCSSTop = jQuery.css( elem, "top" ),
			curCSSLeft = jQuery.css( elem, "left" ),
			calculatePosition = ( position === "absolute" || position === "fixed" ) && jQuery.inArray("auto", [curCSSTop, curCSSLeft]) > -1,
			props = {}, curPosition = {}, curTop, curLeft;

		// need to be able to calculate position if either top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;
		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {
			options = options.call( elem, i, curOffset );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};


jQuery.fn.extend({

	position: function() {
		if ( !this[0] ) {
			return;
		}

		var elem = this[0],

		// Get *real* offsetParent
		offsetParent = this.offsetParent(),

		// Get correct offsets
		offset       = this.offset(),
		parentOffset = rroot.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset();

		// Subtract element margins
		// note: when an element has margin: auto the offsetLeft and marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		offset.top  -= parseFloat( jQuery.css(elem, "marginTop") ) || 0;
		offset.left -= parseFloat( jQuery.css(elem, "marginLeft") ) || 0;

		// Add offsetParent borders
		parentOffset.top  += parseFloat( jQuery.css(offsetParent[0], "borderTopWidth") ) || 0;
		parentOffset.left += parseFloat( jQuery.css(offsetParent[0], "borderLeftWidth") ) || 0;

		// Subtract the two offsets
		return {
			top:  offset.top  - parentOffset.top,
			left: offset.left - parentOffset.left
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent = this.offsetParent || document.body;
			while ( offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, "position") === "static") ) {
				offsetParent = offsetParent.offsetParent;
			}
			return offsetParent || document.body;
		});
	}
});


// Create scrollLeft and scrollTop methods
jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
	var top = /Y/.test( prop );

	jQuery.fn[ method ] = function( val ) {
		return jQuery.access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? (prop in win) ? win[ prop ] :
					win.document.documentElement[ method ] :
					elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : jQuery( win ).scrollLeft(),
					 top ? val : jQuery( win ).scrollTop()
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length, null );
	};
});

function getWindow( elem ) {
	return jQuery.isWindow( elem ) ?
		elem :
		elem.nodeType === 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}
// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
		// margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return jQuery.access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {
					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest
					// unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no good, small way to fix it.
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?
					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, value, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	});
});
// Expose jQuery to the global object
window.jQuery = window.$ = jQuery;

// Expose jQuery as an AMD module, but only for AMD loaders that
// understand the issues with loading multiple versions of jQuery
// in a page that all might call define(). The loader will indicate
// they have special allowances for multiple jQuery versions by
// specifying define.amd.jQuery = true. Register as a named module,
// since jQuery can be concatenated with other files that may use define,
// but not use a proper concatenation script that understands anonymous
// AMD modules. A named AMD is safest and most robust way to register.
// Lowercase jquery is used because AMD module names are derived from
// file names, and jQuery is normally delivered in a lowercase file name.
// Do this after creating the global so that if an AMD module wants to call
// noConflict to hide this version of jQuery, it will work.
if ( typeof define === "function" && define.amd && define.amd.jQuery ) {
	define( "jquery", [], function () { return jQuery; } );
}

})( window );
/*!
 * Lo-Dash 1.0.0-rc.3 <http://lodash.com>
 * (c) 2012 John-David Dalton <http://allyoucanleet.com/>
 * Based on Underscore.js 1.4.3 <http://underscorejs.org>
 * (c) 2009-2012 Jeremy Ashkenas, DocumentCloud Inc.
 * Available under MIT license <http://lodash.com/license>
 */
;(function(window, undefined) {

  /** Detect free variable `exports` */
  var freeExports = typeof exports == 'object' && exports;

  /** Detect free variable `global` and use it as `window` */
  var freeGlobal = typeof global == 'object' && global;
  if (freeGlobal.global === freeGlobal) {
    window = freeGlobal;
  }

  /** Used for array and object method references */
  var arrayRef = [],
      // avoid a Closure Compiler bug by creatively creating an object
      objectRef = new function(){};

  /** Used to generate unique IDs */
  var idCounter = 0;

  /** Used internally to indicate various things */
  var indicatorObject = objectRef;

  /** Used by `cachedContains` as the default size when optimizations are enabled for large arrays */
  var largeArraySize = 30;

  /** Used to restore the original `_` reference in `noConflict` */
  var oldDash = window._;

  /** Used to detect template delimiter values that require a with-statement */
  var reComplexDelimiter = /[-?+=!~*%&^<>|{(\/]|\[\D|\b(?:delete|in|instanceof|new|typeof|void)\b/;

  /** Used to match HTML entities */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#x27);/g;

  /** Used to match empty string literals in compiled template source */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match regexp flags from their coerced string values */
  var reFlags = /\w*$/;

  /** Used to insert the data object variable into compiled template source */
  var reInsertVariable = /(?:__e|__t = )\(\s*(?![\d\s"']|this\.)/g;

  /** Used to detect if a method is native */
  var reNative = RegExp('^' +
    (objectRef.valueOf + '')
      .replace(/[.*+?^=!:${}()|[\]\/\\]/g, '\\$&')
      .replace(/valueOf|for [^\]]+/g, '.+?') + '$'
  );

  /**
   * Used to match ES6 template delimiters
   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-7.8.6
   */
  var reEsTemplate = /\$\{((?:(?=\\?)\\?[\s\S])*?)}/g;

  /** Used to match "interpolate" template delimiters */
  var reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to ensure capturing order of template delimiters */
  var reNoMatch = /($^)/;

  /** Used to match HTML characters */
  var reUnescapedHtml = /[&<>"']/g;

  /** Used to match unescaped characters in compiled string literals */
  var reUnescapedString = /['\n\r\t\u2028\u2029\\]/g;

  /** Used to fix the JScript [[DontEnum]] bug */
  var shadowed = [
    'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',
    'toLocaleString', 'toString', 'valueOf'
  ];

  /** Used to make template sourceURLs easier to identify */
  var templateCounter = 0;

  /** Native method shortcuts */
  var ceil = Math.ceil,
      concat = arrayRef.concat,
      floor = Math.floor,
      getPrototypeOf = reNative.test(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,
      hasOwnProperty = objectRef.hasOwnProperty,
      push = arrayRef.push,
      propertyIsEnumerable = objectRef.propertyIsEnumerable,
      toString = objectRef.toString;

  /* Native method shortcuts for methods with the same name as other `lodash` methods */
  var nativeBind = reNative.test(nativeBind = slice.bind) && nativeBind,
      nativeIsArray = reNative.test(nativeIsArray = Array.isArray) && nativeIsArray,
      nativeIsFinite = window.isFinite,
      nativeIsNaN = window.isNaN,
      nativeKeys = reNative.test(nativeKeys = Object.keys) && nativeKeys,
      nativeMax = Math.max,
      nativeMin = Math.min,
      nativeRandom = Math.random;

  /** `Object#toString` result shortcuts */
  var argsClass = '[object Arguments]',
      arrayClass = '[object Array]',
      boolClass = '[object Boolean]',
      dateClass = '[object Date]',
      funcClass = '[object Function]',
      numberClass = '[object Number]',
      objectClass = '[object Object]',
      regexpClass = '[object RegExp]',
      stringClass = '[object String]';

  /** Detect various environments */
  var isIeOpera = !!window.attachEvent,
      isV8 = nativeBind && !/\n|true/.test(nativeBind + isIeOpera);

  /* Detect if `Function#bind` exists and is inferred to be fast (all but V8) */
  var isBindFast = nativeBind && !isV8;

  /* Detect if `Object.keys` exists and is inferred to be fast (IE, Opera, V8) */
  var isKeysFast = nativeKeys && (isIeOpera || isV8);

  /**
   * Detect the JScript [[DontEnum]] bug:
   *
   * In IE < 9 an objects own properties, shadowing non-enumerable ones, are
   * made non-enumerable as well.
   */
  var hasDontEnumBug;

  /** Detect if own properties are iterated after inherited properties (IE < 9) */
  var iteratesOwnLast;

  /**
   * Detect if `Array#shift` and `Array#splice` augment array-like objects
   * incorrectly:
   *
   * Firefox < 10, IE compatibility mode, and IE < 9 have buggy Array `shift()`
   * and `splice()` functions that fail to remove the last element, `value[0]`,
   * of array-like objects even though the `length` property is set to `0`.
   * The `shift()` method is buggy in IE 8 compatibility mode, while `splice()`
   * is buggy regardless of mode in IE < 9 and buggy in compatibility mode in IE 9.
   */
  var hasObjectSpliceBug = (hasObjectSpliceBug = { '0': 1, 'length': 1 },
    arrayRef.splice.call(hasObjectSpliceBug, 0, 1), hasObjectSpliceBug[0]);

  /** Detect if an `arguments` object's indexes are non-enumerable (IE < 9) */
  var nonEnumArgs = true;

  (function() {
    var props = [];
    function ctor() { this.x = 1; }
    ctor.prototype = { 'valueOf': 1, 'y': 1 };
    for (var prop in new ctor) { props.push(prop); }
    for (prop in arguments) { nonEnumArgs = !prop; }

    hasDontEnumBug = !/valueOf/.test(props);
    iteratesOwnLast = props[0] != 'x';
  }(1));

  /** Detect if `arguments` objects are `Object` objects (all but Opera < 10.5) */
  var argsAreObjects = arguments.constructor == Object;

  /** Detect if `arguments` objects [[Class]] is unresolvable (Firefox < 4, IE < 9) */
  var noArgsClass = !isArguments(arguments);

  /**
   * Detect lack of support for accessing string characters by index:
   *
   * IE < 8 can't access characters by index and IE 8 can only access
   * characters by index on string literals.
   */
  var noCharByIndex = ('x'[0] + Object('x')[0]) != 'xx';

  /**
   * Detect if a node's [[Class]] is unresolvable (IE < 9)
   * and that the JS engine won't error when attempting to coerce an object to
   * a string without a `toString` property value of `typeof` "function".
   */
  try {
    var noNodeClass = ({ 'toString': 0 } + '', toString.call(document) == objectClass);
  } catch(e) { }

  /**
   * Detect if sourceURL syntax is usable without erroring:
   *
   * The JS engine embedded in Adobe products will throw a syntax error when
   * it encounters a single line comment beginning with the `@` symbol.
   *
   * The JS engine in Narwhal will generate the function `function anonymous(){//}`
   * and throw a syntax error.
   *
   * Avoid comments beginning `@` symbols in IE because they are part of its
   * non-standard conditional compilation support.
   * http://msdn.microsoft.com/en-us/library/121hztk3(v=vs.94).aspx
   */
  try {
    var useSourceURL = (Function('//@')(), !isIeOpera);
  } catch(e) { }

  /** Used to identify object classifications that `_.clone` supports */
  var cloneableClasses = {};
  cloneableClasses[funcClass] = false;
  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =
  cloneableClasses[boolClass] = cloneableClasses[dateClass] =
  cloneableClasses[numberClass] = cloneableClasses[objectClass] =
  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;

  /** Used to lookup a built-in constructor by [[Class]] */
  var ctorByClass = {};
  ctorByClass[arrayClass] = Array;
  ctorByClass[boolClass] = Boolean;
  ctorByClass[dateClass] = Date;
  ctorByClass[objectClass] = Object;
  ctorByClass[numberClass] = Number;
  ctorByClass[regexpClass] = RegExp;
  ctorByClass[stringClass] = String;

  /** Used to determine if values are of the language type Object */
  var objectTypes = {
    'boolean': false,
    'function': true,
    'object': true,
    'number': false,
    'string': false,
    'undefined': false
  };

  /** Used to escape characters for inclusion in compiled string literals */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\t': 't',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /*--------------------------------------------------------------------------*/

  /**
   * Creates a `lodash` object, that wraps the given `value`, to enable
   * method chaining.
   *
   * The chainable wrapper functions are:
   * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`, `compose`,
   * `concat`, `countBy`, `debounce`, `defaults`, `defer`, `delay`, `difference`,
   * `filter`, `flatten`, `forEach`, `forIn`, `forOwn`, `functions`, `groupBy`,
   * `initial`, `intersection`, `invert`, `invoke`, `keys`, `map`, `max`, `memoize`,
   * `merge`, `min`, `object`, `omit`, `once`, `pairs`, `partial`, `pick`, `pluck`,
   * `push`, `range`, `reject`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,
   * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `union`, `uniq`,
   * `unshift`, `values`, `where`, `without`, `wrap`, and `zip`
   *
   * The non-chainable wrapper functions are:
   * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `has`, `identity`,
   * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`, `isEmpty`,
   * `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`, `isObject`,
   * `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`, `lastIndexOf`,
   * `mixin`, `noConflict`, `pop`, `random`, `reduce`, `reduceRight`, `result`,
   * `shift`, `size`, `some`, `sortedIndex`, `template`, `unescape`, and `uniqueId`
   *
   * The wrapper functions `first` and `last` return wrapped values when `n` is
   * passed, otherwise they return unwrapped values.
   *
   * @name _
   * @constructor
   * @category Chaining
   * @param {Mixed} value The value to wrap in a `lodash` instance.
   * @returns {Object} Returns a `lodash` instance.
   */
  function lodash(value) {
    // exit early if already wrapped, even if wrapped by a different `lodash` constructor
    if (value && typeof value == 'object' && value.__wrapped__) {
      return value;
    }
    // allow invoking `lodash` without the `new` operator
    if (!(this instanceof lodash)) {
      return new lodash(value);
    }
    this.__wrapped__ = value;
  }

  /**
   * By default, the template delimiters used by Lo-Dash are similar to those in
   * embedded Ruby (ERB). Change the following template settings to use alternative
   * delimiters.
   *
   * @static
   * @memberOf _
   * @type Object
   */
  lodash.templateSettings = {

    /**
     * Used to detect `data` property values to be HTML-escaped.
     *
     * @static
     * @memberOf _.templateSettings
     * @type RegExp
     */
    'escape': /<%-([\s\S]+?)%>/g,

    /**
     * Used to detect code to be evaluated.
     *
     * @static
     * @memberOf _.templateSettings
     * @type RegExp
     */
    'evaluate': /<%([\s\S]+?)%>/g,

    /**
     * Used to detect `data` property values to inject.
     *
     * @static
     * @memberOf _.templateSettings
     * @type RegExp
     */
    'interpolate': reInterpolate,

    /**
     * Used to reference the data object in the template text.
     *
     * @static
     * @memberOf _.templateSettings
     * @type String
     */
    'variable': ''
  };

  /*--------------------------------------------------------------------------*/

  /**
   * The template used to create iterator functions.
   *
   * @private
   * @param {Obect} data The data object used to populate the text.
   * @returns {String} Returns the interpolated text.
   */
  var iteratorTemplate = template(
    // conditional strict mode
    "<% if (obj.useStrict) { %>\n<% } %>" +

    // the `iteratee` may be reassigned by the `top` snippet
    'var index, iteratee = <%= firstArg %>, ' +
    // assign the `result` variable an initial value
    'result = <%= firstArg %>;\n' +
    // exit early if the first argument is falsey
    'if (!<%= firstArg %>) return result;\n' +
    // add code before the iteration branches
    '<%= top %>;\n' +

    // array-like iteration:
    '<% if (arrayLoop) { %>' +
    'var length = iteratee.length; index = -1;\n' +
    "if (typeof length == 'number') {" +

    // add support for accessing string characters by index if needed
    '  <% if (noCharByIndex) { %>\n' +
    '  if (isString(iteratee)) {\n' +
    "    iteratee = iteratee.split('')\n" +
    '  }' +
    '  <% } %>\n' +

    // iterate over the array-like value
    '  while (++index < length) {\n' +
    '    <%= arrayLoop %>\n' +
    '  }\n' +
    '}\n' +
    'else {' +

    // object iteration:
    // add support for iterating over `arguments` objects if needed
    '  <%  } else if (nonEnumArgs) { %>\n' +
    '  var length = iteratee.length; index = -1;\n' +
    '  if (length && isArguments(iteratee)) {\n' +
    '    while (++index < length) {\n' +
    "      index += '';\n" +
    '      <%= objectLoop %>\n' +
    '    }\n' +
    '  } else {' +
    '  <% } %>' +

    // Firefox < 3.6, Opera > 9.50 - Opera < 11.60, and Safari < 5.1
    // (if the prototype or a property on the prototype has been set)
    // incorrectly sets a function's `prototype` property [[Enumerable]]
    // value to `true`. Because of this Lo-Dash standardizes on skipping
    // the the `prototype` property of functions regardless of its
    // [[Enumerable]] value.
    '  <% if (!hasDontEnumBug) { %>\n' +
    "  var skipProto = typeof iteratee == 'function' && \n" +
    "    propertyIsEnumerable.call(iteratee, 'prototype');\n" +
    '  <% } %>' +

    // iterate own properties using `Object.keys` if it's fast
    '  <% if (isKeysFast && useHas) { %>\n' +
    '  var ownIndex = -1,\n' +
    '      ownProps = objectTypes[typeof iteratee] ? nativeKeys(iteratee) : [],\n' +
    '      length = ownProps.length;\n\n' +
    '  while (++ownIndex < length) {\n' +
    '    index = ownProps[ownIndex];\n' +
    "    <% if (!hasDontEnumBug) { %>if (!(skipProto && index == 'prototype')) {\n  <% } %>" +
    '    <%= objectLoop %>\n' +
    '    <% if (!hasDontEnumBug) { %>}\n<% } %>' +
    '  }' +

    // else using a for-in loop
    '  <% } else { %>\n' +
    '  for (index in iteratee) {<%' +
    '    if (!hasDontEnumBug || useHas) { %>\n    if (<%' +
    "      if (!hasDontEnumBug) { %>!(skipProto && index == 'prototype')<% }" +
    '      if (!hasDontEnumBug && useHas) { %> && <% }' +
    '      if (useHas) { %>hasOwnProperty.call(iteratee, index)<% }' +
    '    %>) {' +
    '    <% } %>\n' +
    '    <%= objectLoop %>;' +
    '    <% if (!hasDontEnumBug || useHas) { %>\n    }<% } %>\n' +
    '  }' +
    '  <% } %>' +

    // Because IE < 9 can't set the `[[Enumerable]]` attribute of an
    // existing property and the `constructor` property of a prototype
    // defaults to non-enumerable, Lo-Dash skips the `constructor`
    // property when it infers it's iterating over a `prototype` object.
    '  <% if (hasDontEnumBug) { %>\n\n' +
    '  var ctor = iteratee.constructor;\n' +
    '    <% for (var k = 0; k < 7; k++) { %>\n' +
    "  index = '<%= shadowed[k] %>';\n" +
    '  if (<%' +
    "      if (shadowed[k] == 'constructor') {" +
    '        %>!(ctor && ctor.prototype === iteratee) && <%' +
    '      } %>hasOwnProperty.call(iteratee, index)) {\n' +
    '    <%= objectLoop %>\n' +
    '  }' +
    '    <% } %>' +
    '  <% } %>' +
    '  <% if (arrayLoop || nonEnumArgs) { %>\n}<% } %>\n' +

    // add code to the bottom of the iteration function
    '<%= bottom %>;\n' +
    // finally, return the `result`
    'return result'
  );

  /** Reusable iterator options for `assign` and `defaults` */
  var assignIteratorOptions = {
    'args': 'object, source, guard',
    'top':
      "for (var argsIndex = 1, argsLength = typeof guard == 'number' ? 2 : arguments.length; argsIndex < argsLength; argsIndex++) {\n" +
      '  if ((iteratee = arguments[argsIndex])) {',
    'objectLoop': 'result[index] = iteratee[index]',
    'bottom': '  }\n}'
  };

  /**
   * Reusable iterator options shared by `each`, `forIn`, and `forOwn`.
   */
  var eachIteratorOptions = {
    'args': 'collection, callback, thisArg',
    'top': "callback = callback && typeof thisArg == 'undefined' ? callback : createCallback(callback, thisArg)",
    'arrayLoop': 'if (callback(iteratee[index], index, collection) === false) return result',
    'objectLoop': 'if (callback(iteratee[index], index, collection) === false) return result'
  };

  /** Reusable iterator options for `forIn` and `forOwn` */
  var forOwnIteratorOptions = {
    'arrayLoop': null
  };

  /*--------------------------------------------------------------------------*/

  /**
   * Creates a function optimized to search large arrays for a given `value`,
   * starting at `fromIndex`, using strict equality for comparisons, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {Mixed} value The value to search for.
   * @param {Number} [fromIndex=0] The index to search from.
   * @param {Number} [largeSize=30] The length at which an array is considered large.
   * @returns {Boolean} Returns `true` if `value` is found, else `false`.
   */
  function cachedContains(array, fromIndex, largeSize) {
    fromIndex || (fromIndex = 0);

    var length = array.length,
        isLarge = (length - fromIndex) >= (largeSize || largeArraySize);

    if (isLarge) {
      var cache = {},
          index = fromIndex - 1;

      while (++index < length) {
        // manually coerce `value` to a string because `hasOwnProperty`, in some
        // older versions of Firefox, coerces objects incorrectly
        var key = array[index] + '';
        (hasOwnProperty.call(cache, key) ? cache[key] : (cache[key] = [])).push(array[index]);
      }
    }
    return function(value) {
      if (isLarge) {
        var key = value + '';
        return hasOwnProperty.call(cache, key) && indexOf(cache[key], value) > -1;
      }
      return indexOf(array, value, fromIndex) > -1;
    }
  }

  /**
   * Used by `_.max` and `_.min` as the default `callback` when a given
   * `collection` is a string value.
   *
   * @private
   * @param {String} value The character to inspect.
   * @returns {Number} Returns the code unit of given character.
   */
  function charAtCallback(value) {
    return value.charCodeAt(0);
  }

  /**
   * Used by `sortBy` to compare transformed `collection` values, stable sorting
   * them in ascending order.
   *
   * @private
   * @param {Object} a The object to compare to `b`.
   * @param {Object} b The object to compare to `a`.
   * @returns {Number} Returns the sort order indicator of `1` or `-1`.
   */
  function compareAscending(a, b) {
    var ai = a.index,
        bi = b.index;

    a = a.criteria;
    b = b.criteria;

    // ensure a stable sort in V8 and other engines
    // http://code.google.com/p/v8/issues/detail?id=90
    if (a !== b) {
      if (a > b || typeof a == 'undefined') {
        return 1;
      }
      if (a < b || typeof b == 'undefined') {
        return -1;
      }
    }
    return ai < bi ? -1 : 1;
  }

  /**
   * Creates a function that, when called, invokes `func` with the `this`
   * binding of `thisArg` and prepends any `partailArgs` to the arguments passed
   * to the bound function.
   *
   * @private
   * @param {Function|String} func The function to bind or the method name.
   * @param {Mixed} [thisArg] The `this` binding of `func`.
   * @param {Array} partialArgs An array of arguments to be partially applied.
   * @returns {Function} Returns the new bound function.
   */
  function createBound(func, thisArg, partialArgs) {
    var isFunc = isFunction(func),
        isPartial = !partialArgs,
        key = thisArg;

    // juggle arguments
    if (isPartial) {
      partialArgs = thisArg;
    }
    if (!isFunc) {
      thisArg = func;
    }

    function bound() {
      // `Function#bind` spec
      // http://es5.github.com/#x15.3.4.5
      var args = arguments,
          thisBinding = isPartial ? this : thisArg;

      if (!isFunc) {
        func = thisArg[key];
      }
      if (partialArgs.length) {
        args = args.length
          ? partialArgs.concat(slice(args))
          : partialArgs;
      }
      if (this instanceof bound) {
        // ensure `new bound` is an instance of `bound` and `func`
        noop.prototype = func.prototype;
        thisBinding = new noop;
        noop.prototype = null;

        // mimic the constructor's `return` behavior
        // http://es5.github.com/#x13.2.2
        var result = func.apply(thisBinding, args);
        return isObject(result) ? result : thisBinding;
      }
      return func.apply(thisBinding, args);
    }
    return bound;
  }

  /**
   * Produces an iteration callback bound to an optional `thisArg`. If `func` is
   * a property name, the callback will return the property value for a given element.
   *
   * @private
   * @param {Function|String} [func=identity|property] The function called per
   * iteration or property name to query.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @param {Object} [accumulating] Used to indicate that the callback should
   *  accept an `accumulator` argument.
   * @returns {Function} Returns a callback function.
   */
  function createCallback(func, thisArg, accumulating) {
    if (!func) {
      return identity;
    }
    if (typeof func != 'function') {
      return function(object) {
        return object[func];
      };
    }
    if (typeof thisArg != 'undefined') {
      if (accumulating) {
        return function(accumulator, value, index, object) {
          return func.call(thisArg, accumulator, value, index, object);
        };
      }
      return function(value, index, object) {
        return func.call(thisArg, value, index, object);
      };
    }
    return func;
  }

  /**
   * Creates compiled iteration functions.
   *
   * @private
   * @param {Object} [options1, options2, ...] The compile options object(s).
   *  useHas - A boolean to specify using `hasOwnProperty` checks in the object loop.
   *  args - A string of comma separated arguments the iteration function will accept.
   *  top - A string of code to execute before the iteration branches.
   *  arrayLoop - A string of code to execute in the array loop.
   *  objectLoop - A string of code to execute in the object loop.
   *  bottom - A string of code to execute after the iteration branches.
   *
   * @returns {Function} Returns the compiled function.
   */
  function createIterator() {
    var data = {
      'arrayLoop': '',
      'bottom': '',
      'hasDontEnumBug': hasDontEnumBug,
      'isKeysFast': isKeysFast,
      'objectLoop': '',
      'nonEnumArgs': nonEnumArgs,
      'noCharByIndex': noCharByIndex,
      'shadowed': shadowed,
      'top': '',
      'useHas': true
    };

    // merge options into a template data object
    for (var object, index = 0; object = arguments[index]; index++) {
      for (var key in object) {
        data[key] = object[key];
      }
    }
    var args = data.args;
    data.firstArg = /^[^,]+/.exec(args)[0];

    // create the function factory
    var factory = Function(
        'createCallback, hasOwnProperty, isArguments, isString, objectTypes, ' +
        'nativeKeys, propertyIsEnumerable',
      'return function(' + args + ') {\n' + iteratorTemplate(data) + '\n}'
    );
    // return the compiled function
    return factory(
      createCallback, hasOwnProperty, isArguments, isString, objectTypes,
      nativeKeys, propertyIsEnumerable
    );
  }

  /**
   * A function compiled to iterate `arguments` objects, arrays, objects, and
   * strings consistenly across environments, executing the `callback` for each
   * element in the `collection`. The `callback` is bound to `thisArg` and invoked
   * with three arguments; (value, index|key, collection). Callbacks may exit
   * iteration early by explicitly returning `false`.
   *
   * @private
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Function} [callback=identity] The function called per iteration.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Array|Object|String} Returns `collection`.
   */
  var each = createIterator(eachIteratorOptions);

  /**
   * Used by `template` to escape characters for inclusion in compiled
   * string literals.
   *
   * @private
   * @param {String} match The matched character to escape.
   * @returns {String} Returns the escaped character.
   */
  function escapeStringChar(match) {
    return '\\' + stringEscapes[match];
  }

  /**
   * Used by `escape` to convert characters to HTML entities.
   *
   * @private
   * @param {String} match The matched character to escape.
   * @returns {String} Returns the escaped character.
   */
  function escapeHtmlChar(match) {
    return htmlEscapes[match];
  }

  /**
   * Checks if `value` is a DOM node in IE < 9.
   *
   * @private
   * @param {Mixed} value The value to check.
   * @returns {Boolean} Returns `true` if the `value` is a DOM node, else `false`.
   */
  function isNode(value) {
    // IE < 9 presents DOM nodes as `Object` objects except they have `toString`
    // methods that are `typeof` "string" and still can coerce nodes to strings
    return typeof value.toString != 'function' && typeof (value + '') == 'string';
  }

  /**
   * A no-operation function.
   *
   * @private
   */
  function noop() {
    // no operation performed
  }

  /**
   * Slices the `collection` from the `start` index up to, but not including,
   * the `end` index.
   *
   * Note: This function is used, instead of `Array#slice`, to support node lists
   * in IE < 9 and to ensure dense arrays are returned.
   *
   * @private
   * @param {Array|Object|String} collection The collection to slice.
   * @param {Number} start The start index.
   * @param {Number} end The end index.
   * @returns {Array} Returns the new array.
   */
  function slice(array, start, end) {
    start || (start = 0);
    if (typeof end == 'undefined') {
      end = array ? array.length : 0;
    }
    var index = -1,
        length = end - start || 0,
        result = Array(length < 0 ? 0 : length);

    while (++index < length) {
      result[index] = array[start + index];
    }
    return result;
  }

  /**
   * Used by `unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {String} match The matched character to unescape.
   * @returns {String} Returns the unescaped character.
   */
  function unescapeHtmlChar(match) {
    return htmlUnescapes[match];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Assigns own enumerable properties of source object(s) to the `destination`
   * object. Subsequent sources will overwrite propery assignments of previous
   * sources.
   *
   * @static
   * @memberOf _
   * @alias extend
   * @category Objects
   * @param {Object} object The destination object.
   * @param {Object} [source1, source2, ...] The source objects.
   * @returns {Object} Returns the destination object.
   * @example
   *
   * _.assign({ 'name': 'moe' }, { 'age': 40 });
   * // => { 'name': 'moe', 'age': 40 }
   */
  var assign = createIterator(assignIteratorOptions);

  /**
   * Checks if `value` is an `arguments` object.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Mixed} value The value to check.
   * @returns {Boolean} Returns `true` if the `value` is an `arguments` object, else `false`.
   * @example
   *
   * (function() { return _.isArguments(arguments); })(1, 2, 3);
   * // => true
   *
   * _.isArguments([1, 2, 3]);
   * // => false
   */
  function isArguments(value) {
    return toString.call(value) == argsClass;
  }
  // fallback for browsers that can't detect `arguments` objects by [[Class]]
  if (noArgsClass) {
    isArguments = function(value) {
      return value ? hasOwnProperty.call(value, 'callee') : false;
    };
  }

  /**
   * Iterates over `object`'s own and inherited enumerable properties, executing
   * the `callback` for each property. The `callback` is bound to `thisArg` and
   * invoked with three arguments; (value, key, object). Callbacks may exit iteration
   * early by explicitly returning `false`.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Object} object The object to iterate over.
   * @param {Function} [callback=identity] The function called per iteration.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Object} Returns `object`.
   * @example
   *
   * function Dog(name) {
   *   this.name = name;
   * }
   *
   * Dog.prototype.bark = function() {
   *   alert('Woof, woof!');
   * };
   *
   * _.forIn(new Dog('Dagny'), function(value, key) {
   *   alert(key);
   * });
   * // => alerts 'name' and 'bark' (order is not guaranteed)
   */
  var forIn = createIterator(eachIteratorOptions, forOwnIteratorOptions, {
    'useHas': false
  });

  /**
   * Iterates over an object's own enumerable properties, executing the `callback`
   * for each property. The `callback` is bound to `thisArg` and invoked with three
   * arguments; (value, key, object). Callbacks may exit iteration early by explicitly
   * returning `false`.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Object} object The object to iterate over.
   * @param {Function} [callback=identity] The function called per iteration.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Object} Returns `object`.
   * @example
   *
   * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {
   *   alert(key);
   * });
   * // => alerts '0', '1', and 'length' (order is not guaranteed)
   */
  var forOwn = createIterator(eachIteratorOptions, forOwnIteratorOptions);

  /**
   * Creates an array composed of the own enumerable property names of `object`.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Object} object The object to inspect.
   * @returns {Array} Returns a new array of property names.
   * @example
   *
   * _.keys({ 'one': 1, 'two': 2, 'three': 3 });
   * // => ['one', 'two', 'three'] (order is not guaranteed)
   */
  var keys = !nativeKeys ? shimKeys : function(object) {
    // avoid iterating over the `prototype` property
    return typeof object == 'function' && propertyIsEnumerable.call(object, 'prototype')
      ? shimKeys(object)
      : (isObject(object) ? nativeKeys(object) : []);
  };

  /**
   * A fallback implementation of `isPlainObject` that checks if a given `value`
   * is an object created by the `Object` constructor, assuming objects created
   * by the `Object` constructor have no inherited enumerable properties and that
   * there are no `Object.prototype` extensions.
   *
   * @private
   * @param {Mixed} value The value to check.
   * @returns {Boolean} Returns `true` if `value` is a plain object, else `false`.
   */
  function shimIsPlainObject(value) {
    // avoid non-objects and false positives for `arguments` objects
    var result = false;
    if (!(value && typeof value == 'object') || isArguments(value)) {
      return result;
    }
    // check that the constructor is `Object` (i.e. `Object instanceof Object`)
    var ctor = value.constructor;
    if ((!isFunction(ctor) && (!noNodeClass || !isNode(value))) || ctor instanceof ctor) {
      // IE < 9 iterates inherited properties before own properties. If the first
      // iterated property is an object's own property then there are no inherited
      // enumerable properties.
      if (iteratesOwnLast) {
        forIn(value, function(value, key, object) {
          result = !hasOwnProperty.call(object, key);
          return false;
        });
        return result === false;
      }
      // In most environments an object's own properties are iterated before
      // its inherited properties. If the last iterated property is an object's
      // own property then there are no inherited enumerable properties.
      forIn(value, function(value, key) {
        result = key;
      });
      return result === false || hasOwnProperty.call(value, result);
    }
    return result;
  }

  /**
   * A fallback implementation of `Object.keys` that produces an array of the
   * given object's own enumerable property names.
   *
   * @private
   * @param {Object} object The object to inspect.
   * @returns {Array} Returns a new array of property names.
   */
  function shimKeys(object) {
    var result = [];
    forOwn(object, function(value, key) {
      result.push(key);
    });
    return result;
  }

  /**
   * Used to convert characters to HTML entities:
   *
   * Though the `>` character is escaped for symmetry, characters like `>` and `/`
   * don't require escaping in HTML and have no special meaning unless they're part
   * of a tag or an unquoted attribute value.
   * http://mathiasbynens.be/notes/ambiguous-ampersands (under "semi-related fun fact")
   */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#x27;'
  };

  /** Used to convert HTML entities to characters */
  var htmlUnescapes = invert(htmlEscapes);

  /*--------------------------------------------------------------------------*/

  /**
   * Creates a clone of `value`. If `deep` is `true`, nested objects will also
   * be cloned, otherwise they will be assigned by reference.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Mixed} value The value to clone.
   * @param {Boolean} deep A flag to indicate a deep clone.
   * @param- {Object} [guard] Internally used to allow this method to work with
   *  others like `_.map` without using their callback `index` argument for `deep`.
   * @param- {Array} [stackA=[]] Internally used to track traversed source objects.
   * @param- {Array} [stackB=[]] Internally used to associate clones with their
   *  source counterparts.
   * @returns {Mixed} Returns the cloned `value`.
   * @example
   *
   * var stooges = [
   *   { 'name': 'moe', 'age': 40 },
   *   { 'name': 'larry', 'age': 50 },
   *   { 'name': 'curly', 'age': 60 }
   * ];
   *
   * var shallow = _.clone(stooges);
   * shallow[0] === stooges[0];
   * // => true
   *
   * var deep = _.clone(stooges, true);
   * deep[0] === stooges[0];
   * // => false
   */
  function clone(value, deep, guard, stackA, stackB) {
    if (value == null) {
      return value;
    }
    if (guard) {
      deep = false;
    }
    // inspect [[Class]]
    var isObj = isObject(value);
    if (isObj) {
      var className = toString.call(value);
      if (!cloneableClasses[className] || (noNodeClass && isNode(value))) {
        return value;
      }
      var isArr = isArray(value);
    }
    // shallow clone
    if (!isObj || !deep) {
      return isObj
        ? (isArr ? slice(value) : assign({}, value))
        : value;
    }
    var ctor = ctorByClass[className];
    switch (className) {
      case boolClass:
      case dateClass:
        return new ctor(+value);

      case numberClass:
      case stringClass:
        return new ctor(value);

      case regexpClass:
        return ctor(value.source, reFlags.exec(value));
    }
    // check for circular references and return corresponding clone
    stackA || (stackA = []);
    stackB || (stackB = []);

    var length = stackA.length;
    while (length--) {
      if (stackA[length] == value) {
        return stackB[length];
      }
    }
    // init cloned object
    var result = isArr ? ctor(value.length) : {};

    // add the source value to the stack of traversed objects
    // and associate it with its clone
    stackA.push(value);
    stackB.push(result);

    // recursively populate clone (susceptible to call stack limits)
    (isArr ? forEach : forOwn)(value, function(objValue, key) {
      result[key] = clone(objValue, deep, null, stackA, stackB);
    });

    // add array properties assigned by `RegExp#exec`
    if (isArr) {
      if (hasOwnProperty.call(value, 'index')) {
        result.index = value.index;
      }
      if (hasOwnProperty.call(value, 'input')) {
        result.input = value.input;
      }
    }
    return result;
  }

  /**
   * Creates a deep clone of `value`. Functions and DOM nodes are **not** cloned.
   * The enumerable properties of `arguments` objects and objects created by
   * constructors other than `Object` are cloned to plain `Object` objects.
   *
   * Note: This function is loosely based on the structured clone algorithm.
   * See http://www.w3.org/TR/html5/common-dom-interfaces.html#internal-structured-cloning-algorithm.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Mixed} value The value to deep clone.
   * @returns {Mixed} Returns the deep cloned `value`.
   * @example
   *
   * var stooges = [
   *   { 'name': 'moe', 'age': 40 },
   *   { 'name': 'larry', 'age': 50 },
   *   { 'name': 'curly', 'age': 60 }
   * ];
   *
   * var deep = _.cloneDeep(stooges);
   * deep[0] === stooges[0];
   * // => false
   */
  function cloneDeep(value) {
    return clone(value, true);
  }

  /**
   * Assigns own enumerable properties of source object(s) to the `destination`
   * object for all `destination` properties that resolve to `null`/`undefined`.
   * Once a property is set, additional defaults of the same property will be
   * ignored.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Object} object The destination object.
   * @param {Object} [default1, default2, ...] The default objects.
   * @returns {Object} Returns the destination object.
   * @example
   *
   * var iceCream = { 'flavor': 'chocolate' };
   * _.defaults(iceCream, { 'flavor': 'vanilla', 'sprinkles': 'rainbow' });
   * // => { 'flavor': 'chocolate', 'sprinkles': 'rainbow' }
   */
  var defaults = createIterator(assignIteratorOptions, {
    'objectLoop': 'if (result[index] == null) ' + assignIteratorOptions.objectLoop
  });

  /**
   * Creates a sorted array of all enumerable properties, own and inherited,
   * of `object` that have function values.
   *
   * @static
   * @memberOf _
   * @alias methods
   * @category Objects
   * @param {Object} object The object to inspect.
   * @returns {Array} Returns a new array of property names that have function values.
   * @example
   *
   * _.functions(_);
   * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]
   */
  function functions(object) {
    var result = [];
    forIn(object, function(value, key) {
      if (isFunction(value)) {
        result.push(key);
      }
    });
    return result.sort();
  }

  /**
   * Checks if the specified object `property` exists and is a direct property,
   * instead of an inherited property.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Object} object The object to check.
   * @param {String} property The property to check for.
   * @returns {Boolean} Returns `true` if key is a direct property, else `false`.
   * @example
   *
   * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');
   * // => true
   */
  function has(object, property) {
    return object ? hasOwnProperty.call(object, property) : false;
  }

  /**
   * Creates an object composed of the inverted keys and values of the given `object`.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Object} object The object to invert.
   * @returns {Object} Returns the created inverted object.
   * @example
   *
   *  _.invert({ 'first': 'Moe', 'second': 'Larry', 'third': 'Curly' });
   * // => { 'Moe': 'first', 'Larry': 'second', 'Curly': 'third' } (order is not guaranteed)
   */
  function invert(object) {
    var index = -1,
        props = keys(object),
        length = props.length,
        result = {};

    while (++index < length) {
      var key = props[index];
      result[object[key]] = key;
    }
    return result;
  }

  /**
   * Checks if `value` is an array.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Mixed} value The value to check.
   * @returns {Boolean} Returns `true` if the `value` is an array, else `false`.
   * @example
   *
   * (function() { return _.isArray(arguments); })();
   * // => false
   *
   * _.isArray([1, 2, 3]);
   * // => true
   */
  var isArray = nativeIsArray || function(value) {
    // `instanceof` may cause a memory leak in IE 7 if `value` is a host object
    // http://ajaxian.com/archives/working-aroung-the-instanceof-memory-leak
    return (argsAreObjects && value instanceof Array) || toString.call(value) == arrayClass;
  };

  /**
   * Checks if `value` is a boolean (`true` or `false`) value.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Mixed} value The value to check.
   * @returns {Boolean} Returns `true` if the `value` is a boolean value, else `false`.
   * @example
   *
   * _.isBoolean(null);
   * // => false
   */
  function isBoolean(value) {
    return value === true || value === false || toString.call(value) == boolClass;
  }

  /**
   * Checks if `value` is a date.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Mixed} value The value to check.
   * @returns {Boolean} Returns `true` if the `value` is a date, else `false`.
   * @example
   *
   * _.isDate(new Date);
   * // => true
   */
  function isDate(value) {
    return value instanceof Date || toString.call(value) == dateClass;
  }

  /**
   * Checks if `value` is a DOM element.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Mixed} value The value to check.
   * @returns {Boolean} Returns `true` if the `value` is a DOM element, else `false`.
   * @example
   *
   * _.isElement(document.body);
   * // => true
   */
  function isElement(value) {
    return value ? value.nodeType === 1 : false;
  }

  /**
   * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a
   * length of `0` and objects with no own enumerable properties are considered
   * "empty".
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Array|Object|String} value The value to inspect.
   * @returns {Boolean} Returns `true` if the `value` is empty, else `false`.
   * @example
   *
   * _.isEmpty([1, 2, 3]);
   * // => false
   *
   * _.isEmpty({});
   * // => true
   *
   * _.isEmpty('');
   * // => true
   */
  function isEmpty(value) {
    var result = true;
    if (!value) {
      return result;
    }
    var className = toString.call(value),
        length = value.length;

    if ((className == arrayClass || className == stringClass ||
        className == argsClass || (noArgsClass && isArguments(value))) ||
        (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {
      return !length;
    }
    forOwn(value, function() {
      return (result = false);
    });
    return result;
  }

  /**
   * Performs a deep comparison between two values to determine if they are
   * equivalent to each other.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Mixed} a The value to compare.
   * @param {Mixed} b The other value to compare.
   * @param- {Object} [stackA=[]] Internally used track traversed `a` objects.
   * @param- {Object} [stackB=[]] Internally used track traversed `b` objects.
   * @returns {Boolean} Returns `true` if the values are equvalent, else `false`.
   * @example
   *
   * var moe = { 'name': 'moe', 'luckyNumbers': [13, 27, 34] };
   * var clone = { 'name': 'moe', 'luckyNumbers': [13, 27, 34] };
   *
   * moe == clone;
   * // => false
   *
   * _.isEqual(moe, clone);
   * // => true
   */
  function isEqual(a, b, stackA, stackB) {
    // exit early for identical values
    if (a === b) {
      // treat `+0` vs. `-0` as not equal
      return a !== 0 || (1 / a == 1 / b);
    }
    // a strict comparison is necessary because `null == undefined`
    if (a == null || b == null) {
      return a === b;
    }
    // compare [[Class]] names
    var className = toString.call(a),
        otherName = toString.call(b);

    if (className == argsClass) {
      className = objectClass;
    }
    if (otherName == argsClass) {
      otherName = objectClass;
    }
    if (className != otherName) {
      return false;
    }
    switch (className) {
      case boolClass:
      case dateClass:
        // coerce dates and booleans to numbers, dates to milliseconds and booleans
        // to `1` or `0`, treating invalid dates coerced to `NaN` as not equal
        return +a == +b;

      case numberClass:
        // treat `NaN` vs. `NaN` as equal
        return a != +a
          ? b != +b
          // but treat `+0` vs. `-0` as not equal
          : (a == 0 ? (1 / a == 1 / b) : a == +b);

      case regexpClass:
      case stringClass:
        // coerce regexes to strings (http://es5.github.com/#x15.10.6.4)
        // treat string primitives and their corresponding object instances as equal
        return a == b + '';
    }
    var isArr = className == arrayClass;
    if (!isArr) {
      // unwrap any `lodash` wrapped values
      if (a.__wrapped__ || b.__wrapped__) {
        return isEqual(a.__wrapped__ || a, b.__wrapped__ || b);
      }
      // exit for functions and DOM nodes
      if (className != objectClass || (noNodeClass && (isNode(a) || isNode(b)))) {
        return false;
      }
      // in older versions of Opera, `arguments` objects have `Array` constructors
      var ctorA = !argsAreObjects && isArguments(a) ? Object : a.constructor,
          ctorB = !argsAreObjects && isArguments(b) ? Object : b.constructor;

      // non `Object` object instances with different constructors are not equal
      if (ctorA != ctorB && !(
            isFunction(ctorA) && ctorA instanceof ctorA &&
            isFunction(ctorB) && ctorB instanceof ctorB
          )) {
        return false;
      }
    }
    // assume cyclic structures are equal
    // the algorithm for detecting cyclic structures is adapted from ES 5.1
    // section 15.12.3, abstract operation `JO` (http://es5.github.com/#x15.12.3)
    stackA || (stackA = []);
    stackB || (stackB = []);

    var length = stackA.length;
    while (length--) {
      if (stackA[length] == a) {
        return stackB[length] == b;
      }
    }
    var result = true,
        size = 0;

    // add `a` and `b` to the stack of traversed objects
    stackA.push(a);
    stackB.push(b);

    // recursively compare objects and arrays (susceptible to call stack limits)
    if (isArr) {
      // compare lengths to determine if a deep comparison is necessary
      size = a.length;
      result = size == b.length;

      if (result) {
        // deep compare the contents, ignoring non-numeric properties
        while (size--) {
          if (!(result = isEqual(a[size], b[size], stackA, stackB))) {
            break;
          }
        }
      }
      return result;
    }
    // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`
    // which, in this case, is more costly
    forIn(a, function(value, key, a) {
      if (hasOwnProperty.call(a, key)) {
        // count the number of properties.
        size++;
        // deep compare each property value.
        return (result = hasOwnProperty.call(b, key) && isEqual(value, b[key], stackA, stackB));
      }
    });

    if (result) {
      // ensure both objects have the same number of properties
      forIn(b, function(value, key, b) {
        if (hasOwnProperty.call(b, key)) {
          // `size` will be `-1` if `b` has more properties than `a`
          return (result = --size > -1);
        }
      });
    }
    return result;
  }

  /**
   * Checks if `value` is, or can be coerced to, a finite number.
   *
   * Note: This is not the same as native `isFinite`, which will return true for
   * booleans and empty strings. See http://es5.github.com/#x15.1.2.5.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Mixed} value The value to check.
   * @returns {Boolean} Returns `true` if the `value` is a finite number, else `false`.
   * @example
   *
   * _.isFinite(-101);
   * // => true
   *
   * _.isFinite('10');
   * // => true
   *
   * _.isFinite(true);
   * // => false
   *
   * _.isFinite('');
   * // => false
   *
   * _.isFinite(Infinity);
   * // => false
   */
  function isFinite(value) {
    return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));
  }

  /**
   * Checks if `value` is a function.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Mixed} value The value to check.
   * @returns {Boolean} Returns `true` if the `value` is a function, else `false`.
   * @example
   *
   * _.isFunction(_);
   * // => true
   */
  function isFunction(value) {
    return typeof value == 'function';
  }
  // fallback for older versions of Chrome and Safari
  if (isFunction(/x/)) {
    isFunction = function(value) {
      return value instanceof Function || toString.call(value) == funcClass;
    };
  }

  /**
   * Checks if `value` is the language type of Object.
   * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Mixed} value The value to check.
   * @returns {Boolean} Returns `true` if the `value` is an object, else `false`.
   * @example
   *
   * _.isObject({});
   * // => true
   *
   * _.isObject([1, 2, 3]);
   * // => true
   *
   * _.isObject(1);
   * // => false
   */
  function isObject(value) {
    // check if the value is the ECMAScript language type of Object
    // http://es5.github.com/#x8
    // and avoid a V8 bug
    // http://code.google.com/p/v8/issues/detail?id=2291
    return value ? objectTypes[typeof value] : false;
  }

  /**
   * Checks if `value` is `NaN`.
   *
   * Note: This is not the same as native `isNaN`, which will return `true` for
   * `undefined` and other values. See http://es5.github.com/#x15.1.2.4.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Mixed} value The value to check.
   * @returns {Boolean} Returns `true` if the `value` is `NaN`, else `false`.
   * @example
   *
   * _.isNaN(NaN);
   * // => true
   *
   * _.isNaN(new Number(NaN));
   * // => true
   *
   * isNaN(undefined);
   * // => true
   *
   * _.isNaN(undefined);
   * // => false
   */
  function isNaN(value) {
    // `NaN` as a primitive is the only value that is not equal to itself
    // (perform the [[Class]] check first to avoid errors with some host objects in IE)
    return isNumber(value) && value != +value
  }

  /**
   * Checks if `value` is `null`.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Mixed} value The value to check.
   * @returns {Boolean} Returns `true` if the `value` is `null`, else `false`.
   * @example
   *
   * _.isNull(null);
   * // => true
   *
   * _.isNull(undefined);
   * // => false
   */
  function isNull(value) {
    return value === null;
  }

  /**
   * Checks if `value` is a number.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Mixed} value The value to check.
   * @returns {Boolean} Returns `true` if the `value` is a number, else `false`.
   * @example
   *
   * _.isNumber(8.4 * 5);
   * // => true
   */
  function isNumber(value) {
    return typeof value == 'number' || toString.call(value) == numberClass;
  }

  /**
   * Checks if a given `value` is an object created by the `Object` constructor.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Mixed} value The value to check.
   * @returns {Boolean} Returns `true` if `value` is a plain object, else `false`.
   * @example
   *
   * function Stooge(name, age) {
   *   this.name = name;
   *   this.age = age;
   * }
   *
   * _.isPlainObject(new Stooge('moe', 40));
   * // => false
   *
   * _.isPlainObject([1, 2, 3]);
   * // => false
   *
   * _.isPlainObject({ 'name': 'moe', 'age': 40 });
   * // => true
   */
  var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {
    if (!(value && typeof value == 'object')) {
      return false;
    }
    var valueOf = value.valueOf,
        objProto = typeof valueOf == 'function' && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);

    return objProto
      ? value == objProto || (getPrototypeOf(value) == objProto && !isArguments(value))
      : shimIsPlainObject(value);
  };

  /**
   * Checks if `value` is a regular expression.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Mixed} value The value to check.
   * @returns {Boolean} Returns `true` if the `value` is a regular expression, else `false`.
   * @example
   *
   * _.isRegExp(/moe/);
   * // => true
   */
  function isRegExp(value) {
    return value instanceof RegExp || toString.call(value) == regexpClass;
  }

  /**
   * Checks if `value` is a string.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Mixed} value The value to check.
   * @returns {Boolean} Returns `true` if the `value` is a string, else `false`.
   * @example
   *
   * _.isString('moe');
   * // => true
   */
  function isString(value) {
    return typeof value == 'string' || toString.call(value) == stringClass;
  }

  /**
   * Checks if `value` is `undefined`.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Mixed} value The value to check.
   * @returns {Boolean} Returns `true` if the `value` is `undefined`, else `false`.
   * @example
   *
   * _.isUndefined(void 0);
   * // => true
   */
  function isUndefined(value) {
    return typeof value == 'undefined';
  }

  /**
   * Recursively merges own enumerable properties of the source object(s), that
   * don't resolve to `null`/`undefined`, into the `destination` object. Subsequent
   * sources will overwrite propery assignments of previous sources.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Object} object The destination object.
   * @param {Object} [source1, source2, ...] The source objects.
   * @param- {Object} [indicator] Internally used to indicate that the `stack`
   *  argument is an array of traversed objects instead of another source object.
   * @param- {Array} [stackA=[]] Internally used to track traversed source objects.
   * @param- {Array} [stackB=[]] Internally used to associate values with their
   *  source counterparts.
   * @returns {Object} Returns the destination object.
   * @example
   *
   * var stooges = [
   *   { 'name': 'moe' },
   *   { 'name': 'larry' }
   * ];
   *
   * var ages = [
   *   { 'age': 40 },
   *   { 'age': 50 }
   * ];
   *
   * _.merge(stooges, ages);
   * // => [{ 'name': 'moe', 'age': 40 }, { 'name': 'larry', 'age': 50 }]
   */
  function merge(object, source, indicator) {
    var args = arguments,
        index = 0,
        length = 2,
        stackA = args[3],
        stackB = args[4];

    if (indicator !== indicatorObject) {
      stackA = [];
      stackB = [];

      // work with `_.reduce` by only using its callback `accumulator` and `value` arguments
      if (typeof indicator != 'number') {
        length = args.length;
      }
    }
    while (++index < length) {
      forOwn(args[index], function(source, key) {
        var found, isArr, value;
        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {
          // avoid merging previously merged cyclic sources
          var stackLength = stackA.length;
          while (stackLength--) {
            found = stackA[stackLength] == source;
            if (found) {
              break;
            }
          }
          if (found) {
            object[key] = stackB[stackLength];
          }
          else {
            // add `source` and associated `value` to the stack of traversed objects
            stackA.push(source);
            stackB.push(value = (value = object[key], isArr)
              ? (isArray(value) ? value : [])
              : (isPlainObject(value) ? value : {})
            );
            // recursively merge objects and arrays (susceptible to call stack limits)
            object[key] = merge(value, source, indicatorObject, stackA, stackB);
          }
        } else if (source != null) {
          object[key] = source;
        }
      });
    }
    return object;
  }

  /**
   * Creates a shallow clone of `object` excluding the specified properties.
   * Property names may be specified as individual arguments or as arrays of
   * property names. If `callback` is passed, it will be executed for each property
   * in the `object`, omitting the properties `callback` returns truthy for. The
   * `callback` is bound to `thisArg` and invoked with three arguments; (value, key, object).
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Object} object The source object.
   * @param {Function|String} callback|[prop1, prop2, ...] The properties to omit
   *  or the function called per iteration.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Object} Returns an object without the omitted properties.
   * @example
   *
   * _.omit({ 'name': 'moe', 'age': 40, 'userid': 'moe1' }, 'userid');
   * // => { 'name': 'moe', 'age': 40 }
   *
   * _.omit({ 'name': 'moe', '_hint': 'knucklehead', '_seed': '96c4eb' }, function(value, key) {
   *   return key.charAt(0) == '_';
   * });
   * // => { 'name': 'moe' }
   */
  function omit(object, callback, thisArg) {
    var isFunc = typeof callback == 'function',
        result = {};

    if (isFunc) {
      callback = createCallback(callback, thisArg);
    } else {
      var props = concat.apply(arrayRef, arguments);
    }
    forIn(object, function(value, key, object) {
      if (isFunc
            ? !callback(value, key, object)
            : indexOf(props, key, 1) < 0
          ) {
        result[key] = value;
      }
    });
    return result;
  }

  /**
   * Creates a two dimensional array of the given object's key-value pairs,
   * i.e. `[[key1, value1], [key2, value2]]`.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Object} object The object to inspect.
   * @returns {Array} Returns new array of key-value pairs.
   * @example
   *
   * _.pairs({ 'moe': 30, 'larry': 40, 'curly': 50 });
   * // => [['moe', 30], ['larry', 40], ['curly', 50]] (order is not guaranteed)
   */
  function pairs(object) {
    var index = -1,
        props = keys(object),
        length = props.length,
        result = Array(length);

    while (++index < length) {
      var key = props[index];
      result[index] = [key, object[key]];
    }
    return result;
  }

  /**
   * Creates a shallow clone of `object` composed of the specified properties.
   * Property names may be specified as individual arguments or as arrays of
   * property names. If `callback` is passed, it will be executed for each property
   * in the `object`, picking the properties `callback` returns truthy for. The
   * `callback` is bound to `thisArg` and invoked with three arguments; (value, key, object).
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Object} object The source object.
   * @param {Array|Function|String} callback|[prop1, prop2, ...] The function called
   *  per iteration or properties to pick, either as individual arguments or arrays.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Object} Returns an object composed of the picked properties.
   * @example
   *
   * _.pick({ 'name': 'moe', '_userid': 'moe1' }, 'name');
   * // => { 'name': 'moe' }
   *
   * _.pick({ 'name': 'moe', '_userid': 'moe1' }, function(value, key) {
   *   return key.charAt(0) != '_';
   * });
   * // => { 'name': 'moe' }
   */
  function pick(object, callback, thisArg) {
    var result = {};
    if (typeof callback != 'function') {
      var index = 0,
          props = concat.apply(arrayRef, arguments),
          length = props.length;

      while (++index < length) {
        var key = props[index];
        if (key in object) {
          result[key] = object[key];
        }
      }
    } else {
      callback = createCallback(callback, thisArg);
      forIn(object, function(value, key, object) {
        if (callback(value, key, object)) {
          result[key] = value;
        }
      });
    }
    return result;
  }

  /**
   * Creates an array composed of the own enumerable property values of `object`.
   *
   * @static
   * @memberOf _
   * @category Objects
   * @param {Object} object The object to inspect.
   * @returns {Array} Returns a new array of property values.
   * @example
   *
   * _.values({ 'one': 1, 'two': 2, 'three': 3 });
   * // => [1, 2, 3]
   */
  function values(object) {
    var index = -1,
        props = keys(object),
        length = props.length,
        result = Array(length);

    while (++index < length) {
      result[index] = object[props[index]];
    }
    return result;
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Creates an array of elements from the specified index(es), or keys, of the
   * `collection`. Indexes may be specified as individual arguments or as arrays
   * of indexes.
   *
   * @static
   * @memberOf _
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Array|Number|String} [index1, index2, ...] The index(es) of
   *  `collection` to retrieve, either as individual arguments or arrays.
   * @returns {Array} Returns a new array of elements corresponding to the
   *  provided indexes.
   * @example
   *
   * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);
   * // => ['a', 'c', 'e']
   *
   * _.at(['moe', 'larry', 'curly'], 0, 2);
   * // => ['moe', 'curly']
   */
  function at(collection) {
    var index = -1,
        props = concat.apply(arrayRef, slice(arguments, 1)),
        length = props.length,
        result = Array(length);

    if (noCharByIndex && isString(collection)) {
      collection = collection.split('');
    }
    while(++index < length) {
      result[index] = collection[props[index]];
    }
    return result;
  }

  /**
   * Checks if a given `target` element is present in a `collection` using strict
   * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used
   * as the offset from the end of the collection.
   *
   * @static
   * @memberOf _
   * @alias include
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Mixed} target The value to check for.
   * @param {Number} [fromIndex=0] The index to search from.
   * @returns {Boolean} Returns `true` if the `target` element is found, else `false`.
   * @example
   *
   * _.contains([1, 2, 3], 1);
   * // => true
   *
   * _.contains([1, 2, 3], 1, 2);
   * // => false
   *
   * _.contains({ 'name': 'moe', 'age': 40 }, 'moe');
   * // => true
   *
   * _.contains('curly', 'ur');
   * // => true
   */
  function contains(collection, target, fromIndex) {
    var index = -1,
        length = collection ? collection.length : 0,
        result = false;

    fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;
    if (typeof length == 'number') {
      result = (isString(collection)
        ? collection.indexOf(target, fromIndex)
        : indexOf(collection, target, fromIndex)
      ) > -1;
    } else {
      each(collection, function(value) {
        if (++index >= fromIndex) {
          return !(result = value === target);
        }
      });
    }
    return result;
  }

  /**
   * Creates an object composed of keys returned from running each element of
   * `collection` through a `callback`. The corresponding value of each key is
   * the number of times the key was returned by `callback`. The `callback` is
   * bound to `thisArg` and invoked with three arguments; (value, index|key, collection).
   * The `callback` argument may also be the name of a property to count by (e.g. 'length').
   *
   * @static
   * @memberOf _
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Function|String} callback|property The function called per iteration
   *  or property name to count by.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Object} Returns the composed aggregate object.
   * @example
   *
   * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });
   * // => { '4': 1, '6': 2 }
   *
   * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);
   * // => { '4': 1, '6': 2 }
   *
   * _.countBy(['one', 'two', 'three'], 'length');
   * // => { '3': 2, '5': 1 }
   */
  function countBy(collection, callback, thisArg) {
    var result = {};
    callback = createCallback(callback, thisArg);

    forEach(collection, function(value, key, collection) {
      key = callback(value, key, collection);
      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);
    });
    return result;
  }

  /**
   * Checks if the `callback` returns a truthy value for **all** elements of a
   * `collection`. The `callback` is bound to `thisArg` and invoked with three
   * arguments; (value, index|key, collection).
   *
   * @static
   * @memberOf _
   * @alias all
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Function} [callback=identity] The function called per iteration.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Boolean} Returns `true` if all elements pass the callback check,
   *  else `false`.
   * @example
   *
   * _.every([true, 1, null, 'yes'], Boolean);
   * // => false
   */
  function every(collection, callback, thisArg) {
    var result = true;
    callback = createCallback(callback, thisArg);

    if (isArray(collection)) {
      var index = -1,
          length = collection.length;

      while (++index < length) {
        if (!(result = !!callback(collection[index], index, collection))) {
          break;
        }
      }
    } else {
      each(collection, function(value, index, collection) {
        return (result = !!callback(value, index, collection));
      });
    }
    return result;
  }

  /**
   * Examines each element in a `collection`, returning an array of all elements
   * the `callback` returns truthy for. The `callback` is bound to `thisArg` and
   * invoked with three arguments; (value, index|key, collection).
   *
   * @static
   * @memberOf _
   * @alias select
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Function} [callback=identity] The function called per iteration.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Array} Returns a new array of elements that passed the callback check.
   * @example
   *
   * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });
   * // => [2, 4, 6]
   */
  function filter(collection, callback, thisArg) {
    var result = [];
    callback = createCallback(callback, thisArg);

    if (isArray(collection)) {
      var index = -1,
          length = collection.length;

      while (++index < length) {
        var value = collection[index];
        if (callback(value, index, collection)) {
          result.push(value);
        }
      }
    } else {
      each(collection, function(value, index, collection) {
        if (callback(value, index, collection)) {
          result.push(value);
        }
      });
    }
    return result;
  }

  /**
   * Examines each element in a `collection`, returning the first one the `callback`
   * returns truthy for. The function returns as soon as it finds an acceptable
   * element, and does not iterate over the entire `collection`. The `callback` is
   * bound to `thisArg` and invoked with three arguments; (value, index|key, collection).
   *
   * @static
   * @memberOf _
   * @alias detect
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Function} [callback=identity] The function called per iteration.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Mixed} Returns the element that passed the callback check,
   *  else `undefined`.
   * @example
   *
   * var even = _.find([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });
   * // => 2
   */
  function find(collection, callback, thisArg) {
    var result;
    callback = createCallback(callback, thisArg);

    forEach(collection, function(value, index, collection) {
      if (callback(value, index, collection)) {
        result = value;
        return false;
      }
    });
    return result;
  }

  /**
   * Iterates over a `collection`, executing the `callback` for each element in
   * the `collection`. The `callback` is bound to `thisArg` and invoked with three
   * arguments; (value, index|key, collection). Callbacks may exit iteration early
   * by explicitly returning `false`.
   *
   * @static
   * @memberOf _
   * @alias each
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Function} [callback=identity] The function called per iteration.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Array|Object|String} Returns `collection`.
   * @example
   *
   * _([1, 2, 3]).forEach(alert).join(',');
   * // => alerts each number and returns '1,2,3'
   *
   * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, alert);
   * // => alerts each number value (order is not guaranteed)
   */
  function forEach(collection, callback, thisArg) {
    if (callback && typeof thisArg == 'undefined' && isArray(collection)) {
      var index = -1,
          length = collection.length;

      while (++index < length) {
        if (callback(collection[index], index, collection) === false) {
          break;
        }
      }
    } else {
      each(collection, callback, thisArg);
    }
    return collection;
  }

  /**
   * Creates an object composed of keys returned from running each element of
   * `collection` through a `callback`. The corresponding value of each key is an
   * array of elements passed to `callback` that returned the key. The `callback`
   * is bound to `thisArg` and invoked with three arguments; (value, index|key, collection).
   * The `callback` argument may also be the name of a property to group by (e.g. 'length').
   *
   * @static
   * @memberOf _
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Function|String} callback|property The function called per iteration
   *  or property name to group by.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Object} Returns the composed aggregate object.
   * @example
   *
   * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });
   * // => { '4': [4.2], '6': [6.1, 6.4] }
   *
   * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);
   * // => { '4': [4.2], '6': [6.1, 6.4] }
   *
   * _.groupBy(['one', 'two', 'three'], 'length');
   * // => { '3': ['one', 'two'], '5': ['three'] }
   */
  function groupBy(collection, callback, thisArg) {
    var result = {};
    callback = createCallback(callback, thisArg);

    forEach(collection, function(value, key, collection) {
      key = callback(value, key, collection);
      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);
    });
    return result;
  }

  /**
   * Invokes the method named by `methodName` on each element in the `collection`,
   * returning an array of the results of each invoked method. Additional arguments
   * will be passed to each invoked method. If `methodName` is a function it will
   * be invoked for, and `this` bound to, each element in the `collection`.
   *
   * @static
   * @memberOf _
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Function|String} methodName The name of the method to invoke or
   *  the function invoked per iteration.
   * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the method with.
   * @returns {Array} Returns a new array of the results of each invoked method.
   * @example
   *
   * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');
   * // => [[1, 5, 7], [1, 2, 3]]
   *
   * _.invoke([123, 456], String.prototype.split, '');
   * // => [['1', '2', '3'], ['4', '5', '6']]
   */
  function invoke(collection, methodName) {
    var args = slice(arguments, 2),
        isFunc = typeof methodName == 'function',
        result = [];

    forEach(collection, function(value) {
      result.push((isFunc ? methodName : value[methodName]).apply(value, args));
    });
    return result;
  }

  /**
   * Creates an array of values by running each element in the `collection`
   * through a `callback`. The `callback` is bound to `thisArg` and invoked with
   * three arguments; (value, index|key, collection).
   *
   * @static
   * @memberOf _
   * @alias collect
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Function} [callback=identity] The function called per iteration.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Array} Returns a new array of the results of each `callback` execution.
   * @example
   *
   * _.map([1, 2, 3], function(num) { return num * 3; });
   * // => [3, 6, 9]
   *
   * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });
   * // => [3, 6, 9] (order is not guaranteed)
   */
  function map(collection, callback, thisArg) {
    var index = -1,
        length = collection ? collection.length : 0,
        result = Array(typeof length == 'number' ? length : 0);

    callback = createCallback(callback, thisArg);
    if (isArray(collection)) {
      while (++index < length) {
        result[index] = callback(collection[index], index, collection);
      }
    } else {
      each(collection, function(value, key, collection) {
        result[++index] = callback(value, key, collection);
      });
    }
    return result;
  }

  /**
   * Retrieves the maximum value of an `array`. If `callback` is passed,
   * it will be executed for each value in the `array` to generate the
   * criterion by which the value is ranked. The `callback` is bound to
   * `thisArg` and invoked with three arguments; (value, index, collection).
   *
   * @static
   * @memberOf _
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Function} [callback] The function called per iteration.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Mixed} Returns the maximum value.
   * @example
   *
   * var stooges = [
   *   { 'name': 'moe', 'age': 40 },
   *   { 'name': 'larry', 'age': 50 },
   *   { 'name': 'curly', 'age': 60 }
   * ];
   *
   * _.max(stooges, function(stooge) { return stooge.age; });
   * // => { 'name': 'curly', 'age': 60 };
   */
  function max(collection, callback, thisArg) {
    var computed = -Infinity,
        index = -1,
        length = collection ? collection.length : 0,
        result = computed;

    if (callback || !isArray(collection)) {
      callback = !callback && isString(collection)
        ? charAtCallback
        : createCallback(callback, thisArg);

      each(collection, function(value, index, collection) {
        var current = callback(value, index, collection);
        if (current > computed) {
          computed = current;
          result = value;
        }
      });
    } else {
      while (++index < length) {
        if (collection[index] > result) {
          result = collection[index];
        }
      }
    }
    return result;
  }

  /**
   * Retrieves the minimum value of an `array`. If `callback` is passed,
   * it will be executed for each value in the `array` to generate the
   * criterion by which the value is ranked. The `callback` is bound to `thisArg`
   * and invoked with three arguments; (value, index, collection).
   *
   * @static
   * @memberOf _
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Function} [callback] The function called per iteration.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Mixed} Returns the minimum value.
   * @example
   *
   * _.min([10, 5, 100, 2, 1000]);
   * // => 2
   */
  function min(collection, callback, thisArg) {
    var computed = Infinity,
        index = -1,
        length = collection ? collection.length : 0,
        result = computed;

    if (callback || !isArray(collection)) {
      callback = !callback && isString(collection)
        ? charAtCallback
        : createCallback(callback, thisArg);

      each(collection, function(value, index, collection) {
        var current = callback(value, index, collection);
        if (current < computed) {
          computed = current;
          result = value;
        }
      });
    } else {
      while (++index < length) {
        if (collection[index] < result) {
          result = collection[index];
        }
      }
    }
    return result;
  }

  /**
   * Retrieves the value of a specified property from all elements in
   * the `collection`.
   *
   * @static
   * @memberOf _
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {String} property The property to pluck.
   * @returns {Array} Returns a new array of property values.
   * @example
   *
   * var stooges = [
   *   { 'name': 'moe', 'age': 40 },
   *   { 'name': 'larry', 'age': 50 },
   *   { 'name': 'curly', 'age': 60 }
   * ];
   *
   * _.pluck(stooges, 'name');
   * // => ['moe', 'larry', 'curly']
   */
  function pluck(collection, property) {
    return map(collection, property + '');
  }

  /**
   * Boils down a `collection` to a single value. The initial state of the
   * reduction is `accumulator` and each successive step of it should be returned
   * by the `callback`. The `callback` is bound to `thisArg` and invoked with 4
   * arguments; for arrays they are (accumulator, value, index|key, collection).
   *
   * @static
   * @memberOf _
   * @alias foldl, inject
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Function} [callback=identity] The function called per iteration.
   * @param {Mixed} [accumulator] Initial value of the accumulator.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Mixed} Returns the accumulated value.
   * @example
   *
   * var sum = _.reduce([1, 2, 3], function(memo, num) { return memo + num; });
   * // => 6
   */
  function reduce(collection, callback, accumulator, thisArg) {
    var noaccum = arguments.length < 3;
    callback = createCallback(callback, thisArg, indicatorObject);

    if (isArray(collection)) {
      var index = -1,
          length = collection.length;

      if (noaccum) {
        accumulator = collection[++index];
      }
      while (++index < length) {
        accumulator = callback(accumulator, collection[index], index, collection);
      }
    } else {
      each(collection, function(value, index, collection) {
        accumulator = noaccum
          ? (noaccum = false, value)
          : callback(accumulator, value, index, collection)
      });
    }
    return accumulator;
  }

  /**
   * The right-associative version of `_.reduce`.
   *
   * @static
   * @memberOf _
   * @alias foldr
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Function} [callback=identity] The function called per iteration.
   * @param {Mixed} [accumulator] Initial value of the accumulator.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Mixed} Returns the accumulated value.
   * @example
   *
   * var list = [[0, 1], [2, 3], [4, 5]];
   * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);
   * // => [4, 5, 2, 3, 0, 1]
   */
  function reduceRight(collection, callback, accumulator, thisArg) {
    var iteratee = collection,
        length = collection ? collection.length : 0,
        noaccum = arguments.length < 3;

    if (typeof length != 'number') {
      var props = keys(collection);
      length = props.length;
    } else if (noCharByIndex && isString(collection)) {
      iteratee = collection.split('');
    }
    callback = createCallback(callback, thisArg, indicatorObject);
    forEach(collection, function(value, index, collection) {
      index = props ? props[--length] : --length;
      accumulator = noaccum
        ? (noaccum = false, iteratee[index])
        : callback(accumulator, iteratee[index], index, collection);
    });
    return accumulator;
  }

  /**
   * The opposite of `_.filter`, this method returns the elements of a
   * `collection` that `callback` does **not** return truthy for.
   *
   * @static
   * @memberOf _
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Function} [callback=identity] The function called per iteration.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Array} Returns a new array of elements that did **not** pass the
   *  callback check.
   * @example
   *
   * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });
   * // => [1, 3, 5]
   */
  function reject(collection, callback, thisArg) {
    callback = createCallback(callback, thisArg);
    return filter(collection, function(value, index, collection) {
      return !callback(value, index, collection);
    });
  }

  /**
   * Creates an array of shuffled `array` values, using a version of the
   * Fisher-Yates shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.
   *
   * @static
   * @memberOf _
   * @category Collections
   * @param {Array|Object|String} collection The collection to shuffle.
   * @returns {Array} Returns a new shuffled collection.
   * @example
   *
   * _.shuffle([1, 2, 3, 4, 5, 6]);
   * // => [4, 1, 6, 3, 5, 2]
   */
  function shuffle(collection) {
    var index = -1,
        result = Array(collection ? collection.length : 0);

    forEach(collection, function(value) {
      var rand = floor(nativeRandom() * (++index + 1));
      result[index] = result[rand];
      result[rand] = value;
    });
    return result;
  }

  /**
   * Gets the size of the `collection` by returning `collection.length` for arrays
   * and array-like objects or the number of own enumerable properties for objects.
   *
   * @static
   * @memberOf _
   * @category Collections
   * @param {Array|Object|String} collection The collection to inspect.
   * @returns {Number} Returns `collection.length` or number of own enumerable properties.
   * @example
   *
   * _.size([1, 2]);
   * // => 2
   *
   * _.size({ 'one': 1, 'two': 2, 'three': 3 });
   * // => 3
   *
   * _.size('curly');
   * // => 5
   */
  function size(collection) {
    var length = collection ? collection.length : 0;
    return typeof length == 'number' ? length : keys(collection).length;
  }

  /**
   * Checks if the `callback` returns a truthy value for **any** element of a
   * `collection`. The function returns as soon as it finds passing value, and
   * does not iterate over the entire `collection`. The `callback` is bound to
   * `thisArg` and invoked with three arguments; (value, index|key, collection).
   *
   * @static
   * @memberOf _
   * @alias any
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Function} [callback=identity] The function called per iteration.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Boolean} Returns `true` if any element passes the callback check,
   *  else `false`.
   * @example
   *
   * _.some([null, 0, 'yes', false], Boolean);
   * // => true
   */
  function some(collection, callback, thisArg) {
    var result;
    callback = createCallback(callback, thisArg);

    if (isArray(collection)) {
      var index = -1,
          length = collection.length;

      while (++index < length) {
        if ((result = callback(collection[index], index, collection))) {
          break;
        }
      }
    } else {
      each(collection, function(value, index, collection) {
        return !(result = callback(value, index, collection));
      });
    }
    return !!result;
  }

  /**
   * Creates an array, stable sorted in ascending order by the results of
   * running each element of `collection` through a `callback`. The `callback`
   * is bound to `thisArg` and invoked with three arguments; (value, index|key, collection).
   * The `callback` argument may also be the name of a property to sort by (e.g. 'length').
   *
   * @static
   * @memberOf _
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Function|String} callback|property The function called per iteration
   *  or property name to sort by.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Array} Returns a new array of sorted elements.
   * @example
   *
   * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });
   * // => [3, 1, 2]
   *
   * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);
   * // => [3, 1, 2]
   *
   * _.sortBy(['larry', 'brendan', 'moe'], 'length');
   * // => ['moe', 'larry', 'brendan']
   */
  function sortBy(collection, callback, thisArg) {
    var result = [];
    callback = createCallback(callback, thisArg);

    forEach(collection, function(value, index, collection) {
      result.push({
        'criteria': callback(value, index, collection),
        'index': index,
        'value': value
      });
    });

    var length = result.length;
    result.sort(compareAscending);
    while (length--) {
      result[length] = result[length].value;
    }
    return result;
  }

  /**
   * Converts the `collection` to an array.
   *
   * @static
   * @memberOf _
   * @category Collections
   * @param {Array|Object|String} collection The collection to convert.
   * @returns {Array} Returns the new converted array.
   * @example
   *
   * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);
   * // => [2, 3, 4]
   */
  function toArray(collection) {
    var length = collection ? collection.length : 0;
    if (typeof length == 'number') {
      return noCharByIndex && isString(collection)
        ? collection.split('')
        : slice(collection);
    }
    return values(collection);
  }

  /**
   * Examines each element in a `collection`, returning an array of all elements
   * that contain the given `properties`.
   *
   * @static
   * @memberOf _
   * @category Collections
   * @param {Array|Object|String} collection The collection to iterate over.
   * @param {Object} properties The object of property values to filter by.
   * @returns {Array} Returns a new array of elements that contain the given `properties`.
   * @example
   *
   * var stooges = [
   *   { 'name': 'moe', 'age': 40 },
   *   { 'name': 'larry', 'age': 50 },
   *   { 'name': 'curly', 'age': 60 }
   * ];
   *
   * _.where(stooges, { 'age': 40 });
   * // => [{ 'name': 'moe', 'age': 40 }]
   */
  function where(collection, properties) {
    var props = keys(properties);
    return filter(collection, function(object) {
      var length = props.length;
      while (length--) {
        var result = object[props[length]] === properties[props[length]];
        if (!result) {
          break;
        }
      }
      return !!result;
    });
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Creates an array with all falsey values of `array` removed. The values
   * `false`, `null`, `0`, `""`, `undefined` and `NaN` are all falsey.
   *
   * @static
   * @memberOf _
   * @category Arrays
   * @param {Array} array The array to compact.
   * @returns {Array} Returns a new filtered array.
   * @example
   *
   * _.compact([0, 1, false, 2, '', 3]);
   * // => [1, 2, 3]
   */
  function compact(array) {
    var index = -1,
        length = array ? array.length : 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value) {
        result.push(value);
      }
    }
    return result;
  }

  /**
   * Creates an array of `array` elements not present in the other arrays
   * using strict equality for comparisons, i.e. `===`.
   *
   * @static
   * @memberOf _
   * @category Arrays
   * @param {Array} array The array to process.
   * @param {Array} [array1, array2, ...] Arrays to check.
   * @returns {Array} Returns a new array of `array` elements not present in the
   *  other arrays.
   * @example
   *
   * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);
   * // => [1, 3, 4]
   */
  function difference(array) {
    var index = -1,
        length = array ? array.length : 0,
        flattened = concat.apply(arrayRef, arguments),
        contains = cachedContains(flattened, length),
        result = [];

    while (++index < length) {
      var value = array[index];
      if (!contains(value)) {
        result.push(value);
      }
    }
    return result;
  }

  /**
   * Gets the first element of the `array`. Pass `n` to return the first `n`
   * elements of the `array`.
   *
   * @static
   * @memberOf _
   * @alias head, take
   * @category Arrays
   * @param {Array} array The array to query.
   * @param {Number} [n] The number of elements to return.
   * @param- {Object} [guard] Internally used to allow this method to work with
   *  others like `_.map` without using their callback `index` argument for `n`.
   * @returns {Mixed} Returns the first element, or an array of the first `n`
   *  elements, of `array`.
   * @example
   *
   * _.first([5, 4, 3, 2, 1]);
   * // => 5
   */
  function first(array, n, guard) {
    if (array) {
      var length = array.length;
      return (n == null || guard)
        ? array[0]
        : slice(array, 0, nativeMin(nativeMax(0, n), length));
    }
  }

  /**
   * Flattens a nested array (the nesting can be to any depth). If `shallow` is
   * truthy, `array` will only be flattened a single level.
   *
   * @static
   * @memberOf _
   * @category Arrays
   * @param {Array} array The array to compact.
   * @param {Boolean} shallow A flag to indicate only flattening a single level.
   * @returns {Array} Returns a new flattened array.
   * @example
   *
   * _.flatten([1, [2], [3, [[4]]]]);
   * // => [1, 2, 3, 4];
   *
   * _.flatten([1, [2], [3, [[4]]]], true);
   * // => [1, 2, 3, [[4]]];
   */
  function flatten(array, shallow) {
    var index = -1,
        length = array ? array.length : 0,
        result = [];

    while (++index < length) {
      var value = array[index];

      // recursively flatten arrays (susceptible to call stack limits)
      if (isArray(value)) {
        push.apply(result, shallow ? value : flatten(value));
      } else {
        result.push(value);
      }
    }
    return result;
  }

  /**
   * Gets the index at which the first occurrence of `value` is found using
   * strict equality for comparisons, i.e. `===`. If the `array` is already
   * sorted, passing `true` for `fromIndex` will run a faster binary search.
   *
   * @static
   * @memberOf _
   * @category Arrays
   * @param {Array} array The array to search.
   * @param {Mixed} value The value to search for.
   * @param {Boolean|Number} [fromIndex=0] The index to search from or `true` to
   *  perform a binary search on a sorted `array`.
   * @returns {Number} Returns the index of the matched value or `-1`.
   * @example
   *
   * _.indexOf([1, 2, 3, 1, 2, 3], 2);
   * // => 1
   *
   * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);
   * // => 4
   *
   * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);
   * // => 2
   */
  function indexOf(array, value, fromIndex) {
    var index = -1,
        length = array ? array.length : 0;

    if (typeof fromIndex == 'number') {
      index = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0) - 1;
    } else if (fromIndex) {
      index = sortedIndex(array, value);
      return array[index] === value ? index : -1;
    }
    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * Gets all but the last element of `array`. Pass `n` to exclude the last `n`
   * elements from the result.
   *
   * @static
   * @memberOf _
   * @category Arrays
   * @param {Array} array The array to query.
   * @param {Number} [n=1] The number of elements to exclude.
   * @param- {Object} [guard] Internally used to allow this method to work with
   *  others like `_.map` without using their callback `index` argument for `n`.
   * @returns {Array} Returns all but the last element, or `n` elements, of `array`.
   * @example
   *
   * _.initial([3, 2, 1]);
   * // => [3, 2]
   */
  function initial(array, n, guard) {
    if (!array) {
      return [];
    }
    var length = array.length;
    n = n == null || guard ? 1 : n || 0;
    return slice(array, 0, nativeMin(nativeMax(0, length - n), length));
  }

  /**
   * Computes the intersection of all the passed-in arrays using strict equality
   * for comparisons, i.e. `===`.
   *
   * @static
   * @memberOf _
   * @category Arrays
   * @param {Array} [array1, array2, ...] Arrays to process.
   * @returns {Array} Returns a new array of unique elements that are present
   *  in **all** of the arrays.
   * @example
   *
   * _.intersection([1, 2, 3], [101, 2, 1, 10], [2, 1]);
   * // => [1, 2]
   */
  function intersection(array) {
    var args = arguments,
        argsLength = args.length,
        cache = { '0': {} },
        index = -1,
        length = array ? array.length : 0,
        isLarge = length >= 100,
        result = [],
        seen = result;

    outer:
    while (++index < length) {
      var value = array[index];
      if (isLarge) {
        var key = value + '';
        var inited = hasOwnProperty.call(cache[0], key)
          ? !(seen = cache[0][key])
          : (seen = cache[0][key] = []);
      }
      if (inited || indexOf(seen, value) < 0) {
        if (isLarge) {
          seen.push(value);
        }
        var argsIndex = argsLength;
        while (--argsIndex) {
          if (!(cache[argsIndex] || (cache[argsIndex] = cachedContains(args[argsIndex], 0, 100)))(value)) {
            continue outer;
          }
        }
        result.push(value);
      }
    }
    return result;
  }

  /**
   * Gets the last element of the `array`. Pass `n` to return the last `n`
   * elements of the `array`.
   *
   * @static
   * @memberOf _
   * @category Arrays
   * @param {Array} array The array to query.
   * @param {Number} [n] The number of elements to return.
   * @param- {Object} [guard] Internally used to allow this method to work with
   *  others like `_.map` without using their callback `index` argument for `n`.
   * @returns {Mixed} Returns the last element, or an array of the last `n`
   *  elements, of `array`.
   * @example
   *
   * _.last([3, 2, 1]);
   * // => 1
   */
  function last(array, n, guard) {
    if (array) {
      var length = array.length;
      return (n == null || guard) ? array[length - 1] : slice(array, nativeMax(0, length - n));
    }
  }

  /**
   * Gets the index at which the last occurrence of `value` is found using strict
   * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used
   * as the offset from the end of the collection.
   *
   * @static
   * @memberOf _
   * @category Arrays
   * @param {Array} array The array to search.
   * @param {Mixed} value The value to search for.
   * @param {Number} [fromIndex=array.length-1] The index to search from.
   * @returns {Number} Returns the index of the matched value or `-1`.
   * @example
   *
   * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);
   * // => 4
   *
   * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);
   * // => 1
   */
  function lastIndexOf(array, value, fromIndex) {
    var index = array ? array.length : 0;
    if (typeof fromIndex == 'number') {
      index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;
    }
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * Creates an object composed from arrays of `keys` and `values`. Pass either
   * a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`, or
   * two arrays, one of `keys` and one of corresponding `values`.
   *
   * @static
   * @memberOf _
   * @category Arrays
   * @param {Array} keys The array of keys.
   * @param {Array} [values=[]] The array of values.
   * @returns {Object} Returns an object composed of the given keys and
   *  corresponding values.
   * @example
   *
   * _.object(['moe', 'larry', 'curly'], [30, 40, 50]);
   * // => { 'moe': 30, 'larry': 40, 'curly': 50 }
   */
  function object(keys, values) {
    var index = -1,
        length = keys ? keys.length : 0,
        result = {};

    while (++index < length) {
      var key = keys[index];
      if (values) {
        result[key] = values[index];
      } else {
        result[key[0]] = key[1];
      }
    }
    return result;
  }

  /**
   * Creates an array of numbers (positive and/or negative) progressing from
   * `start` up to but not including `stop`. This method is a port of Python's
   * `range()` function. See http://docs.python.org/library/functions.html#range.
   *
   * @static
   * @memberOf _
   * @category Arrays
   * @param {Number} [start=0] The start of the range.
   * @param {Number} end The end of the range.
   * @param {Number} [step=1] The value to increment or descrement by.
   * @returns {Array} Returns a new range array.
   * @example
   *
   * _.range(10);
   * // => [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
   *
   * _.range(1, 11);
   * // => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
   *
   * _.range(0, 30, 5);
   * // => [0, 5, 10, 15, 20, 25]
   *
   * _.range(0, -10, -1);
   * // => [0, -1, -2, -3, -4, -5, -6, -7, -8, -9]
   *
   * _.range(0);
   * // => []
   */
  function range(start, end, step) {
    start = +start || 0;
    step = +step || 1;

    if (end == null) {
      end = start;
      start = 0;
    }
    // use `Array(length)` so V8 will avoid the slower "dictionary" mode
    // http://youtu.be/XAqIpGU8ZZk#t=17m25s
    var index = -1,
        length = nativeMax(0, ceil((end - start) / step)),
        result = Array(length);

    while (++index < length) {
      result[index] = start;
      start += step;
    }
    return result;
  }

  /**
   * The opposite of `_.initial`, this method gets all but the first value of
   * `array`. Pass `n` to exclude the first `n` values from the result.
   *
   * @static
   * @memberOf _
   * @alias drop, tail
   * @category Arrays
   * @param {Array} array The array to query.
   * @param {Number} [n=1] The number of elements to exclude.
   * @param- {Object} [guard] Internally used to allow this method to work with
   *  others like `_.map` without using their callback `index` argument for `n`.
   * @returns {Array} Returns all but the first element, or `n` elements, of `array`.
   * @example
   *
   * _.rest([3, 2, 1]);
   * // => [2, 1]
   */
  function rest(array, n, guard) {
    return slice(array, (n == null || guard) ? 1 : nativeMax(0, n));
  }

  /**
   * Uses a binary search to determine the smallest index at which the `value`
   * should be inserted into `array` in order to maintain the sort order of the
   * sorted `array`. If `callback` is passed, it will be executed for `value` and
   * each element in `array` to compute their sort ranking. The `callback` is
   * bound to `thisArg` and invoked with one argument; (value). The `callback`
   * argument may also be the name of a property to order by.
   *
   * @static
   * @memberOf _
   * @category Arrays
   * @param {Array} array The array to iterate over.
   * @param {Mixed} value The value to evaluate.
   * @param {Function|String} [callback=identity|property] The function called
   *  per iteration or property name to order by.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Number} Returns the index at which the value should be inserted
   *  into `array`.
   * @example
   *
   * _.sortedIndex([20, 30, 50], 40);
   * // => 2
   *
   * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');
   * // => 2
   *
   * var dict = {
   *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }
   * };
   *
   * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {
   *   return dict.wordToNumber[word];
   * });
   * // => 2
   *
   * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {
   *   return this.wordToNumber[word];
   * }, dict);
   * // => 2
   */
  function sortedIndex(array, value, callback, thisArg) {
    var low = 0,
        high = array ? array.length : low;

    // explicitly reference `identity` for better inlining in Firefox
    callback = callback ? createCallback(callback, thisArg) : identity;
    value = callback(value);

    while (low < high) {
      var mid = (low + high) >>> 1;
      callback(array[mid]) < value
        ? low = mid + 1
        : high = mid;
    }
    return low;
  }

  /**
   * Computes the union of the passed-in arrays using strict equality for
   * comparisons, i.e. `===`.
   *
   * @static
   * @memberOf _
   * @category Arrays
   * @param {Array} [array1, array2, ...] Arrays to process.
   * @returns {Array} Returns a new array of unique values, in order, that are
   *  present in one or more of the arrays.
   * @example
   *
   * _.union([1, 2, 3], [101, 2, 1, 10], [2, 1]);
   * // => [1, 2, 3, 101, 10]
   */
  function union() {
    return uniq(concat.apply(arrayRef, arguments));
  }

  /**
   * Creates a duplicate-value-free version of the `array` using strict equality
   * for comparisons, i.e. `===`. If the `array` is already sorted, passing `true`
   * for `isSorted` will run a faster algorithm. If `callback` is passed, each
   * element of `array` is passed through a callback` before uniqueness is computed.
   * The `callback` is bound to `thisArg` and invoked with three arguments; (value, index, array).
   *
   * @static
   * @memberOf _
   * @alias unique
   * @category Arrays
   * @param {Array} array The array to process.
   * @param {Boolean} [isSorted=false] A flag to indicate that the `array` is already sorted.
   * @param {Function} [callback=identity] The function called per iteration.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Array} Returns a duplicate-value-free array.
   * @example
   *
   * _.uniq([1, 2, 1, 3, 1]);
   * // => [1, 2, 3]
   *
   * _.uniq([1, 1, 2, 2, 3], true);
   * // => [1, 2, 3]
   *
   * _.uniq([1, 2, 1.5, 3, 2.5], function(num) { return Math.floor(num); });
   * // => [1, 2, 3]
   *
   * _.uniq([1, 2, 1.5, 3, 2.5], function(num) { return this.floor(num); }, Math);
   * // => [1, 2, 3]
   */
  function uniq(array, isSorted, callback, thisArg) {
    var index = -1,
        length = array ? array.length : 0,
        result = [],
        seen = result;

    // juggle arguments
    if (typeof isSorted == 'function') {
      thisArg = callback;
      callback = isSorted;
      isSorted = false;
    }
    // init value cache for large arrays
    var isLarge = !isSorted && length >= 75;
    if (isLarge) {
      var cache = {};
    }
    if (callback) {
      seen = [];
      callback = createCallback(callback, thisArg);
    }
    while (++index < length) {
      var value = array[index],
          computed = callback ? callback(value, index, array) : value;

      if (isLarge) {
        var key = computed + '';
        var inited = hasOwnProperty.call(cache, key)
          ? !(seen = cache[key])
          : (seen = cache[key] = []);
      }
      if (isSorted
            ? !index || seen[seen.length - 1] !== computed
            : inited || indexOf(seen, computed) < 0
          ) {
        if (callback || isLarge) {
          seen.push(computed);
        }
        result.push(value);
      }
    }
    return result;
  }

  /**
   * Creates an array with all occurrences of the passed values removed using
   * strict equality for comparisons, i.e. `===`.
   *
   * @static
   * @memberOf _
   * @category Arrays
   * @param {Array} array The array to filter.
   * @param {Mixed} [value1, value2, ...] Values to remove.
   * @returns {Array} Returns a new filtered array.
   * @example
   *
   * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);
   * // => [2, 3, 4]
   */
  function without(array) {
    var index = -1,
        length = array ? array.length : 0,
        contains = cachedContains(arguments, 1, 20),
        result = [];

    while (++index < length) {
      var value = array[index];
      if (!contains(value)) {
        result.push(value);
      }
    }
    return result;
  }

  /**
   * Groups the elements of each array at their corresponding indexes. Useful for
   * separate data sources that are coordinated through matching array indexes.
   * For a matrix of nested arrays, `_.zip.apply(...)` can transpose the matrix
   * in a similar fashion.
   *
   * @static
   * @memberOf _
   * @category Arrays
   * @param {Array} [array1, array2, ...] Arrays to process.
   * @returns {Array} Returns a new array of grouped elements.
   * @example
   *
   * _.zip(['moe', 'larry', 'curly'], [30, 40, 50], [true, false, false]);
   * // => [['moe', 30, true], ['larry', 40, false], ['curly', 50, false]]
   */
  function zip(array) {
    var index = -1,
        length = array ? max(pluck(arguments, 'length')) : 0,
        result = Array(length);

    while (++index < length) {
      result[index] = pluck(arguments, index);
    }
    return result;
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Creates a function that is restricted to executing `func` only after it is
   * called `n` times. The `func` is executed with the `this` binding of the
   * created function.
   *
   * @static
   * @memberOf _
   * @category Functions
   * @param {Number} n The number of times the function must be called before
   * it is executed.
   * @param {Function} func The function to restrict.
   * @returns {Function} Returns the new restricted function.
   * @example
   *
   * var renderNotes = _.after(notes.length, render);
   * _.forEach(notes, function(note) {
   *   note.asyncSave({ 'success': renderNotes });
   * });
   * // `renderNotes` is run once, after all notes have saved
   */
  function after(n, func) {
    if (n < 1) {
      return func();
    }
    return function() {
      if (--n < 1) {
        return func.apply(this, arguments);
      }
    };
  }

  /**
   * Creates a function that, when called, invokes `func` with the `this`
   * binding of `thisArg` and prepends any additional `bind` arguments to those
   * passed to the bound function.
   *
   * @static
   * @memberOf _
   * @category Functions
   * @param {Function} func The function to bind.
   * @param {Mixed} [thisArg] The `this` binding of `func`.
   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.
   * @returns {Function} Returns the new bound function.
   * @example
   *
   * var func = function(greeting) {
   *   return greeting + ' ' + this.name;
   * };
   *
   * func = _.bind(func, { 'name': 'moe' }, 'hi');
   * func();
   * // => 'hi moe'
   */
  function bind(func, thisArg) {
    // use `Function#bind` if it exists and is fast
    // (in V8 `Function#bind` is slower except when partially applied)
    return isBindFast || (nativeBind && arguments.length > 2)
      ? nativeBind.call.apply(nativeBind, arguments)
      : createBound(func, thisArg, slice(arguments, 2));
  }

  /**
   * Binds methods on `object` to `object`, overwriting the existing method.
   * If no method names are provided, all the function properties of `object`
   * will be bound.
   *
   * @static
   * @memberOf _
   * @category Functions
   * @param {Object} object The object to bind and assign the bound methods to.
   * @param {String} [methodName1, methodName2, ...] Method names on the object to bind.
   * @returns {Object} Returns `object`.
   * @example
   *
   * var buttonView = {
   *  'label': 'lodash',
   *  'onClick': function() { alert('clicked: ' + this.label); }
   * };
   *
   * _.bindAll(buttonView);
   * jQuery('#lodash_button').on('click', buttonView.onClick);
   * // => When the button is clicked, `this.label` will have the correct value
   */
  function bindAll(object) {
    var funcs = arguments,
        index = funcs.length > 1 ? 0 : (funcs = functions(object), -1),
        length = funcs.length;

    while (++index < length) {
      var key = funcs[index];
      object[key] = bind(object[key], object);
    }
    return object;
  }

  /**
   * Creates a function that, when called, invokes the method at `object[key]`
   * and prepends any additional `bindKey` arguments to those passed to the bound
   * function. This method differs from `_.bind` by allowing bound functions to
   * reference methods that will be redefined or don't yet exist.
   * See http://michaux.ca/articles/lazy-function-definition-pattern.
   *
   * @static
   * @memberOf _
   * @category Functions
   * @param {Object} object The object the method belongs to.
   * @param {String} key The key of the method.
   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.
   * @returns {Function} Returns the new bound function.
   * @example
   *
   * var object = {
   *   'name': 'moe',
   *   'greet': function(greeting) {
   *     return greeting + ' ' + this.name;
   *   }
   * };
   *
   * var func = _.bindKey(object, 'greet', 'hi');
   * func();
   * // => 'hi moe'
   *
   * object.greet = function(greeting) {
   *   return greeting + ', ' + this.name + '!';
   * };
   *
   * func();
   * // => 'hi, moe!'
   */
  function bindKey(object, key) {
    return createBound(object, key, slice(arguments, 2));
  }

  /**
   * Creates a function that is the composition of the passed functions,
   * where each function consumes the return value of the function that follows.
   * In math terms, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.
   * Each function is executed with the `this` binding of the composed function.
   *
   * @static
   * @memberOf _
   * @category Functions
   * @param {Function} [func1, func2, ...] Functions to compose.
   * @returns {Function} Returns the new composed function.
   * @example
   *
   * var greet = function(name) { return 'hi: ' + name; };
   * var exclaim = function(statement) { return statement + '!'; };
   * var welcome = _.compose(exclaim, greet);
   * welcome('moe');
   * // => 'hi: moe!'
   */
  function compose() {
    var funcs = arguments;
    return function() {
      var args = arguments,
          length = funcs.length;

      while (length--) {
        args = [funcs[length].apply(this, args)];
      }
      return args[0];
    };
  }

  /**
   * Creates a function that will delay the execution of `func` until after
   * `wait` milliseconds have elapsed since the last time it was invoked. Pass
   * `true` for `immediate` to cause debounce to invoke `func` on the leading,
   * instead of the trailing, edge of the `wait` timeout. Subsequent calls to
   * the debounced function will return the result of the last `func` call.
   *
   * @static
   * @memberOf _
   * @category Functions
   * @param {Function} func The function to debounce.
   * @param {Number} wait The number of milliseconds to delay.
   * @param {Boolean} immediate A flag to indicate execution is on the leading
   *  edge of the timeout.
   * @returns {Function} Returns the new debounced function.
   * @example
   *
   * var lazyLayout = _.debounce(calculateLayout, 300);
   * jQuery(window).on('resize', lazyLayout);
   */
  function debounce(func, wait, immediate) {
    var args,
        result,
        thisArg,
        timeoutId;

    function delayed() {
      timeoutId = null;
      if (!immediate) {
        result = func.apply(thisArg, args);
      }
    }
    return function() {
      var isImmediate = immediate && !timeoutId;
      args = arguments;
      thisArg = this;

      clearTimeout(timeoutId);
      timeoutId = setTimeout(delayed, wait);

      if (isImmediate) {
        result = func.apply(thisArg, args);
      }
      return result;
    };
  }

  /**
   * Executes the `func` function after `wait` milliseconds. Additional arguments
   * will be passed to `func` when it is invoked.
   *
   * @static
   * @memberOf _
   * @category Functions
   * @param {Function} func The function to delay.
   * @param {Number} wait The number of milliseconds to delay execution.
   * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the function with.
   * @returns {Number} Returns the `setTimeout` timeout id.
   * @example
   *
   * var log = _.bind(console.log, console);
   * _.delay(log, 1000, 'logged later');
   * // => 'logged later' (Appears after one second.)
   */
  function delay(func, wait) {
    var args = slice(arguments, 2);
    return setTimeout(function() { func.apply(undefined, args); }, wait);
  }

  /**
   * Defers executing the `func` function until the current call stack has cleared.
   * Additional arguments will be passed to `func` when it is invoked.
   *
   * @static
   * @memberOf _
   * @category Functions
   * @param {Function} func The function to defer.
   * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the function with.
   * @returns {Number} Returns the `setTimeout` timeout id.
   * @example
   *
   * _.defer(function() { alert('deferred'); });
   * // returns from the function before `alert` is called
   */
  function defer(func) {
    var args = slice(arguments, 1);
    return setTimeout(function() { func.apply(undefined, args); }, 1);
  }

  /**
   * Creates a function that memoizes the result of `func`. If `resolver` is
   * passed, it will be used to determine the cache key for storing the result
   * based on the arguments passed to the memoized function. By default, the first
   * argument passed to the memoized function is used as the cache key. The `func`
   * is executed with the `this` binding of the memoized function.
   *
   * @static
   * @memberOf _
   * @category Functions
   * @param {Function} func The function to have its output memoized.
   * @param {Function} [resolver] A function used to resolve the cache key.
   * @returns {Function} Returns the new memoizing function.
   * @example
   *
   * var fibonacci = _.memoize(function(n) {
   *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);
   * });
   */
  function memoize(func, resolver) {
    var cache = {};
    return function() {
      var key = resolver ? resolver.apply(this, arguments) : arguments[0];
      return hasOwnProperty.call(cache, key)
        ? cache[key]
        : (cache[key] = func.apply(this, arguments));
    };
  }

  /**
   * Creates a function that is restricted to execute `func` once. Repeat calls to
   * the function will return the value of the first call. The `func` is executed
   * with the `this` binding of the created function.
   *
   * @static
   * @memberOf _
   * @category Functions
   * @param {Function} func The function to restrict.
   * @returns {Function} Returns the new restricted function.
   * @example
   *
   * var initialize = _.once(createApplication);
   * initialize();
   * initialize();
   * // Application is only created once.
   */
  function once(func) {
    var result,
        ran = false;

    return function() {
      if (ran) {
        return result;
      }
      ran = true;
      result = func.apply(this, arguments);

      // clear the `func` variable so the function may be garbage collected
      func = null;
      return result;
    };
  }

  /**
   * Creates a function that, when called, invokes `func` with any additional
   * `partial` arguments prepended to those passed to the new function. This
   * method is similar to `bind`, except it does **not** alter the `this` binding.
   *
   * @static
   * @memberOf _
   * @category Functions
   * @param {Function} func The function to partially apply arguments to.
   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.
   * @returns {Function} Returns the new partially applied function.
   * @example
   *
   * var greet = function(greeting, name) { return greeting + ': ' + name; };
   * var hi = _.partial(greet, 'hi');
   * hi('moe');
   * // => 'hi: moe'
   */
  function partial(func) {
    return createBound(func, slice(arguments, 1));
  }

  /**
   * Creates a function that, when executed, will only call the `func`
   * function at most once per every `wait` milliseconds. If the throttled
   * function is invoked more than once during the `wait` timeout, `func` will
   * also be called on the trailing edge of the timeout. Subsequent calls to the
   * throttled function will return the result of the last `func` call.
   *
   * @static
   * @memberOf _
   * @category Functions
   * @param {Function} func The function to throttle.
   * @param {Number} wait The number of milliseconds to throttle executions to.
   * @returns {Function} Returns the new throttled function.
   * @example
   *
   * var throttled = _.throttle(updatePosition, 100);
   * jQuery(window).on('scroll', throttled);
   */
  function throttle(func, wait) {
    var args,
        result,
        thisArg,
        timeoutId,
        lastCalled = 0;

    function trailingCall() {
      lastCalled = new Date;
      timeoutId = null;
      result = func.apply(thisArg, args);
    }
    return function() {
      var now = new Date,
          remaining = wait - (now - lastCalled);

      args = arguments;
      thisArg = this;

      if (remaining <= 0) {
        clearTimeout(timeoutId);
        timeoutId = null;
        lastCalled = now;
        result = func.apply(thisArg, args);
      }
      else if (!timeoutId) {
        timeoutId = setTimeout(trailingCall, remaining);
      }
      return result;
    };
  }

  /**
   * Creates a function that passes `value` to the `wrapper` function as its
   * first argument. Additional arguments passed to the function are appended
   * to those passed to the `wrapper` function. The `wrapper` is executed with
   * the `this` binding of the created function.
   *
   * @static
   * @memberOf _
   * @category Functions
   * @param {Mixed} value The value to wrap.
   * @param {Function} wrapper The wrapper function.
   * @returns {Function} Returns the new function.
   * @example
   *
   * var hello = function(name) { return 'hello ' + name; };
   * hello = _.wrap(hello, function(func) {
   *   return 'before, ' + func('moe') + ', after';
   * });
   * hello();
   * // => 'before, hello moe, after'
   */
  function wrap(value, wrapper) {
    return function() {
      var args = [value];
      push.apply(args, arguments);
      return wrapper.apply(this, args);
    };
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Converts the characters `&`, `<`, `>`, `"`, and `'` in `string` to their
   * corresponding HTML entities.
   *
   * @static
   * @memberOf _
   * @category Utilities
   * @param {String} string The string to escape.
   * @returns {String} Returns the escaped string.
   * @example
   *
   * _.escape('Moe, Larry & Curly');
   * // => 'Moe, Larry &amp; Curly'
   */
  function escape(string) {
    return string == null ? '' : (string + '').replace(reUnescapedHtml, escapeHtmlChar);
  }

  /**
   * This function returns the first argument passed to it.
   *
   * @static
   * @memberOf _
   * @category Utilities
   * @param {Mixed} value Any value.
   * @returns {Mixed} Returns `value`.
   * @example
   *
   * var moe = { 'name': 'moe' };
   * moe === _.identity(moe);
   * // => true
   */
  function identity(value) {
    return value;
  }

  /**
   * Adds functions properties of `object` to the `lodash` function and chainable
   * wrapper.
   *
   * @static
   * @memberOf _
   * @category Utilities
   * @param {Object} object The object of function properties to add to `lodash`.
   * @example
   *
   * _.mixin({
   *   'capitalize': function(string) {
   *     return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
   *   }
   * });
   *
   * _.capitalize('larry');
   * // => 'Larry'
   *
   * _('curly').capitalize();
   * // => 'Curly'
   */
  function mixin(object) {
    forEach(functions(object), function(methodName) {
      var func = lodash[methodName] = object[methodName];

      lodash.prototype[methodName] = function() {
        var args = [this.__wrapped__];
        push.apply(args, arguments);

        var result = func.apply(lodash, args);
        return new lodash(result);
      };
    });
  }

  /**
   * Reverts the '_' variable to its previous value and returns a reference to
   * the `lodash` function.
   *
   * @static
   * @memberOf _
   * @category Utilities
   * @returns {Function} Returns the `lodash` function.
   * @example
   *
   * var lodash = _.noConflict();
   */
  function noConflict() {
    window._ = oldDash;
    return this;
  }

  /**
   * Produces a random number between `min` and `max` (inclusive). If only one
   * argument is passed, a number between `0` and the given number will be returned.
   *
   * @static
   * @memberOf _
   * @category Utilities
   * @param {Number} [min=0] The minimum possible value.
   * @param {Number} [max=1] The maximum possible value.
   * @returns {Number} Returns a random number.
   * @example
   *
   * _.random(0, 5);
   * // => a number between 1 and 5
   *
   * _.random(5);
   * // => also a number between 1 and 5
   */
  function random(min, max) {
    if (min == null && max == null) {
      max = 1;
    }
    min = +min || 0;
    if (max == null) {
      max = min;
      min = 0;
    }
    return min + floor(nativeRandom() * ((+max || 0) - min + 1));
  }

  /**
   * Resolves the value of `property` on `object`. If `property` is a function
   * it will be invoked and its result returned, else the property value is
   * returned. If `object` is falsey, then `null` is returned.
   *
   * @static
   * @memberOf _
   * @category Utilities
   * @param {Object} object The object to inspect.
   * @param {String} property The property to get the value of.
   * @returns {Mixed} Returns the resolved value.
   * @example
   *
   * var object = {
   *   'cheese': 'crumpets',
   *   'stuff': function() {
   *     return 'nonsense';
   *   }
   * };
   *
   * _.result(object, 'cheese');
   * // => 'crumpets'
   *
   * _.result(object, 'stuff');
   * // => 'nonsense'
   */
  function result(object, property) {
    // based on Backbone's private `getValue` function
    // https://github.com/documentcloud/backbone/blob/0.9.2/backbone.js#L1419-1424
    var value = object ? object[property] : null;
    return isFunction(value) ? object[property]() : value;
  }

  /**
   * A micro-templating method that handles arbitrary delimiters, preserves
   * whitespace, and correctly escapes quotes within interpolated code.
   *
   * Note: In the development build `_.template` utilizes sourceURLs for easier
   * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
   *
   * Note: Lo-Dash may be used in Chrome extensions by either creating a `lodash csp`
   * build and avoiding `_.template` use, or loading Lo-Dash in a sandboxed page.
   * See http://developer.chrome.com/trunk/extensions/sandboxingEval.html
   *
   * @static
   * @memberOf _
   * @category Utilities
   * @param {String} text The template text.
   * @param {Obect} data The data object used to populate the text.
   * @param {Object} options The options object.
   *  escape - The "escape" delimiter regexp.
   *  evaluate - The "evaluate" delimiter regexp.
   *  interpolate - The "interpolate" delimiter regexp.
   *  sourceURL - The sourceURL of the template's compiled source.
   *  variable - The data object variable name.
   *
   * @returns {Function|String} Returns a compiled function when no `data` object
   *  is given, else it returns the interpolated text.
   * @example
   *
   * // using a compiled template
   * var compiled = _.template('hello <%= name %>');
   * compiled({ 'name': 'moe' });
   * // => 'hello moe'
   *
   * var list = '<% _.forEach(people, function(name) { %><li><%= name %></li><% }); %>';
   * _.template(list, { 'people': ['moe', 'larry', 'curly'] });
   * // => '<li>moe</li><li>larry</li><li>curly</li>'
   *
   * // using the "escape" delimiter to escape HTML in data property values
   * _.template('<b><%- value %></b>', { 'value': '<script>' });
   * // => '<b>&lt;script&gt;</b>'
   *
   * // using the ES6 delimiter as an alternative to the default "interpolate" delimiter
   * _.template('hello ${ name }', { 'name': 'curly' });
   * // => 'hello curly'
   *
   * // using the internal `print` function in "evaluate" delimiters
   * _.template('<% print("hello " + epithet); %>!', { 'epithet': 'stooge' });
   * // => 'hello stooge!'
   *
   * // using custom template delimiters
   * _.templateSettings = {
   *   'interpolate': /{{([\s\S]+?)}}/g
   * };
   *
   * _.template('hello {{ name }}!', { 'name': 'mustache' });
   * // => 'hello mustache!'
   *
   * // using the `sourceURL` option to specify a custom sourceURL for the template
   * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });
   * compiled(data);
   * // => find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector
   *
   * // using the `variable` option to ensure a with-statement isn't used in the compiled template
   * var compiled = _.template('hello <%= data.name %>!', null, { 'variable': 'data' });
   * compiled.source;
   * // => function(data) {
   *   var __t, __p = '', __e = _.escape;
   *   __p += 'hello ' + ((__t = ( data.name )) == null ? '' : __t) + '!';
   *   return __p;
   * }
   *
   * // using the `source` property to inline compiled templates for meaningful
   * // line numbers in error messages and a stack trace
   * fs.writeFileSync(path.join(cwd, 'jst.js'), '\
   *   var JST = {\
   *     "main": ' + _.template(mainText).source + '\
   *   };\
   * ');
   */
  function template(text, data, options) {
    // based on John Resig's `tmpl` implementation
    // http://ejohn.org/blog/javascript-micro-templating/
    // and Laura Doktorova's doT.js
    // https://github.com/olado/doT
    text || (text = '');
    options || (options = {});

    var isEvaluating,
        result,
        settings = lodash.templateSettings,
        index = 0,
        interpolate = options.interpolate || settings.interpolate || reNoMatch,
        source = "__p += '",
        variable = options.variable || settings.variable,
        hasVariable = variable;

    // compile regexp to match each delimiter
    var reDelimiters = RegExp(
      (options.escape || settings.escape || reNoMatch).source + '|' +
      interpolate.source + '|' +
      (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
      (options.evaluate || settings.evaluate || reNoMatch).source + '|$'
    , 'g');

    text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
      interpolateValue || (interpolateValue = esTemplateValue);

      // escape characters that cannot be included in string literals
      source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);

      // replace delimiters with snippets
      if (escapeValue) {
        source += "' +\n__e(" + escapeValue + ") +\n'";
      }
      if (evaluateValue) {
        source += "';\n" + evaluateValue + ";\n__p += '";
      }
      if (interpolateValue) {
        source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
      }
      isEvaluating || (isEvaluating = evaluateValue || reComplexDelimiter.test(escapeValue || interpolateValue));
      index = offset + match.length;

      // the JS engine embedded in Adobe products requires returning the `match`
      // string in order to produce the correct `offset` value
      return match;
    });

    source += "';\n";

    // if `variable` is not specified and the template contains "evaluate"
    // delimiters, wrap a with-statement around the generated code to add the
    // data object to the top of the scope chain
    if (!hasVariable) {
      variable = 'obj';
      if (isEvaluating) {
        source = 'with (' + variable + ') {\n' + source + '\n}\n';
      }
      else {
        // avoid a with-statement by prepending data object references to property names
        var reDoubleVariable = RegExp('(\\(\\s*)' + variable + '\\.' + variable + '\\b', 'g');
        source = source
          .replace(reInsertVariable, '$&' + variable + '.')
          .replace(reDoubleVariable, '$1__d');
      }
    }

    // cleanup code by stripping empty strings
    source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
      .replace(reEmptyStringMiddle, '$1')
      .replace(reEmptyStringTrailing, '$1;');

    // frame code as the function body
    source = 'function(' + variable + ') {\n' +
      (hasVariable ? '' : variable + ' || (' + variable + ' = {});\n') +
      "var __t, __p = '', __e = _.escape" +
      (isEvaluating
        ? ', __j = Array.prototype.join;\n' +
          "function print() { __p += __j.call(arguments, '') }\n"
        : (hasVariable ? '' : ', __d = ' + variable + '.' + variable + ' || ' + variable) + ';\n'
      ) +
      source +
      'return __p\n}';

    // use a sourceURL for easier debugging
    // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
    var sourceURL = useSourceURL
      ? '\n//@ sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']')
      : '';

    try {
      result = Function('_', 'return ' + source + sourceURL)(lodash);
    } catch(e) {
      e.source = source;
      throw e;
    }

    if (data) {
      return result(data);
    }
    // provide the compiled function's source via its `toString` method, in
    // supported environments, or the `source` property as a convenience for
    // inlining compiled templates during the build process
    result.source = source;
    return result;
  }

  /**
   * Executes the `callback` function `n` times, returning an array of the results
   * of each `callback` execution. The `callback` is bound to `thisArg` and invoked
   * with one argument; (index).
   *
   * @static
   * @memberOf _
   * @category Utilities
   * @param {Number} n The number of times to execute the callback.
   * @param {Function} callback The function called per iteration.
   * @param {Mixed} [thisArg] The `this` binding of `callback`.
   * @returns {Array} Returns a new array of the results of each `callback` execution.
   * @example
   *
   * var diceRolls = _.times(3, _.partial(_.random, 1, 6));
   * // => [3, 6, 4]
   *
   * _.times(3, function(n) { mage.castSpell(n); });
   * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively
   *
   * _.times(3, function(n) { this.cast(n); }, mage);
   * // => also calls `mage.castSpell(n)` three times
   */
  function times(n, callback, thisArg) {
    n = +n || 0;
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = callback.call(thisArg, index);
    }
    return result;
  }

  /**
   * The opposite of `_.escape`, this method converts the HTML entities
   * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#x27;` in `string` to their
   * corresponding characters.
   *
   * @static
   * @memberOf _
   * @category Utilities
   * @param {String} string The string to unescape.
   * @returns {String} Returns the unescaped string.
   * @example
   *
   * _.unescape('Moe, Larry &amp; Curly');
   * // => 'Moe, Larry & Curly'
   */
  function unescape(string) {
    return string == null ? '' : (string + '').replace(reEscapedHtml, unescapeHtmlChar);
  }

  /**
   * Generates a unique ID. If `prefix` is passed, the ID will be appended to it.
   *
   * @static
   * @memberOf _
   * @category Utilities
   * @param {String} [prefix] The value to prefix the ID with.
   * @returns {String} Returns the unique ID.
   * @example
   *
   * _.uniqueId('contact_');
   * // => 'contact_104'
   *
   * _.uniqueId();
   * // => '105'
   */
  function uniqueId(prefix) {
    return (prefix == null ? '' : prefix + '') + (++idCounter);
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Invokes `interceptor` with the `value` as the first argument, and then
   * returns `value`. The purpose of this method is to "tap into" a method chain,
   * in order to perform operations on intermediate results within the chain.
   *
   * @static
   * @memberOf _
   * @category Chaining
   * @param {Mixed} value The value to pass to `interceptor`.
   * @param {Function} interceptor The function to invoke.
   * @returns {Mixed} Returns `value`.
   * @example
   *
   * _.chain([1, 2, 3, 200])
   *  .filter(function(num) { return num % 2 == 0; })
   *  .tap(alert)
   *  .map(function(num) { return num * num; })
   *  .value();
   * // => // [2, 200] (alerted)
   * // => [4, 40000]
   */
  function tap(value, interceptor) {
    interceptor(value);
    return value;
  }

  /**
   * Produces the `toString` result of the wrapped value.
   *
   * @name toString
   * @memberOf _
   * @category Chaining
   * @returns {String} Returns the string result.
   * @example
   *
   * _([1, 2, 3]).toString();
   * // => '1,2,3'
   */
  function wrapperToString() {
    return this.__wrapped__ + '';
  }

  /**
   * Extracts the wrapped value.
   *
   * @name valueOf
   * @memberOf _
   * @alias value
   * @category Chaining
   * @returns {Mixed} Returns the wrapped value.
   * @example
   *
   * _([1, 2, 3]).valueOf();
   * // => [1, 2, 3]
   */
  function wrapperValueOf() {
    return this.__wrapped__;
  }

  /*--------------------------------------------------------------------------*/

  // add functions that return wrapped values when chaining
  lodash.after = after;
  lodash.assign = assign;
  lodash.at = at;
  lodash.bind = bind;
  lodash.bindAll = bindAll;
  lodash.bindKey = bindKey;
  lodash.compact = compact;
  lodash.compose = compose;
  lodash.countBy = countBy;
  lodash.debounce = debounce;
  lodash.defaults = defaults;
  lodash.defer = defer;
  lodash.delay = delay;
  lodash.difference = difference;
  lodash.filter = filter;
  lodash.flatten = flatten;
  lodash.forEach = forEach;
  lodash.forIn = forIn;
  lodash.forOwn = forOwn;
  lodash.functions = functions;
  lodash.groupBy = groupBy;
  lodash.initial = initial;
  lodash.intersection = intersection;
  lodash.invert = invert;
  lodash.invoke = invoke;
  lodash.keys = keys;
  lodash.map = map;
  lodash.max = max;
  lodash.memoize = memoize;
  lodash.merge = merge;
  lodash.min = min;
  lodash.object = object;
  lodash.omit = omit;
  lodash.once = once;
  lodash.pairs = pairs;
  lodash.partial = partial;
  lodash.pick = pick;
  lodash.pluck = pluck;
  lodash.range = range;
  lodash.reject = reject;
  lodash.rest = rest;
  lodash.shuffle = shuffle;
  lodash.sortBy = sortBy;
  lodash.tap = tap;
  lodash.throttle = throttle;
  lodash.times = times;
  lodash.toArray = toArray;
  lodash.union = union;
  lodash.uniq = uniq;
  lodash.values = values;
  lodash.where = where;
  lodash.without = without;
  lodash.wrap = wrap;
  lodash.zip = zip;

  // add aliases
  lodash.collect = map;
  lodash.drop = rest;
  lodash.each = forEach;
  lodash.extend = assign;
  lodash.methods = functions;
  lodash.select = filter;
  lodash.tail = rest;
  lodash.unique = uniq;

  // add functions to `lodash.prototype`
  mixin(lodash);

  /*--------------------------------------------------------------------------*/

  // add functions that return unwrapped values when chaining
  lodash.clone = clone;
  lodash.cloneDeep = cloneDeep;
  lodash.contains = contains;
  lodash.escape = escape;
  lodash.every = every;
  lodash.find = find;
  lodash.has = has;
  lodash.identity = identity;
  lodash.indexOf = indexOf;
  lodash.isArguments = isArguments;
  lodash.isArray = isArray;
  lodash.isBoolean = isBoolean;
  lodash.isDate = isDate;
  lodash.isElement = isElement;
  lodash.isEmpty = isEmpty;
  lodash.isEqual = isEqual;
  lodash.isFinite = isFinite;
  lodash.isFunction = isFunction;
  lodash.isNaN = isNaN;
  lodash.isNull = isNull;
  lodash.isNumber = isNumber;
  lodash.isObject = isObject;
  lodash.isPlainObject = isPlainObject;
  lodash.isRegExp = isRegExp;
  lodash.isString = isString;
  lodash.isUndefined = isUndefined;
  lodash.lastIndexOf = lastIndexOf;
  lodash.mixin = mixin;
  lodash.noConflict = noConflict;
  lodash.random = random;
  lodash.reduce = reduce;
  lodash.reduceRight = reduceRight;
  lodash.result = result;
  lodash.size = size;
  lodash.some = some;
  lodash.sortedIndex = sortedIndex;
  lodash.template = template;
  lodash.unescape = unescape;
  lodash.uniqueId = uniqueId;

  // add aliases
  lodash.all = every;
  lodash.any = some;
  lodash.detect = find;
  lodash.foldl = reduce;
  lodash.foldr = reduceRight;
  lodash.include = contains;
  lodash.inject = reduce;

  forOwn(lodash, function(func, methodName) {
    if (!lodash.prototype[methodName]) {
      lodash.prototype[methodName] = function() {
        var args = [this.__wrapped__];
        push.apply(args, arguments);
        return func.apply(lodash, args);
      };
    }
  });

  /*--------------------------------------------------------------------------*/

  // add functions capable of returning wrapped and unwrapped values when chaining
  lodash.first = first;
  lodash.last = last;

  // add aliases
  lodash.take = first;
  lodash.head = first;

  forOwn(lodash, function(func, methodName) {
    if (!lodash.prototype[methodName]) {
      lodash.prototype[methodName]= function(n, guard) {
        var result = func(this.__wrapped__, n, guard);
        return (n == null || guard) ? result : new lodash(result);
      };
    }
  });

  /*--------------------------------------------------------------------------*/

  /**
   * The semantic version number.
   *
   * @static
   * @memberOf _
   * @type String
   */
  lodash.VERSION = '1.0.0-rc.3';

  // add "Chaining" functions to the wrapper
  lodash.prototype.toString = wrapperToString;
  lodash.prototype.value = wrapperValueOf;
  lodash.prototype.valueOf = wrapperValueOf;

  // add `Array` functions that return unwrapped values
  each(['join', 'pop', 'shift'], function(methodName) {
    var func = arrayRef[methodName];
    lodash.prototype[methodName] = function() {
      return func.apply(this.__wrapped__, arguments);
    };
  });

  // add `Array` functions that return the wrapped value
  each(['push', 'reverse', 'sort', 'unshift'], function(methodName) {
    var func = arrayRef[methodName];
    lodash.prototype[methodName] = function() {
      func.apply(this.__wrapped__, arguments);
      return this;
    };
  });

  // add `Array` functions that return new wrapped values
  each(['concat', 'slice', 'splice'], function(methodName) {
    var func = arrayRef[methodName];
    lodash.prototype[methodName] = function() {
      var result = func.apply(this.__wrapped__, arguments);
      return new lodash(result);
    };
  });

  // avoid array-like object bugs with `Array#shift` and `Array#splice`
  // in Firefox < 10 and IE < 9
  if (hasObjectSpliceBug) {
    each(['pop', 'shift', 'splice'], function(methodName) {
      var func = arrayRef[methodName],
          isSplice = methodName == 'splice';

      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            result = func.apply(value, arguments);

        if (value.length === 0) {
          delete value[0];
        }
        return isSplice ? new lodash(result) : result;
      };
    });
  }

  // add pseudo private property to be used and removed during the build process
  lodash._each = each;
  lodash._iteratorTemplate = iteratorTemplate;

  /*--------------------------------------------------------------------------*/

  // expose Lo-Dash
  // some AMD build optimizers, like r.js, check for specific condition patterns like the following:
  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
    // Expose Lo-Dash to the global object even when an AMD loader is present in
    // case Lo-Dash was injected by a third-party script and not intended to be
    // loaded as a module. The global assignment can be reverted in the Lo-Dash
    // module via its `noConflict()` method.
    window._ = lodash;

    // define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module
    define('underscore',[],function() {
      return lodash;
    });
  }
  // check for `exports` after `define` in case a build optimizer adds an `exports` object
  else if (freeExports) {
    // in Node.js or RingoJS v0.8.0+
    if (typeof module == 'object' && module && module.exports == freeExports) {
      (module.exports = lodash)._ = lodash;
    }
    // in Narwhal or RingoJS v0.7.0-
    else {
      freeExports._ = lodash;
    }
  }
  else {
    // in a browser or Rhino
    window._ = lodash;
  }
}(this));

//     Backbone.js 0.9.2

//     (c) 2010-2012 Jeremy Ashkenas, DocumentCloud Inc.
//     Backbone may be freely distributed under the MIT license.
//     For all details and documentation:
//     http://backbonejs.org

(function(){

  // Initial Setup
  // -------------

  // Save a reference to the global object (`window` in the browser, `global`
  // on the server).
  var root = this;

  // Save the previous value of the `Backbone` variable, so that it can be
  // restored later on, if `noConflict` is used.
  var previousBackbone = root.Backbone;

  // Create a local reference to slice/splice.
  var slice = Array.prototype.slice;
  var splice = Array.prototype.splice;

  // The top-level namespace. All public Backbone classes and modules will
  // be attached to this. Exported for both CommonJS and the browser.
  var Backbone;
  if (typeof exports !== 'undefined') {
    Backbone = exports;
  } else {
    Backbone = root.Backbone = {};
  }

  // Current version of the library. Keep in sync with `package.json`.
  Backbone.VERSION = '0.9.2';

  // Require Underscore, if we're on the server, and it's not already present.
  var _ = root._;
  if (!_ && (typeof require !== 'undefined')) _ = require('underscore');

  // For Backbone's purposes, jQuery, Zepto, or Ender owns the `$` variable.
  var $ = root.jQuery || root.Zepto || root.ender;

  // Set the JavaScript library that will be used for DOM manipulation and
  // Ajax calls (a.k.a. the `$` variable). By default Backbone will use: jQuery,
  // Zepto, or Ender; but the `setDomLibrary()` method lets you inject an
  // alternate JavaScript library (or a mock library for testing your views
  // outside of a browser).
  Backbone.setDomLibrary = function(lib) {
    $ = lib;
  };

  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable
  // to its previous owner. Returns a reference to this Backbone object.
  Backbone.noConflict = function() {
    root.Backbone = previousBackbone;
    return this;
  };

  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option
  // will fake `"PUT"` and `"DELETE"` requests via the `_method` parameter and
  // set a `X-Http-Method-Override` header.
  Backbone.emulateHTTP = false;

  // Turn on `emulateJSON` to support legacy servers that can't deal with direct
  // `application/json` requests ... will encode the body as
  // `application/x-www-form-urlencoded` instead and will send the model in a
  // form param named `model`.
  Backbone.emulateJSON = false;

  // Backbone.Events
  // -----------------

  // Regular expression used to split event strings
  var eventSplitter = /\s+/;

  // A module that can be mixed in to *any object* in order to provide it with
  // custom events. You may bind with `on` or remove with `off` callback functions
  // to an event; trigger`-ing an event fires all callbacks in succession.
  //
  //     var object = {};
  //     _.extend(object, Backbone.Events);
  //     object.on('expand', function(){ alert('expanded'); });
  //     object.trigger('expand');
  //
  var Events = Backbone.Events = {

    // Bind one or more space separated events, `events`, to a `callback`
    // function. Passing `"all"` will bind the callback to all events fired.
    on: function(events, callback, context) {

      var calls, event, node, tail, list;
      if (!callback) return this;
      events = events.split(eventSplitter);
      calls = this._callbacks || (this._callbacks = {});

      // Create an immutable callback list, allowing traversal during
      // modification.  The tail is an empty object that will always be used
      // as the next node.
      while (event = events.shift()) {
        list = calls[event];
        node = list ? list.tail : {};
        node.next = tail = {};
        node.context = context;
        node.callback = callback;
        calls[event] = {tail: tail, next: list ? list.next : node};
      }

      return this;
    },

    // Remove one or many callbacks. If `context` is null, removes all callbacks
    // with that function. If `callback` is null, removes all callbacks for the
    // event. If `events` is null, removes all bound callbacks for all events.
    off: function(events, callback, context) {
      var event, calls, node, tail, cb, ctx;

      // No events, or removing *all* events.
      if (!(calls = this._callbacks)) return;
      if (!(events || callback || context)) {
        delete this._callbacks;
        return this;
      }

      // Loop through the listed events and contexts, splicing them out of the
      // linked list of callbacks if appropriate.
      events = events ? events.split(eventSplitter) : _.keys(calls);
      while (event = events.shift()) {
        node = calls[event];
        delete calls[event];
        if (!node || !(callback || context)) continue;
        // Create a new list, omitting the indicated callbacks.
        tail = node.tail;
        while ((node = node.next) !== tail) {
          cb = node.callback;
          ctx = node.context;
          if ((callback && cb !== callback) || (context && ctx !== context)) {
            this.on(event, cb, ctx);
          }
        }
      }

      return this;
    },

    // Trigger one or many events, firing all bound callbacks. Callbacks are
    // passed the same arguments as `trigger` is, apart from the event name
    // (unless you're listening on `"all"`, which will cause your callback to
    // receive the true name of the event as the first argument).
    trigger: function(events) {
      var event, node, calls, tail, args, all, rest;
      if (!(calls = this._callbacks)) return this;
      all = calls.all;
      events = events.split(eventSplitter);
      rest = slice.call(arguments, 1);

      // For each event, walk through the linked list of callbacks twice,
      // first to trigger the event, then to trigger any `"all"` callbacks.
      while (event = events.shift()) {
        if (node = calls[event]) {
          tail = node.tail;
          while ((node = node.next) !== tail) {
            node.callback.apply(node.context || this, rest);
          }
        }
        if (node = all) {
          tail = node.tail;
          args = [event].concat(rest);
          while ((node = node.next) !== tail) {
            node.callback.apply(node.context || this, args);
          }
        }
      }

      return this;
    }

  };

  // Aliases for backwards compatibility.
  Events.bind   = Events.on;
  Events.unbind = Events.off;

  // Backbone.Model
  // --------------

  // Create a new model, with defined attributes. A client id (`cid`)
  // is automatically generated and assigned for you.
  var Model = Backbone.Model = function(attributes, options) {
    var defaults;
    attributes || (attributes = {});
    if (options && options.parse) attributes = this.parse(attributes);
    if (defaults = getValue(this, 'defaults')) {
      attributes = _.extend({}, defaults, attributes);
    }
    if (options && options.collection) this.collection = options.collection;
    this.attributes = {};
    this._escapedAttributes = {};
    this.cid = _.uniqueId('c');
    this.changed = {};
    this._silent = {};
    this._pending = {};
    this.set(attributes, {silent: true});
    // Reset change tracking.
    this.changed = {};
    this._silent = {};
    this._pending = {};
    this._previousAttributes = _.clone(this.attributes);
    this.initialize.apply(this, arguments);
  };

  // Attach all inheritable methods to the Model prototype.
  _.extend(Model.prototype, Events, {

    // A hash of attributes whose current and previous value differ.
    changed: null,

    // A hash of attributes that have silently changed since the last time
    // `change` was called.  Will become pending attributes on the next call.
    _silent: null,

    // A hash of attributes that have changed since the last `'change'` event
    // began.
    _pending: null,

    // The default name for the JSON `id` attribute is `"id"`. MongoDB and
    // CouchDB users may want to set this to `"_id"`.
    idAttribute: 'id',

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // Return a copy of the model's `attributes` object.
    toJSON: function(options) {
      return _.clone(this.attributes);
    },

    // Get the value of an attribute.
    get: function(attr) {
      return this.attributes[attr];
    },

    // Get the HTML-escaped value of an attribute.
    escape: function(attr) {
      var html;
      if (html = this._escapedAttributes[attr]) return html;
      var val = this.get(attr);
      return this._escapedAttributes[attr] = _.escape(val == null ? '' : '' + val);
    },

    // Returns `true` if the attribute contains a value that is not null
    // or undefined.
    has: function(attr) {
      return this.get(attr) != null;
    },

    // Set a hash of model attributes on the object, firing `"change"` unless
    // you choose to silence it.
    set: function(key, value, options) {
      var attrs, attr, val;

      // Handle both `"key", value` and `{key: value}` -style arguments.
      if (_.isObject(key) || key == null) {
        attrs = key;
        options = value;
      } else {
        attrs = {};
        attrs[key] = value;
      }

      // Extract attributes and options.
      options || (options = {});
      if (!attrs) return this;
      if (attrs instanceof Model) attrs = attrs.attributes;
      if (options.unset) for (attr in attrs) attrs[attr] = void 0;

      // Run validation.
      if (!this._validate(attrs, options)) return false;

      // Check for changes of `id`.
      if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];

      var changes = options.changes = {};
      var now = this.attributes;
      var escaped = this._escapedAttributes;
      var prev = this._previousAttributes || {};

      // For each `set` attribute...
      for (attr in attrs) {
        val = attrs[attr];

        // If the new and current value differ, record the change.
        if (!_.isEqual(now[attr], val) || (options.unset && _.has(now, attr))) {
          delete escaped[attr];
          (options.silent ? this._silent : changes)[attr] = true;
        }

        // Update or delete the current value.
        options.unset ? delete now[attr] : now[attr] = val;

        // If the new and previous value differ, record the change.  If not,
        // then remove changes for this attribute.
        if (!_.isEqual(prev[attr], val) || (_.has(now, attr) != _.has(prev, attr))) {
          this.changed[attr] = val;
          if (!options.silent) this._pending[attr] = true;
        } else {
          delete this.changed[attr];
          delete this._pending[attr];
        }
      }

      // Fire the `"change"` events.
      if (!options.silent) this.change(options);
      return this;
    },

    // Remove an attribute from the model, firing `"change"` unless you choose
    // to silence it. `unset` is a noop if the attribute doesn't exist.
    unset: function(attr, options) {
      (options || (options = {})).unset = true;
      return this.set(attr, null, options);
    },

    // Clear all attributes on the model, firing `"change"` unless you choose
    // to silence it.
    clear: function(options) {
      (options || (options = {})).unset = true;
      return this.set(_.clone(this.attributes), options);
    },

    // Fetch the model from the server. If the server's representation of the
    // model differs from its current attributes, they will be overriden,
    // triggering a `"change"` event.
    fetch: function(options) {
      options = options ? _.clone(options) : {};
      var model = this;
      var success = options.success;
      options.success = function(resp, status, xhr) {
        if (!model.set(model.parse(resp, xhr), options)) return false;
        if (success) success(model, resp);
      };
      options.error = Backbone.wrapError(options.error, model, options);
      return (this.sync || Backbone.sync).call(this, 'read', this, options);
    },

    // Set a hash of model attributes, and sync the model to the server.
    // If the server returns an attributes hash that differs, the model's
    // state will be `set` again.
    save: function(key, value, options) {
      var attrs, current;

      // Handle both `("key", value)` and `({key: value})` -style calls.
      if (_.isObject(key) || key == null) {
        attrs = key;
        options = value;
      } else {
        attrs = {};
        attrs[key] = value;
      }
      options = options ? _.clone(options) : {};

      // If we're "wait"-ing to set changed attributes, validate early.
      if (options.wait) {
        if (!this._validate(attrs, options)) return false;
        current = _.clone(this.attributes);
      }

      // Regular saves `set` attributes before persisting to the server.
      var silentOptions = _.extend({}, options, {silent: true});
      if (attrs && !this.set(attrs, options.wait ? silentOptions : options)) {
        return false;
      }

      // After a successful server-side save, the client is (optionally)
      // updated with the server-side state.
      var model = this;
      var success = options.success;
      options.success = function(resp, status, xhr) {
        var serverAttrs = model.parse(resp, xhr);
        if (options.wait) {
          delete options.wait;
          serverAttrs = _.extend(attrs || {}, serverAttrs);
        }
        if (!model.set(serverAttrs, options)) return false;
        if (success) {
          success(model, resp);
        } else {
          model.trigger('sync', model, resp, options);
        }
      };

      // Finish configuring and sending the Ajax request.
      options.error = Backbone.wrapError(options.error, model, options);
      var method = this.isNew() ? 'create' : 'update';
      var xhr = (this.sync || Backbone.sync).call(this, method, this, options);
      if (options.wait) this.set(current, silentOptions);
      return xhr;
    },

    // Destroy this model on the server if it was already persisted.
    // Optimistically removes the model from its collection, if it has one.
    // If `wait: true` is passed, waits for the server to respond before removal.
    destroy: function(options) {
      options = options ? _.clone(options) : {};
      var model = this;
      var success = options.success;

      var triggerDestroy = function() {
        model.trigger('destroy', model, model.collection, options);
      };

      if (this.isNew()) {
        triggerDestroy();
        return false;
      }

      options.success = function(resp) {
        if (options.wait) triggerDestroy();
        if (success) {
          success(model, resp);
        } else {
          model.trigger('sync', model, resp, options);
        }
      };

      options.error = Backbone.wrapError(options.error, model, options);
      var xhr = (this.sync || Backbone.sync).call(this, 'delete', this, options);
      if (!options.wait) triggerDestroy();
      return xhr;
    },

    // Default URL for the model's representation on the server -- if you're
    // using Backbone's restful methods, override this to change the endpoint
    // that will be called.
    url: function() {
      var base = getValue(this, 'urlRoot') || getValue(this.collection, 'url') || urlError();
      if (this.isNew()) return base;
      return base + (base.charAt(base.length - 1) == '/' ? '' : '/') + encodeURIComponent(this.id);
    },

    // **parse** converts a response into the hash of attributes to be `set` on
    // the model. The default implementation is just to pass the response along.
    parse: function(resp, xhr) {
      return resp;
    },

    // Create a new model with identical attributes to this one.
    clone: function() {
      return new this.constructor(this.attributes);
    },

    // A model is new if it has never been saved to the server, and lacks an id.
    isNew: function() {
      return this.id == null;
    },

    // Call this method to manually fire a `"change"` event for this model and
    // a `"change:attribute"` event for each changed attribute.
    // Calling this will cause all objects observing the model to update.
    change: function(options) {
      options || (options = {});
      var changing = this._changing;
      this._changing = true;

      // Silent changes become pending changes.
      for (var attr in this._silent) this._pending[attr] = true;

      // Silent changes are triggered.
      var changes = _.extend({}, options.changes, this._silent);
      this._silent = {};
      for (var attr in changes) {
        this.trigger('change:' + attr, this, this.get(attr), options);
      }
      if (changing) return this;

      // Continue firing `"change"` events while there are pending changes.
      while (!_.isEmpty(this._pending)) {
        this._pending = {};
        this.trigger('change', this, options);
        // Pending and silent changes still remain.
        for (var attr in this.changed) {
          if (this._pending[attr] || this._silent[attr]) continue;
          delete this.changed[attr];
        }
        this._previousAttributes = _.clone(this.attributes);
      }

      this._changing = false;
      return this;
    },

    // Determine if the model has changed since the last `"change"` event.
    // If you specify an attribute name, determine if that attribute has changed.
    hasChanged: function(attr) {
      if (!arguments.length) return !_.isEmpty(this.changed);
      return _.has(this.changed, attr);
    },

    // Return an object containing all the attributes that have changed, or
    // false if there are no changed attributes. Useful for determining what
    // parts of a view need to be updated and/or what attributes need to be
    // persisted to the server. Unset attributes will be set to undefined.
    // You can also pass an attributes object to diff against the model,
    // determining if there *would be* a change.
    changedAttributes: function(diff) {
      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;
      var val, changed = false, old = this._previousAttributes;
      for (var attr in diff) {
        if (_.isEqual(old[attr], (val = diff[attr]))) continue;
        (changed || (changed = {}))[attr] = val;
      }
      return changed;
    },

    // Get the previous value of an attribute, recorded at the time the last
    // `"change"` event was fired.
    previous: function(attr) {
      if (!arguments.length || !this._previousAttributes) return null;
      return this._previousAttributes[attr];
    },

    // Get all of the attributes of the model at the time of the previous
    // `"change"` event.
    previousAttributes: function() {
      return _.clone(this._previousAttributes);
    },

    // Check if the model is currently in a valid state. It's only possible to
    // get into an *invalid* state if you're using silent changes.
    isValid: function() {
      return !this.validate(this.attributes);
    },

    // Run validation against the next complete set of model attributes,
    // returning `true` if all is well. If a specific `error` callback has
    // been passed, call that instead of firing the general `"error"` event.
    _validate: function(attrs, options) {
      if (options.silent || !this.validate) return true;
      attrs = _.extend({}, this.attributes, attrs);
      var error = this.validate(attrs, options);
      if (!error) return true;
      if (options && options.error) {
        options.error(this, error, options);
      } else {
        this.trigger('error', this, error, options);
      }
      return false;
    }

  });

  // Backbone.Collection
  // -------------------

  // Provides a standard collection class for our sets of models, ordered
  // or unordered. If a `comparator` is specified, the Collection will maintain
  // its models in sort order, as they're added and removed.
  var Collection = Backbone.Collection = function(models, options) {
    options || (options = {});
    if (options.model) this.model = options.model;
    if (options.comparator) this.comparator = options.comparator;
    this._reset();
    this.initialize.apply(this, arguments);
    if (models) this.reset(models, {silent: true, parse: options.parse});
  };

  // Define the Collection's inheritable methods.
  _.extend(Collection.prototype, Events, {

    // The default model for a collection is just a **Backbone.Model**.
    // This should be overridden in most cases.
    model: Model,

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // The JSON representation of a Collection is an array of the
    // models' attributes.
    toJSON: function(options) {
      return this.map(function(model){ return model.toJSON(options); });
    },

    // Add a model, or list of models to the set. Pass **silent** to avoid
    // firing the `add` event for every new model.
    add: function(models, options) {
      var i, index, length, model, cid, id, cids = {}, ids = {}, dups = [];
      options || (options = {});
      models = _.isArray(models) ? models.slice() : [models];

      // Begin by turning bare objects into model references, and preventing
      // invalid models or duplicate models from being added.
      for (i = 0, length = models.length; i < length; i++) {
        if (!(model = models[i] = this._prepareModel(models[i], options))) {
          throw new Error("Can't add an invalid model to a collection");
        }
        cid = model.cid;
        id = model.id;
        if (cids[cid] || this._byCid[cid] || ((id != null) && (ids[id] || this._byId[id]))) {
          dups.push(i);
          continue;
        }
        cids[cid] = ids[id] = model;
      }

      // Remove duplicates.
      i = dups.length;
      while (i--) {
        models.splice(dups[i], 1);
      }

      // Listen to added models' events, and index models for lookup by
      // `id` and by `cid`.
      for (i = 0, length = models.length; i < length; i++) {
        (model = models[i]).on('all', this._onModelEvent, this);
        this._byCid[model.cid] = model;
        if (model.id != null) this._byId[model.id] = model;
      }

      // Insert models into the collection, re-sorting if needed, and triggering
      // `add` events unless silenced.
      this.length += length;
      index = options.at != null ? options.at : this.models.length;
      splice.apply(this.models, [index, 0].concat(models));
      if (this.comparator) this.sort({silent: true});
      if (options.silent) return this;
      for (i = 0, length = this.models.length; i < length; i++) {
        if (!cids[(model = this.models[i]).cid]) continue;
        options.index = i;
        model.trigger('add', model, this, options);
      }
      return this;
    },

    // Remove a model, or a list of models from the set. Pass silent to avoid
    // firing the `remove` event for every model removed.
    remove: function(models, options) {
      var i, l, index, model;
      options || (options = {});
      models = _.isArray(models) ? models.slice() : [models];
      for (i = 0, l = models.length; i < l; i++) {
        model = this.getByCid(models[i]) || this.get(models[i]);
        if (!model) continue;
        delete this._byId[model.id];
        delete this._byCid[model.cid];
        index = this.indexOf(model);
        this.models.splice(index, 1);
        this.length--;
        if (!options.silent) {
          options.index = index;
          model.trigger('remove', model, this, options);
        }
        this._removeReference(model);
      }
      return this;
    },

    // Add a model to the end of the collection.
    push: function(model, options) {
      model = this._prepareModel(model, options);
      this.add(model, options);
      return model;
    },

    // Remove a model from the end of the collection.
    pop: function(options) {
      var model = this.at(this.length - 1);
      this.remove(model, options);
      return model;
    },

    // Add a model to the beginning of the collection.
    unshift: function(model, options) {
      model = this._prepareModel(model, options);
      this.add(model, _.extend({at: 0}, options));
      return model;
    },

    // Remove a model from the beginning of the collection.
    shift: function(options) {
      var model = this.at(0);
      this.remove(model, options);
      return model;
    },

    // Get a model from the set by id.
    get: function(id) {
      if (id == null) return void 0;
      return this._byId[id.id != null ? id.id : id];
    },

    // Get a model from the set by client id.
    getByCid: function(cid) {
      return cid && this._byCid[cid.cid || cid];
    },

    // Get the model at the given index.
    at: function(index) {
      return this.models[index];
    },

    // Return models with matching attributes. Useful for simple cases of `filter`.
    where: function(attrs) {
      if (_.isEmpty(attrs)) return [];
      return this.filter(function(model) {
        for (var key in attrs) {
          if (attrs[key] !== model.get(key)) return false;
        }
        return true;
      });
    },

    // Force the collection to re-sort itself. You don't need to call this under
    // normal circumstances, as the set will maintain sort order as each item
    // is added.
    sort: function(options) {
      options || (options = {});
      if (!this.comparator) throw new Error('Cannot sort a set without a comparator');
      var boundComparator = _.bind(this.comparator, this);
      if (this.comparator.length == 1) {
        this.models = this.sortBy(boundComparator);
      } else {
        this.models.sort(boundComparator);
      }
      if (!options.silent) this.trigger('reset', this, options);
      return this;
    },

    // Pluck an attribute from each model in the collection.
    pluck: function(attr) {
      return _.map(this.models, function(model){ return model.get(attr); });
    },

    // When you have more items than you want to add or remove individually,
    // you can reset the entire set with a new list of models, without firing
    // any `add` or `remove` events. Fires `reset` when finished.
    reset: function(models, options) {
      models  || (models = []);
      options || (options = {});
      for (var i = 0, l = this.models.length; i < l; i++) {
        this._removeReference(this.models[i]);
      }
      this._reset();
      this.add(models, _.extend({silent: true}, options));
      if (!options.silent) this.trigger('reset', this, options);
      return this;
    },

    // Fetch the default set of models for this collection, resetting the
    // collection when they arrive. If `add: true` is passed, appends the
    // models to the collection instead of resetting.
    fetch: function(options) {
      options = options ? _.clone(options) : {};
      if (options.parse === undefined) options.parse = true;
      var collection = this;
      var success = options.success;
      options.success = function(resp, status, xhr) {
        collection[options.add ? 'add' : 'reset'](collection.parse(resp, xhr), options);
        if (success) success(collection, resp);
      };
      options.error = Backbone.wrapError(options.error, collection, options);
      return (this.sync || Backbone.sync).call(this, 'read', this, options);
    },

    // Create a new instance of a model in this collection. Add the model to the
    // collection immediately, unless `wait: true` is passed, in which case we
    // wait for the server to agree.
    create: function(model, options) {
      var coll = this;
      options = options ? _.clone(options) : {};
      model = this._prepareModel(model, options);
      if (!model) return false;
      if (!options.wait) coll.add(model, options);
      var success = options.success;
      options.success = function(nextModel, resp, xhr) {
        if (options.wait) coll.add(nextModel, options);
        if (success) {
          success(nextModel, resp);
        } else {
          nextModel.trigger('sync', model, resp, options);
        }
      };
      model.save(null, options);
      return model;
    },

    // **parse** converts a response into a list of models to be added to the
    // collection. The default implementation is just to pass it through.
    parse: function(resp, xhr) {
      return resp;
    },

    // Proxy to _'s chain. Can't be proxied the same way the rest of the
    // underscore methods are proxied because it relies on the underscore
    // constructor.
    chain: function () {
      return _(this.models).chain();
    },

    // Reset all internal state. Called when the collection is reset.
    _reset: function(options) {
      this.length = 0;
      this.models = [];
      this._byId  = {};
      this._byCid = {};
    },

    // Prepare a model or hash of attributes to be added to this collection.
    _prepareModel: function(model, options) {
      options || (options = {});
      if (!(model instanceof Model)) {
        var attrs = model;
        options.collection = this;
        model = new this.model(attrs, options);
        if (!model._validate(model.attributes, options)) model = false;
      } else if (!model.collection) {
        model.collection = this;
      }
      return model;
    },

    // Internal method to remove a model's ties to a collection.
    _removeReference: function(model) {
      if (this == model.collection) {
        delete model.collection;
      }
      model.off('all', this._onModelEvent, this);
    },

    // Internal method called every time a model in the set fires an event.
    // Sets need to update their indexes when models change ids. All other
    // events simply proxy through. "add" and "remove" events that originate
    // in other collections are ignored.
    _onModelEvent: function(event, model, collection, options) {
      if ((event == 'add' || event == 'remove') && collection != this) return;
      if (event == 'destroy') {
        this.remove(model, options);
      }
      if (model && event === 'change:' + model.idAttribute) {
        delete this._byId[model.previous(model.idAttribute)];
        this._byId[model.id] = model;
      }
      this.trigger.apply(this, arguments);
    }

  });

  // Underscore methods that we want to implement on the Collection.
  var methods = ['forEach', 'each', 'map', 'reduce', 'reduceRight', 'find',
    'detect', 'filter', 'select', 'reject', 'every', 'all', 'some', 'any',
    'include', 'contains', 'invoke', 'max', 'min', 'sortBy', 'sortedIndex',
    'toArray', 'size', 'first', 'initial', 'rest', 'last', 'without', 'indexOf',
    'shuffle', 'lastIndexOf', 'isEmpty', 'groupBy'];

  // Mix in each Underscore method as a proxy to `Collection#models`.
  _.each(methods, function(method) {
    Collection.prototype[method] = function() {
      return _[method].apply(_, [this.models].concat(_.toArray(arguments)));
    };
  });

  // Backbone.Router
  // -------------------

  // Routers map faux-URLs to actions, and fire events when routes are
  // matched. Creating a new one sets its `routes` hash, if not set statically.
  var Router = Backbone.Router = function(options) {
    options || (options = {});
    if (options.routes) this.routes = options.routes;
    this._bindRoutes();
    this.initialize.apply(this, arguments);
  };

  // Cached regular expressions for matching named param parts and splatted
  // parts of route strings.
  var namedParam    = /:\w+/g;
  var splatParam    = /\*\w+/g;
  var escapeRegExp  = /[-[\]{}()+?.,\\^$|#\s]/g;

  // Set up all inheritable **Backbone.Router** properties and methods.
  _.extend(Router.prototype, Events, {

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // Manually bind a single named route to a callback. For example:
    //
    //     this.route('search/:query/p:num', 'search', function(query, num) {
    //       ...
    //     });
    //
    route: function(route, name, callback) {
      Backbone.history || (Backbone.history = new History);
      if (!_.isRegExp(route)) route = this._routeToRegExp(route);
      if (!callback) callback = this[name];
      Backbone.history.route(route, _.bind(function(fragment) {
        var args = this._extractParameters(route, fragment);
        callback && callback.apply(this, args);
        this.trigger.apply(this, ['route:' + name].concat(args));
        Backbone.history.trigger('route', this, name, args);
      }, this));
      return this;
    },

    // Simple proxy to `Backbone.history` to save a fragment into the history.
    navigate: function(fragment, options) {
      Backbone.history.navigate(fragment, options);
    },

    // Bind all defined routes to `Backbone.history`. We have to reverse the
    // order of the routes here to support behavior where the most general
    // routes can be defined at the bottom of the route map.
    _bindRoutes: function() {
      if (!this.routes) return;
      var routes = [];
      for (var route in this.routes) {
        routes.unshift([route, this.routes[route]]);
      }
      for (var i = 0, l = routes.length; i < l; i++) {
        this.route(routes[i][0], routes[i][1], this[routes[i][1]]);
      }
    },

    // Convert a route string into a regular expression, suitable for matching
    // against the current location hash.
    _routeToRegExp: function(route) {
      route = route.replace(escapeRegExp, '\\$&')
                   .replace(namedParam, '([^\/]+)')
                   .replace(splatParam, '(.*?)');
      return new RegExp('^' + route + '$');
    },

    // Given a route, and a URL fragment that it matches, return the array of
    // extracted parameters.
    _extractParameters: function(route, fragment) {
      return route.exec(fragment).slice(1);
    }

  });

  // Backbone.History
  // ----------------

  // Handles cross-browser history management, based on URL fragments. If the
  // browser does not support `onhashchange`, falls back to polling.
  var History = Backbone.History = function() {
    this.handlers = [];
    _.bindAll(this, 'checkUrl');
  };

  // Cached regex for cleaning leading hashes and slashes .
  var routeStripper = /^[#\/]/;

  // Cached regex for detecting MSIE.
  var isExplorer = /msie [\w.]+/;

  // Has the history handling already been started?
  History.started = false;

  // Set up all inheritable **Backbone.History** properties and methods.
  _.extend(History.prototype, Events, {

    // The default interval to poll for hash changes, if necessary, is
    // twenty times a second.
    interval: 50,

    // Gets the true hash value. Cannot use location.hash directly due to bug
    // in Firefox where location.hash will always be decoded.
    getHash: function(windowOverride) {
      var loc = windowOverride ? windowOverride.location : window.location;
      var match = loc.href.match(/#(.*)$/);
      return match ? match[1] : '';
    },

    // Get the cross-browser normalized URL fragment, either from the URL,
    // the hash, or the override.
    getFragment: function(fragment, forcePushState) {
      if (fragment == null) {
        if (this._hasPushState || forcePushState) {
          fragment = window.location.pathname;
          var search = window.location.search;
          if (search) fragment += search;
        } else {
          fragment = this.getHash();
        }
      }
      if (!fragment.indexOf(this.options.root)) fragment = fragment.substr(this.options.root.length);
      return fragment.replace(routeStripper, '');
    },

    // Start the hash change handling, returning `true` if the current URL matches
    // an existing route, and `false` otherwise.
    start: function(options) {
      if (History.started) throw new Error("Backbone.history has already been started");
      History.started = true;

      // Figure out the initial configuration. Do we need an iframe?
      // Is pushState desired ... is it available?
      this.options          = _.extend({}, {root: '/'}, this.options, options);
      this._wantsHashChange = this.options.hashChange !== false;
      this._wantsPushState  = !!this.options.pushState;
      this._hasPushState    = !!(this.options.pushState && window.history && window.history.pushState);
      var fragment          = this.getFragment();
      var docMode           = document.documentMode;
      var oldIE             = (isExplorer.exec(navigator.userAgent.toLowerCase()) && (!docMode || docMode <= 7));

      if (oldIE) {
        this.iframe = $('<iframe src="javascript:0" tabindex="-1" />').hide().appendTo('body')[0].contentWindow;
        this.navigate(fragment);
      }

      // Depending on whether we're using pushState or hashes, and whether
      // 'onhashchange' is supported, determine how we check the URL state.
      if (this._hasPushState) {
        $(window).bind('popstate', this.checkUrl);
      } else if (this._wantsHashChange && ('onhashchange' in window) && !oldIE) {
        $(window).bind('hashchange', this.checkUrl);
      } else if (this._wantsHashChange) {
        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);
      }

      // Determine if we need to change the base url, for a pushState link
      // opened by a non-pushState browser.
      this.fragment = fragment;
      var loc = window.location;
      var atRoot  = loc.pathname == this.options.root;

      // If we've started off with a route from a `pushState`-enabled browser,
      // but we're currently in a browser that doesn't support it...
      if (this._wantsHashChange && this._wantsPushState && !this._hasPushState && !atRoot) {
        this.fragment = this.getFragment(null, true);
        window.location.replace(this.options.root + '#' + this.fragment);
        // Return immediately as browser will do redirect to new url
        return true;

      // Or if we've started out with a hash-based route, but we're currently
      // in a browser where it could be `pushState`-based instead...
      } else if (this._wantsPushState && this._hasPushState && atRoot && loc.hash) {
        this.fragment = this.getHash().replace(routeStripper, '');
        window.history.replaceState({}, document.title, loc.protocol + '//' + loc.host + this.options.root + this.fragment);
      }

      if (!this.options.silent) {
        return this.loadUrl();
      }
    },

    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,
    // but possibly useful for unit testing Routers.
    stop: function() {
      $(window).unbind('popstate', this.checkUrl).unbind('hashchange', this.checkUrl);
      clearInterval(this._checkUrlInterval);
      History.started = false;
    },

    // Add a route to be tested when the fragment changes. Routes added later
    // may override previous routes.
    route: function(route, callback) {
      this.handlers.unshift({route: route, callback: callback});
    },

    // Checks the current URL to see if it has changed, and if it has,
    // calls `loadUrl`, normalizing across the hidden iframe.
    checkUrl: function(e) {
      var current = this.getFragment();
      if (current == this.fragment && this.iframe) current = this.getFragment(this.getHash(this.iframe));
      if (current == this.fragment) return false;
      if (this.iframe) this.navigate(current);
      this.loadUrl() || this.loadUrl(this.getHash());
    },

    // Attempt to load the current URL fragment. If a route succeeds with a
    // match, returns `true`. If no defined routes matches the fragment,
    // returns `false`.
    loadUrl: function(fragmentOverride) {
      var fragment = this.fragment = this.getFragment(fragmentOverride);
      var matched = _.any(this.handlers, function(handler) {
        if (handler.route.test(fragment)) {
          handler.callback(fragment);
          return true;
        }
      });
      return matched;
    },

    // Save a fragment into the hash history, or replace the URL state if the
    // 'replace' option is passed. You are responsible for properly URL-encoding
    // the fragment in advance.
    //
    // The options object can contain `trigger: true` if you wish to have the
    // route callback be fired (not usually desirable), or `replace: true`, if
    // you wish to modify the current URL without adding an entry to the history.
    navigate: function(fragment, options) {
      if (!History.started) return false;
      if (!options || options === true) options = {trigger: options};
      var frag = (fragment || '').replace(routeStripper, '');
      if (this.fragment == frag) return;

      // If pushState is available, we use it to set the fragment as a real URL.
      if (this._hasPushState) {
        if (frag.indexOf(this.options.root) != 0) frag = this.options.root + frag;
        this.fragment = frag;
        window.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, frag);

      // If hash changes haven't been explicitly disabled, update the hash
      // fragment to store history.
      } else if (this._wantsHashChange) {
        this.fragment = frag;
        this._updateHash(window.location, frag, options.replace);
        if (this.iframe && (frag != this.getFragment(this.getHash(this.iframe)))) {
          // Opening and closing the iframe tricks IE7 and earlier to push a history entry on hash-tag change.
          // When replace is true, we don't want this.
          if(!options.replace) this.iframe.document.open().close();
          this._updateHash(this.iframe.location, frag, options.replace);
        }

      // If you've told us that you explicitly don't want fallback hashchange-
      // based history, then `navigate` becomes a page refresh.
      } else {
        window.location.assign(this.options.root + fragment);
      }
      if (options.trigger) this.loadUrl(fragment);
    },

    // Update the hash location, either replacing the current entry, or adding
    // a new one to the browser history.
    _updateHash: function(location, fragment, replace) {
      if (replace) {
        location.replace(location.toString().replace(/(javascript:|#).*$/, '') + '#' + fragment);
      } else {
        location.hash = fragment;
      }
    }
  });

  // Backbone.View
  // -------------

  // Creating a Backbone.View creates its initial element outside of the DOM,
  // if an existing element is not provided...
  var View = Backbone.View = function(options) {
    this.cid = _.uniqueId('view');
    this._configure(options || {});
    this._ensureElement();
    this.initialize.apply(this, arguments);
    this.delegateEvents();
  };

  // Cached regex to split keys for `delegate`.
  var delegateEventSplitter = /^(\S+)\s*(.*)$/;

  // List of view options to be merged as properties.
  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName'];

  // Set up all inheritable **Backbone.View** properties and methods.
  _.extend(View.prototype, Events, {

    // The default `tagName` of a View's element is `"div"`.
    tagName: 'div',

    // jQuery delegate for element lookup, scoped to DOM elements within the
    // current view. This should be prefered to global lookups where possible.
    $: function(selector) {
      return this.$el.find(selector);
    },

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // **render** is the core function that your view should override, in order
    // to populate its element (`this.el`), with the appropriate HTML. The
    // convention is for **render** to always return `this`.
    render: function() {
      return this;
    },

    // Remove this view from the DOM. Note that the view isn't present in the
    // DOM by default, so calling this method may be a no-op.
    remove: function() {
      this.$el.remove();
      return this;
    },

    // For small amounts of DOM Elements, where a full-blown template isn't
    // needed, use **make** to manufacture elements, one at a time.
    //
    //     var el = this.make('li', {'class': 'row'}, this.model.escape('title'));
    //
    make: function(tagName, attributes, content) {
      var el = document.createElement(tagName);
      if (attributes) $(el).attr(attributes);
      if (content) $(el).html(content);
      return el;
    },

    // Change the view's element (`this.el` property), including event
    // re-delegation.
    setElement: function(element, delegate) {
      if (this.$el) this.undelegateEvents();
      this.$el = (element instanceof $) ? element : $(element);
      this.el = this.$el[0];
      if (delegate !== false) this.delegateEvents();
      return this;
    },

    // Set callbacks, where `this.events` is a hash of
    //
    // *{"event selector": "callback"}*
    //
    //     {
    //       'mousedown .title':  'edit',
    //       'click .button':     'save'
    //       'click .open':       function(e) { ... }
    //     }
    //
    // pairs. Callbacks will be bound to the view, with `this` set properly.
    // Uses event delegation for efficiency.
    // Omitting the selector binds the event to `this.el`.
    // This only works for delegate-able events: not `focus`, `blur`, and
    // not `change`, `submit`, and `reset` in Internet Explorer.
    delegateEvents: function(events) {
      if (!(events || (events = getValue(this, 'events')))) return;
      this.undelegateEvents();
      for (var key in events) {
        var method = events[key];
        if (!_.isFunction(method)) method = this[events[key]];
        if (!method) throw new Error('Method "' + events[key] + '" does not exist');
        var match = key.match(delegateEventSplitter);
        var eventName = match[1], selector = match[2];
        method = _.bind(method, this);
        eventName += '.delegateEvents' + this.cid;
        if (selector === '') {
          this.$el.bind(eventName, method);
        } else {
          this.$el.delegate(selector, eventName, method);
        }
      }
    },

    // Clears all callbacks previously bound to the view with `delegateEvents`.
    // You usually don't need to use this, but may wish to if you have multiple
    // Backbone views attached to the same DOM element.
    undelegateEvents: function() {
      this.$el.unbind('.delegateEvents' + this.cid);
    },

    // Performs the initial configuration of a View with a set of options.
    // Keys with special meaning *(model, collection, id, className)*, are
    // attached directly to the view.
    _configure: function(options) {
      if (this.options) options = _.extend({}, this.options, options);
      for (var i = 0, l = viewOptions.length; i < l; i++) {
        var attr = viewOptions[i];
        if (options[attr]) this[attr] = options[attr];
      }
      this.options = options;
    },

    // Ensure that the View has a DOM element to render into.
    // If `this.el` is a string, pass it through `$()`, take the first
    // matching element, and re-assign it to `el`. Otherwise, create
    // an element from the `id`, `className` and `tagName` properties.
    _ensureElement: function() {
      if (!this.el) {
        var attrs = getValue(this, 'attributes') || {};
        if (this.id) attrs.id = this.id;
        if (this.className) attrs['class'] = this.className;
        this.setElement(this.make(this.tagName, attrs), false);
      } else {
        this.setElement(this.el, false);
      }
    }

  });

  // The self-propagating extend function that Backbone classes use.
  var extend = function (protoProps, classProps) {
    var child = inherits(this, protoProps, classProps);
    child.extend = this.extend;
    return child;
  };

  // Set up inheritance for the model, collection, and view.
  Model.extend = Collection.extend = Router.extend = View.extend = extend;

  // Backbone.sync
  // -------------

  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.
  var methodMap = {
    'create': 'POST',
    'update': 'PUT',
    'delete': 'DELETE',
    'read':   'GET'
  };

  // Override this function to change the manner in which Backbone persists
  // models to the server. You will be passed the type of request, and the
  // model in question. By default, makes a RESTful Ajax request
  // to the model's `url()`. Some possible customizations could be:
  //
  // * Use `setTimeout` to batch rapid-fire updates into a single request.
  // * Send up the models as XML instead of JSON.
  // * Persist models via WebSockets instead of Ajax.
  //
  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests
  // as `POST`, with a `_method` parameter containing the true HTTP method,
  // as well as all requests with the body as `application/x-www-form-urlencoded`
  // instead of `application/json` with the model in a param named `model`.
  // Useful when interfacing with server-side languages like **PHP** that make
  // it difficult to read the body of `PUT` requests.
  Backbone.sync = function(method, model, options) {
    var type = methodMap[method];

    // Default options, unless specified.
    options || (options = {});

    // Default JSON-request options.
    var params = {type: type, dataType: 'json'};
    // Extending Backbone sync to provide Authorization on each AJAX call
	params.headers = { "X-Auth-Token": API.getAuthToken() }; 

    // Ensure that we have a URL.
    if (!options.url) {
      params.url = getValue(model, 'url') || urlError();
    }

    // Ensure that we have the appropriate request data.
    if (!options.data && model && (method == 'create' || method == 'update')) {
      params.contentType = 'application/json';
      params.data = JSON.stringify(model.toJSON());
    }

    // For older servers, emulate JSON by encoding the request into an HTML-form.
    if (Backbone.emulateJSON) {
      params.contentType = 'application/x-www-form-urlencoded';
      params.data = params.data ? {model: params.data} : {};
    }

    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`
    // And an `X-HTTP-Method-Override` header.
    if (Backbone.emulateHTTP) {
      if (type === 'PUT' || type === 'DELETE') {
        if (Backbone.emulateJSON) params.data._method = type;
        params.type = 'POST';
        params.beforeSend = function(xhr) {
          xhr.setRequestHeader('X-HTTP-Method-Override', type);
        };
      }
    }

    // Don't process data on a non-GET request.
    if (params.type !== 'GET' && !Backbone.emulateJSON) {
      params.processData = false;
    }
    // Make the request, allowing the user to override any Ajax options.
    return $.ajax(_.extend(params, options));
  };

  // Wrap an optional error callback with a fallback error event.
  Backbone.wrapError = function(onError, originalModel, options) {
    return function(model, resp) {
      resp = model === originalModel ? resp : model;
      if (onError) {
        onError(originalModel, resp, options);
      } else {
        originalModel.trigger('error', originalModel, resp, options);
      }
    };
  };

  // Helpers
  // -------

  // Shared empty constructor function to aid in prototype-chain creation.
  var ctor = function(){};

  // Helper function to correctly set up the prototype chain, for subclasses.
  // Similar to `goog.inherits`, but uses a hash of prototype properties and
  // class properties to be extended.
  var inherits = function(parent, protoProps, staticProps) {
    var child;

    // The constructor function for the new subclass is either defined by you
    // (the "constructor" property in your `extend` definition), or defaulted
    // by us to simply call the parent's constructor.
    if (protoProps && protoProps.hasOwnProperty('constructor')) {
      child = protoProps.constructor;
    } else {
      child = function(){ parent.apply(this, arguments); };
    }

    // Inherit class (static) properties from parent.
    _.extend(child, parent);

    // Set the prototype chain to inherit from `parent`, without calling
    // `parent`'s constructor function.
    ctor.prototype = parent.prototype;
    child.prototype = new ctor();

    // Add prototype properties (instance properties) to the subclass,
    // if supplied.
    if (protoProps) _.extend(child.prototype, protoProps);

    // Add static properties to the constructor function, if supplied.
    if (staticProps) _.extend(child, staticProps);

    // Correctly set child's `prototype.constructor`.
    child.prototype.constructor = child;

    // Set a convenience property in case the parent's prototype is needed later.
    child.__super__ = parent.prototype;

    return child;
  };

  // Helper function to get a value from a Backbone object as a property
  // or as a function.
  var getValue = function(object, prop) {
    if (!(object && object[prop])) return null;
    return _.isFunction(object[prop]) ? object[prop]() : object[prop];
  };

  // Throw an error when a URL is needed, and none is supplied.
  var urlError = function() {
    throw new Error('A "url" property or function must be specified');
  };

}).call(this);
define("backbone", ["underscore","jquery"], (function (global) {
    return function () {
        return global.Backbone;
    }
}(this)));

/*

interface Promise {
	void resolve(Object value);
	void reject(Error err);

	static Future normalize(Promise|Object value); alias when
	static Future resolved(Object value);
	static Future rejected(Error err);

	static Future all(Array<Future|Promise> promises); alias parallel
	static Future all(Future|Promise var_args...); alias parallel
*	static Future wrap(fn, scope, args);
}

interface Future {
	Object value;
	Error error;

	bool isResolved();
	bool isRejected();
	bool isCompleted();

	Future then(Function resolved, Function rejected);
	Future fin(Function finally);

	Future timeout(Number ms);
	Future spread();

	Future prop(String property);
	Future put(String property, Object value);
	Future method(String name, Object params...);
	Future invoke(String name, Array params);
	Future execute(Object params...);
}

*/

/*global define, module, window */

;(function(factory) {

	if (typeof define !== 'undefined' && define.amd)
		define('promise',[],factory);
	else if (typeof module !== 'undefined' && module.exports)
		module.exports = factory();
	else
		window.Promise = factory();

})(function() {
	

	var slice = Array.prototype.slice;

	function returner(value) {
		return function() {
			return value;
		};
	}
	function funct(name) {
		var args = slice.call(arguments, 1);
		return function(item) {
			return item[name].apply(item, args.concat(arguments));
		};
	}
	function prop(name) {
		return function(item) {
			return item[name];
		};
	}

	function Promise() {
		Object.defineProperty(this, 'future', { get: returner(new Future()) });
	}

	Promise.prototype = {
		constructor: Promise,

		resolve: function(value) {
			if (this.future.state !== 'unfulfilled') return;

			if (value instanceof Future)
				return value.then(this.resolve.bind(this), this.reject.bind(this));

			this.future.value = value;
			this.future.state = 'fulfilled';
			this.future._cbk.forEach(function(callback) {
				callback();
			});
		},

		reject: function(error) {
			if (this.future.state !== 'unfulfilled') return;

			this.future.error = error;
			this.future.state = 'failed';
			this.future._cbk.forEach(function(callback) {
				callback();
			});
		}
	};

	Promise.resolved = function(value) {
		var prom = new Promise();
		prom.resolve(value);
		return prom.future;
	};

	Promise.rejected = function(error) {
		var prom = new Promise();
		prom.reject(error);
		return prom.future;
	};

	Promise.normalize = Promise.when = function(value) {
		if (value instanceof Promise)
			value = value.future;

		return value instanceof Future ? value : Promise.resolved(value);
	};

	Promise.all = Promise.parallel = function(futures) {
		if (!(futures instanceof Array))
			futures = slice.call(arguments);

		if (!futures.length)
			return Promise.resolved([]);

		var promise = new Promise();
		futures = futures.map(Promise.normalize);
		futures.forEach(funct('then', function() {
			if (futures.every(funct('isResolved')))
				promise.resolve(futures.map(prop('value')));
		}, promise.reject.bind(promise)));

		return promise.future;
	};


	function Future() {
		this.state = 'unfulfilled';
		Object.defineProperty(this, '_cbk', { get: returner([]) });
	}

	function invokeCallback(callback, value, promise, promiseMethod) {
		if (typeof callback !== 'function')
			return promise[promiseMethod](value);

		if (Promise.debug)
			return promise.resolve(callback(value));

		try {
			promise.resolve(callback(value));
		} catch(err) {
			promise.reject(err);
		}
	}

	Future.prototype = {
		constructor: Future,

		isResolved: function() {
			return this.state === 'fulfilled';
		},

		isRejected: function() {
			return this.state === 'failed';
		},

		isCompleted: function() {
			return this.state !== 'unfulfilled';
		},

		then: function(resolved, rejected) {
			var self = this;
			var promise = new Promise();

			function wrapper() {
				if (self.state === 'fulfilled')
					invokeCallback(resolved, self.value, promise, 'resolve');
				else
					invokeCallback(rejected, self.error, promise, 'reject');
			}

			if (this.state === 'unfulfilled')
				this._cbk.push(wrapper);
			else
				setTimeout(wrapper, 0);

			return promise.future;
		},

		fin: function(handler) {
			return this.then(function(value) {
				return Promise.normalize(handler()).then(returner(value));
			}, function(error) {
				return Promise.normalize(handler()).then(function() { return Promise.rejected(error); });
			});
		},

		spread: function(resolved, rejected) {
			if (typeof resolved !== 'function')
				return this.then(null, rejected);

			return this.then(function(array) {
				return resolved.apply(null, array);
			}, rejected);
		},

		timeout: function(milliseconds) {
			var promise = new Promise();
			setTimeout(promise.reject.bind(promise, new Error('timeout')), milliseconds);
			return promise.future;
		},

		flat: function() {
			return this.then(function(value) { return [].concat.apply([], value); });
		},

		prop: function(prop) {
			return this.then(function(value) { return value[prop]; });
		},

		set: function(prop, value) {
			return this.then(function(obj) { obj[prop] = value; return obj; });
		},

		method: function(method/*, var_args*/) {
			return this.invoke(method, slice.call(arguments, 1));
		},

		invoke: function(method, args) {
			return this.then(function(value) { return value[method].apply(value, args); });
		},

		execute: function(/* var_args */) {
			var args = slice.call(arguments);
			return this.then(function(value) { return value.apply(null, args); });
		}
	};

	return Promise;

});

/**
 * @license RequireJS text 2.0.3 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/requirejs/text for details
 */
/*jslint regexp: true */
/*global require: false, XMLHttpRequest: false, ActiveXObject: false,
  define: false, window: false, process: false, Packages: false,
  java: false, location: false */

define('text',['module'], function (module) {
    

    var text, fs,
        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],
        xmlRegExp = /^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,
        bodyRegExp = /<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,
        hasLocation = typeof location !== 'undefined' && location.href,
        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\:/, ''),
        defaultHostName = hasLocation && location.hostname,
        defaultPort = hasLocation && (location.port || undefined),
        buildMap = [],
        masterConfig = (module.config && module.config()) || {};

    text = {
        version: '2.0.3',

        strip: function (content) {
            //Strips <?xml ...?> declarations so that external SVG and XML
            //documents can be added to a document without worry. Also, if the string
            //is an HTML document, only the part inside the body tag is returned.
            if (content) {
                content = content.replace(xmlRegExp, "");
                var matches = content.match(bodyRegExp);
                if (matches) {
                    content = matches[1];
                }
            } else {
                content = "";
            }
            return content;
        },

        jsEscape: function (content) {
            return content.replace(/(['\\])/g, '\\$1')
                .replace(/[\f]/g, "\\f")
                .replace(/[\b]/g, "\\b")
                .replace(/[\n]/g, "\\n")
                .replace(/[\t]/g, "\\t")
                .replace(/[\r]/g, "\\r")
                .replace(/[\u2028]/g, "\\u2028")
                .replace(/[\u2029]/g, "\\u2029");
        },

        createXhr: masterConfig.createXhr || function () {
            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.
            var xhr, i, progId;
            if (typeof XMLHttpRequest !== "undefined") {
                return new XMLHttpRequest();
            } else if (typeof ActiveXObject !== "undefined") {
                for (i = 0; i < 3; i += 1) {
                    progId = progIds[i];
                    try {
                        xhr = new ActiveXObject(progId);
                    } catch (e) {}

                    if (xhr) {
                        progIds = [progId];  // so faster next time
                        break;
                    }
                }
            }

            return xhr;
        },

        /**
         * Parses a resource name into its component parts. Resource names
         * look like: module/name.ext!strip, where the !strip part is
         * optional.
         * @param {String} name the resource name
         * @returns {Object} with properties "moduleName", "ext" and "strip"
         * where strip is a boolean.
         */
        parseName: function (name) {
            var strip = false, index = name.indexOf("."),
                modName = name.substring(0, index),
                ext = name.substring(index + 1, name.length);

            index = ext.indexOf("!");
            if (index !== -1) {
                //Pull off the strip arg.
                strip = ext.substring(index + 1, ext.length);
                strip = strip === "strip";
                ext = ext.substring(0, index);
            }

            return {
                moduleName: modName,
                ext: ext,
                strip: strip
            };
        },

        xdRegExp: /^((\w+)\:)?\/\/([^\/\\]+)/,

        /**
         * Is an URL on another domain. Only works for browser use, returns
         * false in non-browser environments. Only used to know if an
         * optimized .js version of a text resource should be loaded
         * instead.
         * @param {String} url
         * @returns Boolean
         */
        useXhr: function (url, protocol, hostname, port) {
            var uProtocol, uHostName, uPort,
                match = text.xdRegExp.exec(url);
            if (!match) {
                return true;
            }
            uProtocol = match[2];
            uHostName = match[3];

            uHostName = uHostName.split(':');
            uPort = uHostName[1];
            uHostName = uHostName[0];

            return (!uProtocol || uProtocol === protocol) &&
                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&
                   ((!uPort && !uHostName) || uPort === port);
        },

        finishLoad: function (name, strip, content, onLoad) {
            content = strip ? text.strip(content) : content;
            if (masterConfig.isBuild) {
                buildMap[name] = content;
            }
            onLoad(content);
        },

        load: function (name, req, onLoad, config) {
            //Name has format: some.module.filext!strip
            //The strip part is optional.
            //if strip is present, then that means only get the string contents
            //inside a body tag in an HTML string. For XML/SVG content it means
            //removing the <?xml ...?> declarations so the content can be inserted
            //into the current doc without problems.

            // Do not bother with the work if a build and text will
            // not be inlined.
            if (config.isBuild && !config.inlineText) {
                onLoad();
                return;
            }

            masterConfig.isBuild = config.isBuild;

            var parsed = text.parseName(name),
                nonStripName = parsed.moduleName + '.' + parsed.ext,
                url = req.toUrl(nonStripName),
                useXhr = (masterConfig.useXhr) ||
                         text.useXhr;

            //Load the text. Use XHR if possible and in a browser.
            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {
                text.get(url, function (content) {
                    text.finishLoad(name, parsed.strip, content, onLoad);
                }, function (err) {
                    if (onLoad.error) {
                        onLoad.error(err);
                    }
                });
            } else {
                //Need to fetch the resource across domains. Assume
                //the resource has been optimized into a JS module. Fetch
                //by the module name + extension, but do not include the
                //!strip part to avoid file system issues.
                req([nonStripName], function (content) {
                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,
                                    parsed.strip, content, onLoad);
                });
            }
        },

        write: function (pluginName, moduleName, write, config) {
            if (buildMap.hasOwnProperty(moduleName)) {
                var content = text.jsEscape(buildMap[moduleName]);
                write.asModule(pluginName + "!" + moduleName,
                               "define(function () { return '" +
                                   content +
                               "';});\n");
            }
        },

        writeFile: function (pluginName, moduleName, req, write, config) {
            var parsed = text.parseName(moduleName),
                nonStripName = parsed.moduleName + '.' + parsed.ext,
                //Use a '.js' file name so that it indicates it is a
                //script that can be loaded across domains.
                fileName = req.toUrl(parsed.moduleName + '.' +
                                     parsed.ext) + '.js';

            //Leverage own load() method to load plugin value, but only
            //write out values that do not have the strip argument,
            //to avoid any potential issues with ! in file names.
            text.load(nonStripName, req, function (value) {
                //Use own write() method to construct full module value.
                //But need to create shell that translates writeFile's
                //write() to the right interface.
                var textWrite = function (contents) {
                    return write(fileName, contents);
                };
                textWrite.asModule = function (moduleName, contents) {
                    return write.asModule(moduleName, fileName, contents);
                };

                text.write(pluginName, nonStripName, textWrite, config);
            }, config);
        }
    };

    if (masterConfig.env === 'node' || (!masterConfig.env &&
            typeof process !== "undefined" &&
            process.versions &&
            !!process.versions.node)) {
        //Using special require.nodeRequire, something added by r.js.
        fs = require.nodeRequire('fs');

        text.get = function (url, callback) {
            var file = fs.readFileSync(url, 'utf8');
            //Remove BOM (Byte Mark Order) from utf8 files if it is there.
            if (file.indexOf('\uFEFF') === 0) {
                file = file.substring(1);
            }
            callback(file);
        };
    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&
            text.createXhr())) {
        text.get = function (url, callback, errback) {
            var xhr = text.createXhr();
            xhr.open('GET', url, true);

            //Allow overrides specified in config
            if (masterConfig.onXhr) {
                masterConfig.onXhr(xhr, url);
            }

            xhr.onreadystatechange = function (evt) {
                var status, err;
                //Do not explicitly handle errors, those should be
                //visible via console output in the browser.
                if (xhr.readyState === 4) {
                    status = xhr.status;
                    if (status > 399 && status < 600) {
                        //An http 4xx or 5xx error. Signal an error.
                        err = new Error(url + ' HTTP status: ' + status);
                        err.xhr = xhr;
                        errback(err);
                    } else {
                        callback(xhr.responseText);
                    }
                }
            };
            xhr.send(null);
        };
    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&
            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {
        //Why Java, why is this so awkward?
        text.get = function (url, callback) {
            var stringBuffer, line,
                encoding = "utf-8",
                file = new java.io.File(url),
                lineSeparator = java.lang.System.getProperty("line.separator"),
                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),
                content = '';
            try {
                stringBuffer = new java.lang.StringBuffer();
                line = input.readLine();

                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324
                // http://www.unicode.org/faq/utf_bom.html

                // Note that when we use utf-8, the BOM should appear as "EF BB BF", but it doesn't due to this bug in the JDK:
                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058
                if (line && line.length() && line.charAt(0) === 0xfeff) {
                    // Eat the BOM, since we've already found the encoding on this file,
                    // and we plan to concatenating this buffer with others; the BOM should
                    // only appear at the top of a file.
                    line = line.substring(1);
                }

                stringBuffer.append(line);

                while ((line = input.readLine()) !== null) {
                    stringBuffer.append(lineSeparator);
                    stringBuffer.append(line);
                }
                //Make sure we return a JavaScript string and not a Java string.
                content = String(stringBuffer.toString()); //String
            } finally {
                input.close();
            }
            callback(content);
        };
    }

    return text;
});

// lib/handlebars/base.js

/*jshint eqnull:true*/
var Handlebars = {};
if (typeof define !== 'undefined' && define.amd)
  define('handlebars',[],function() { return Handlebars });

(function(Handlebars) {

Handlebars.VERSION = "1.0.rc.1";

Handlebars.helpers  = {};
Handlebars.partials = {};

Handlebars.registerHelper = function(name, fn, inverse) {
  if(inverse) { fn.not = inverse; }
  this.helpers[name] = fn;
};

Handlebars.registerPartial = function(name, str) {
  this.partials[name] = str;
};

Handlebars.registerHelper('helperMissing', function(arg) {
  if(arguments.length === 2) {
    return undefined;
  } else {
    throw new Error("Could not find property '" + arg + "'");
  }
});

var toString = Object.prototype.toString, functionType = "[object Function]";

Handlebars.registerHelper('blockHelperMissing', function(context, options) {
  var inverse = options.inverse || function() {}, fn = options.fn;


  var ret = "";
  var type = toString.call(context);

  if(type === functionType) { context = context.call(this); }

  if(context === true) {
    return fn(this);
  } else if(context === false || context == null) {
    return inverse(this);
  } else if(type === "[object Array]") {
    if(context.length > 0) {
      return Handlebars.helpers.each(context, options);
    } else {
      return inverse(this);
    }
  } else {
    return fn(context);
  }
});

Handlebars.K = function() {};

Handlebars.createFrame = Object.create || function(object) {
  Handlebars.K.prototype = object;
  var obj = new Handlebars.K();
  Handlebars.K.prototype = null;
  return obj;
};

Handlebars.registerHelper('each', function(context, options) {
  var fn = options.fn, inverse = options.inverse;
  var ret = "", data;

  if (options.data) {
    data = Handlebars.createFrame(options.data);
  }

  if(context && context.length > 0) {
    for(var i=0, j=context.length; i<j; i++) {
      if (data) { data.index = i; }
      ret = ret + fn(context[i], { data: data });
    }
  } else {
    ret = inverse(this);
  }
  return ret;
});

Handlebars.registerHelper('if', function(context, options) {
  var type = toString.call(context);
  if(type === functionType) { context = context.call(this); }

  if(!context || Handlebars.Utils.isEmpty(context)) {
    return options.inverse(this);
  } else {
    return options.fn(this);
  }
});

Handlebars.registerHelper('unless', function(context, options) {
  var fn = options.fn, inverse = options.inverse;
  options.fn = inverse;
  options.inverse = fn;

  return Handlebars.helpers['if'].call(this, context, options);
});

Handlebars.registerHelper('with', function(context, options) {
  return options.fn(context);
});

Handlebars.registerHelper('log', function(context) {
  Handlebars.log(context);
});

}(Handlebars));
;
// lib/handlebars/compiler/parser.js
/* Jison generated parser */
var handlebars = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"root":3,"program":4,"EOF":5,"statements":6,"simpleInverse":7,"statement":8,"openInverse":9,"closeBlock":10,"openBlock":11,"mustache":12,"partial":13,"CONTENT":14,"COMMENT":15,"OPEN_BLOCK":16,"inMustache":17,"CLOSE":18,"OPEN_INVERSE":19,"OPEN_ENDBLOCK":20,"path":21,"OPEN":22,"OPEN_UNESCAPED":23,"OPEN_PARTIAL":24,"params":25,"hash":26,"DATA":27,"param":28,"STRING":29,"INTEGER":30,"BOOLEAN":31,"hashSegments":32,"hashSegment":33,"ID":34,"EQUALS":35,"pathSegments":36,"SEP":37,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",14:"CONTENT",15:"COMMENT",16:"OPEN_BLOCK",18:"CLOSE",19:"OPEN_INVERSE",20:"OPEN_ENDBLOCK",22:"OPEN",23:"OPEN_UNESCAPED",24:"OPEN_PARTIAL",27:"DATA",29:"STRING",30:"INTEGER",31:"BOOLEAN",34:"ID",35:"EQUALS",37:"SEP"},
productions_: [0,[3,2],[4,3],[4,1],[4,0],[6,1],[6,2],[8,3],[8,3],[8,1],[8,1],[8,1],[8,1],[11,3],[9,3],[10,3],[12,3],[12,3],[13,3],[13,4],[7,2],[17,3],[17,2],[17,2],[17,1],[17,1],[25,2],[25,1],[28,1],[28,1],[28,1],[28,1],[28,1],[26,1],[32,2],[32,1],[33,3],[33,3],[33,3],[33,3],[33,3],[21,1],[36,3],[36,1]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-1];
break;
case 2: this.$ = new yy.ProgramNode($$[$0-2], $$[$0]);
break;
case 3: this.$ = new yy.ProgramNode($$[$0]);
break;
case 4: this.$ = new yy.ProgramNode([]);
break;
case 5: this.$ = [$$[$0]];
break;
case 6: $$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 7: this.$ = new yy.BlockNode($$[$0-2], $$[$0-1].inverse, $$[$0-1], $$[$0]);
break;
case 8: this.$ = new yy.BlockNode($$[$0-2], $$[$0-1], $$[$0-1].inverse, $$[$0]);
break;
case 9: this.$ = $$[$0];
break;
case 10: this.$ = $$[$0];
break;
case 11: this.$ = new yy.ContentNode($$[$0]);
break;
case 12: this.$ = new yy.CommentNode($$[$0]);
break;
case 13: this.$ = new yy.MustacheNode($$[$0-1][0], $$[$0-1][1]);
break;
case 14: this.$ = new yy.MustacheNode($$[$0-1][0], $$[$0-1][1]);
break;
case 15: this.$ = $$[$0-1];
break;
case 16: this.$ = new yy.MustacheNode($$[$0-1][0], $$[$0-1][1]);
break;
case 17: this.$ = new yy.MustacheNode($$[$0-1][0], $$[$0-1][1], true);
break;
case 18: this.$ = new yy.PartialNode($$[$0-1]);
break;
case 19: this.$ = new yy.PartialNode($$[$0-2], $$[$0-1]);
break;
case 20:
break;
case 21: this.$ = [[$$[$0-2]].concat($$[$0-1]), $$[$0]];
break;
case 22: this.$ = [[$$[$0-1]].concat($$[$0]), null];
break;
case 23: this.$ = [[$$[$0-1]], $$[$0]];
break;
case 24: this.$ = [[$$[$0]], null];
break;
case 25: this.$ = [[new yy.DataNode($$[$0])], null];
break;
case 26: $$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 27: this.$ = [$$[$0]];
break;
case 28: this.$ = $$[$0];
break;
case 29: this.$ = new yy.StringNode($$[$0]);
break;
case 30: this.$ = new yy.IntegerNode($$[$0]);
break;
case 31: this.$ = new yy.BooleanNode($$[$0]);
break;
case 32: this.$ = new yy.DataNode($$[$0]);
break;
case 33: this.$ = new yy.HashNode($$[$0]);
break;
case 34: $$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 35: this.$ = [$$[$0]];
break;
case 36: this.$ = [$$[$0-2], $$[$0]];
break;
case 37: this.$ = [$$[$0-2], new yy.StringNode($$[$0])];
break;
case 38: this.$ = [$$[$0-2], new yy.IntegerNode($$[$0])];
break;
case 39: this.$ = [$$[$0-2], new yy.BooleanNode($$[$0])];
break;
case 40: this.$ = [$$[$0-2], new yy.DataNode($$[$0])];
break;
case 41: this.$ = new yy.IdNode($$[$0]);
break;
case 42: $$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 43: this.$ = [$$[$0]];
break;
}
},
table: [{3:1,4:2,5:[2,4],6:3,8:4,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,11],22:[1,13],23:[1,14],24:[1,15]},{1:[3]},{5:[1,16]},{5:[2,3],7:17,8:18,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,19],20:[2,3],22:[1,13],23:[1,14],24:[1,15]},{5:[2,5],14:[2,5],15:[2,5],16:[2,5],19:[2,5],20:[2,5],22:[2,5],23:[2,5],24:[2,5]},{4:20,6:3,8:4,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,11],20:[2,4],22:[1,13],23:[1,14],24:[1,15]},{4:21,6:3,8:4,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,11],20:[2,4],22:[1,13],23:[1,14],24:[1,15]},{5:[2,9],14:[2,9],15:[2,9],16:[2,9],19:[2,9],20:[2,9],22:[2,9],23:[2,9],24:[2,9]},{5:[2,10],14:[2,10],15:[2,10],16:[2,10],19:[2,10],20:[2,10],22:[2,10],23:[2,10],24:[2,10]},{5:[2,11],14:[2,11],15:[2,11],16:[2,11],19:[2,11],20:[2,11],22:[2,11],23:[2,11],24:[2,11]},{5:[2,12],14:[2,12],15:[2,12],16:[2,12],19:[2,12],20:[2,12],22:[2,12],23:[2,12],24:[2,12]},{17:22,21:23,27:[1,24],34:[1,26],36:25},{17:27,21:23,27:[1,24],34:[1,26],36:25},{17:28,21:23,27:[1,24],34:[1,26],36:25},{17:29,21:23,27:[1,24],34:[1,26],36:25},{21:30,34:[1,26],36:25},{1:[2,1]},{6:31,8:4,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,11],22:[1,13],23:[1,14],24:[1,15]},{5:[2,6],14:[2,6],15:[2,6],16:[2,6],19:[2,6],20:[2,6],22:[2,6],23:[2,6],24:[2,6]},{17:22,18:[1,32],21:23,27:[1,24],34:[1,26],36:25},{10:33,20:[1,34]},{10:35,20:[1,34]},{18:[1,36]},{18:[2,24],21:41,25:37,26:38,27:[1,45],28:39,29:[1,42],30:[1,43],31:[1,44],32:40,33:46,34:[1,47],36:25},{18:[2,25]},{18:[2,41],27:[2,41],29:[2,41],30:[2,41],31:[2,41],34:[2,41],37:[1,48]},{18:[2,43],27:[2,43],29:[2,43],30:[2,43],31:[2,43],34:[2,43],37:[2,43]},{18:[1,49]},{18:[1,50]},{18:[1,51]},{18:[1,52],21:53,34:[1,26],36:25},{5:[2,2],8:18,9:5,11:6,12:7,13:8,14:[1,9],15:[1,10],16:[1,12],19:[1,11],20:[2,2],22:[1,13],23:[1,14],24:[1,15]},{14:[2,20],15:[2,20],16:[2,20],19:[2,20],22:[2,20],23:[2,20],24:[2,20]},{5:[2,7],14:[2,7],15:[2,7],16:[2,7],19:[2,7],20:[2,7],22:[2,7],23:[2,7],24:[2,7]},{21:54,34:[1,26],36:25},{5:[2,8],14:[2,8],15:[2,8],16:[2,8],19:[2,8],20:[2,8],22:[2,8],23:[2,8],24:[2,8]},{14:[2,14],15:[2,14],16:[2,14],19:[2,14],20:[2,14],22:[2,14],23:[2,14],24:[2,14]},{18:[2,22],21:41,26:55,27:[1,45],28:56,29:[1,42],30:[1,43],31:[1,44],32:40,33:46,34:[1,47],36:25},{18:[2,23]},{18:[2,27],27:[2,27],29:[2,27],30:[2,27],31:[2,27],34:[2,27]},{18:[2,33],33:57,34:[1,58]},{18:[2,28],27:[2,28],29:[2,28],30:[2,28],31:[2,28],34:[2,28]},{18:[2,29],27:[2,29],29:[2,29],30:[2,29],31:[2,29],34:[2,29]},{18:[2,30],27:[2,30],29:[2,30],30:[2,30],31:[2,30],34:[2,30]},{18:[2,31],27:[2,31],29:[2,31],30:[2,31],31:[2,31],34:[2,31]},{18:[2,32],27:[2,32],29:[2,32],30:[2,32],31:[2,32],34:[2,32]},{18:[2,35],34:[2,35]},{18:[2,43],27:[2,43],29:[2,43],30:[2,43],31:[2,43],34:[2,43],35:[1,59],37:[2,43]},{34:[1,60]},{14:[2,13],15:[2,13],16:[2,13],19:[2,13],20:[2,13],22:[2,13],23:[2,13],24:[2,13]},{5:[2,16],14:[2,16],15:[2,16],16:[2,16],19:[2,16],20:[2,16],22:[2,16],23:[2,16],24:[2,16]},{5:[2,17],14:[2,17],15:[2,17],16:[2,17],19:[2,17],20:[2,17],22:[2,17],23:[2,17],24:[2,17]},{5:[2,18],14:[2,18],15:[2,18],16:[2,18],19:[2,18],20:[2,18],22:[2,18],23:[2,18],24:[2,18]},{18:[1,61]},{18:[1,62]},{18:[2,21]},{18:[2,26],27:[2,26],29:[2,26],30:[2,26],31:[2,26],34:[2,26]},{18:[2,34],34:[2,34]},{35:[1,59]},{21:63,27:[1,67],29:[1,64],30:[1,65],31:[1,66],34:[1,26],36:25},{18:[2,42],27:[2,42],29:[2,42],30:[2,42],31:[2,42],34:[2,42],37:[2,42]},{5:[2,19],14:[2,19],15:[2,19],16:[2,19],19:[2,19],20:[2,19],22:[2,19],23:[2,19],24:[2,19]},{5:[2,15],14:[2,15],15:[2,15],16:[2,15],19:[2,15],20:[2,15],22:[2,15],23:[2,15],24:[2,15]},{18:[2,36],34:[2,36]},{18:[2,37],34:[2,37]},{18:[2,38],34:[2,38]},{18:[2,39],34:[2,39]},{18:[2,40],34:[2,40]}],
defaultActions: {16:[2,1],24:[2,25],38:[2,23],55:[2,21]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == "undefined")
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === "function")
        this.parseError = this.yy.parseError;
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || 1;
        if (typeof token !== "number") {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == "undefined") {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
        if (typeof action === "undefined" || !action.length || !action[0]) {
            var errStr = "";
            if (!recovering) {
                expected = [];
                for (p in table[state])
                    if (this.terminals_[p] && p > 2) {
                        expected.push("'" + this.terminals_[p] + "'");
                    }
                if (this.lexer.showPosition) {
                    errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
                } else {
                    errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1?"end of input":"'" + (this.terminals_[symbol] || symbol) + "'");
                }
                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }
        }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0)
                    recovering--;
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};
            if (ranges) {
                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
            }
            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
            if (typeof r !== "undefined") {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}
};
/* Jison generated lexer */
var lexer = (function(){
var lexer = ({EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        if (this.options.ranges) this.yylloc.range = [0,0];
        this.offset = 0;
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) this.yylloc.range[1]++;

        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length-1);
        this.matched = this.matched.substr(0, this.matched.length-1);

        if (lines.length-1) this.yylineno -= lines.length-1;
        var r = this.yylloc.range;

        this.yylloc = {first_line: this.yylloc.first_line,
          last_line: this.yylineno+1,
          first_column: this.yylloc.first_column,
          last_column: lines ?
              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:
              this.yylloc.first_column - len
          };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
less:function (n) {
        this.unput(this.match.slice(n));
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            tempMatch,
            index,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (!this.options.flex) break;
            }
        }
        if (match) {
            lines = match[0].match(/(?:\r\n?|\n).*/g);
            if (lines) this.yylineno += lines.length;
            this.yylloc = {first_line: this.yylloc.last_line,
                           last_line: this.yylineno+1,
                           first_column: this.yylloc.last_column,
                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length};
            this.yytext += match[0];
            this.match += match[0];
            this.matches = match;
            this.yyleng = this.yytext.length;
            if (this.options.ranges) {
                this.yylloc.range = [this.offset, this.offset += this.yyleng];
            }
            this._more = false;
            this._input = this._input.slice(match[0].length);
            this.matched += match[0];
            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);
            if (this.done && this._input) this.done = false;
            if (token) return token;
            else return;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    },
topState:function () {
        return this.conditionStack[this.conditionStack.length-2];
    },
pushState:function begin(condition) {
        this.begin(condition);
    }});
lexer.options = {};
lexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START
switch($avoiding_name_collisions) {
case 0:
                                   if(yy_.yytext.slice(-1) !== "\\") this.begin("mu");
                                   if(yy_.yytext.slice(-1) === "\\") yy_.yytext = yy_.yytext.substr(0,yy_.yyleng-1), this.begin("emu");
                                   if(yy_.yytext) return 14;

break;
case 1: return 14;
break;
case 2:
                                   if(yy_.yytext.slice(-1) !== "\\") this.popState();
                                   if(yy_.yytext.slice(-1) === "\\") yy_.yytext = yy_.yytext.substr(0,yy_.yyleng-1);
                                   return 14;

break;
case 3: return 24;
break;
case 4: return 16;
break;
case 5: return 20;
break;
case 6: return 19;
break;
case 7: return 19;
break;
case 8: return 23;
break;
case 9: return 23;
break;
case 10: yy_.yytext = yy_.yytext.substr(3,yy_.yyleng-5); this.popState(); return 15;
break;
case 11: return 22;
break;
case 12: return 35;
break;
case 13: return 34;
break;
case 14: return 34;
break;
case 15: return 37;
break;
case 16: /*ignore whitespace*/
break;
case 17: this.popState(); return 18;
break;
case 18: this.popState(); return 18;
break;
case 19: yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2).replace(/\\"/g,'"'); return 29;
break;
case 20: yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2).replace(/\\"/g,'"'); return 29;
break;
case 21: yy_.yytext = yy_.yytext.substr(1); return 27;
break;
case 22: return 31;
break;
case 23: return 31;
break;
case 24: return 30;
break;
case 25: return 34;
break;
case 26: yy_.yytext = yy_.yytext.substr(1, yy_.yyleng-2); return 34;
break;
case 27: return 'INVALID';
break;
case 28: return 5;
break;
}
};
lexer.rules = [/^(?:[^\x00]*?(?=(\{\{)))/,/^(?:[^\x00]+)/,/^(?:[^\x00]{2,}?(?=(\{\{|$)))/,/^(?:\{\{>)/,/^(?:\{\{#)/,/^(?:\{\{\/)/,/^(?:\{\{\^)/,/^(?:\{\{\s*else\b)/,/^(?:\{\{\{)/,/^(?:\{\{&)/,/^(?:\{\{![\s\S]*?\}\})/,/^(?:\{\{)/,/^(?:=)/,/^(?:\.(?=[} ]))/,/^(?:\.\.)/,/^(?:[\/.])/,/^(?:\s+)/,/^(?:\}\}\})/,/^(?:\}\})/,/^(?:"(\\["]|[^"])*")/,/^(?:'(\\[']|[^'])*')/,/^(?:@[a-zA-Z]+)/,/^(?:true(?=[}\s]))/,/^(?:false(?=[}\s]))/,/^(?:[0-9]+(?=[}\s]))/,/^(?:[a-zA-Z0-9_$-]+(?=[=}\s\/.]))/,/^(?:\[[^\]]*\])/,/^(?:.)/,/^(?:$)/];
lexer.conditions = {"mu":{"rules":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"inclusive":false},"emu":{"rules":[2],"inclusive":false},"INITIAL":{"rules":[0,1,28],"inclusive":true}};
return lexer;})()
parser.lexer = lexer;
function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = handlebars;
exports.Parser = handlebars.Parser;
exports.parse = function () { return handlebars.parse.apply(handlebars, arguments); }
exports.main = function commonjsMain(args) {
    if (!args[1])
        throw new Error('Usage: '+args[0]+' FILE');
    var source, cwd;
    if (typeof process !== 'undefined') {
        source = require('fs').readFileSync(require('path').resolve(args[1]), "utf8");
    } else {
        source = require("file").path(require("file").cwd()).join(args[1]).read({charset: "utf-8"});
    }
    return exports.parser.parse(source);
}
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(typeof process !== 'undefined' ? process.argv.slice(1) : require("system").args);
}
};
;
// lib/handlebars/compiler/base.js
Handlebars.Parser = handlebars;

Handlebars.parse = function(string) {
  Handlebars.Parser.yy = Handlebars.AST;
  return Handlebars.Parser.parse(string);
};

Handlebars.print = function(ast) {
  return new Handlebars.PrintVisitor().accept(ast);
};

Handlebars.logger = {
  DEBUG: 0, INFO: 1, WARN: 2, ERROR: 3, level: 3,

  // override in the host environment
  log: function(level, str) {}
};

Handlebars.log = function(level, str) { Handlebars.logger.log(level, str); };
;
// lib/handlebars/compiler/ast.js
(function() {

  Handlebars.AST = {};

  Handlebars.AST.ProgramNode = function(statements, inverse) {
    this.type = "program";
    this.statements = statements;
    if(inverse) { this.inverse = new Handlebars.AST.ProgramNode(inverse); }
  };

  Handlebars.AST.MustacheNode = function(rawParams, hash, unescaped) {
    this.type = "mustache";
    this.escaped = !unescaped;
    this.hash = hash;

    var id = this.id = rawParams[0];
    var params = this.params = rawParams.slice(1);

    // a mustache is an eligible helper if:
    // * its id is simple (a single part, not `this` or `..`)
    var eligibleHelper = this.eligibleHelper = id.isSimple;

    // a mustache is definitely a helper if:
    // * it is an eligible helper, and
    // * it has at least one parameter or hash segment
    this.isHelper = eligibleHelper && (params.length || hash);

    // if a mustache is an eligible helper but not a definite
    // helper, it is ambiguous, and will be resolved in a later
    // pass or at runtime.
  };

  Handlebars.AST.PartialNode = function(id, context) {
    this.type    = "partial";

    // TODO: disallow complex IDs

    this.id      = id;
    this.context = context;
  };

  var verifyMatch = function(open, close) {
    if(open.original !== close.original) {
      throw new Handlebars.Exception(open.original + " doesn't match " + close.original);
    }
  };

  Handlebars.AST.BlockNode = function(mustache, program, inverse, close) {
    verifyMatch(mustache.id, close);
    this.type = "block";
    this.mustache = mustache;
    this.program  = program;
    this.inverse  = inverse;

    if (this.inverse && !this.program) {
      this.isInverse = true;
    }
  };

  Handlebars.AST.ContentNode = function(string) {
    this.type = "content";
    this.string = string;
  };

  Handlebars.AST.HashNode = function(pairs) {
    this.type = "hash";
    this.pairs = pairs;
  };

  Handlebars.AST.IdNode = function(parts) {
    this.type = "ID";
    this.original = parts.join(".");

    var dig = [], depth = 0;

    for(var i=0,l=parts.length; i<l; i++) {
      var part = parts[i];

      if(part === "..") { depth++; }
      else if(part === "." || part === "this") { this.isScoped = true; }
      else { dig.push(part); }
    }

    this.parts    = dig;
    this.string   = dig.join('.');
    this.depth    = depth;

    // an ID is simple if it only has one part, and that part is not
    // `..` or `this`.
    this.isSimple = parts.length === 1 && !this.isScoped && depth === 0;
  };

  Handlebars.AST.DataNode = function(id) {
    this.type = "DATA";
    this.id = id;
  };

  Handlebars.AST.StringNode = function(string) {
    this.type = "STRING";
    this.string = string;
  };

  Handlebars.AST.IntegerNode = function(integer) {
    this.type = "INTEGER";
    this.integer = integer;
  };

  Handlebars.AST.BooleanNode = function(bool) {
    this.type = "BOOLEAN";
    this.bool = bool;
  };

  Handlebars.AST.CommentNode = function(comment) {
    this.type = "comment";
    this.comment = comment;
  };

})();;
// lib/handlebars/utils.js
Handlebars.Exception = function(message) {
  var tmp = Error.prototype.constructor.apply(this, arguments);

  for (var p in tmp) {
    if (tmp.hasOwnProperty(p)) { this[p] = tmp[p]; }
  }

  this.message = tmp.message;
};
Handlebars.Exception.prototype = new Error();

// Build out our basic SafeString type
Handlebars.SafeString = function(string) {
  this.string = string;
};
Handlebars.SafeString.prototype.toString = function() {
  return this.string.toString();
};

(function() {
  var escape = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': "&quot;",
    "'": "&#x27;",
    "`": "&#x60;"
  };

  var badChars = /[&<>"'`]/g;
  var possible = /[&<>"'`]/;

  var escapeChar = function(chr) {
    return escape[chr] || "&amp;";
  };

  Handlebars.Utils = {
    escapeExpression: function(string) {
      // don't escape SafeStrings, since they're already safe
      if (string instanceof Handlebars.SafeString) {
        return string.toString();
      } else if (string == null || string === false) {
        return "";
      }

      if(!possible.test(string)) { return string; }
      return string.replace(badChars, escapeChar);
    },

    isEmpty: function(value) {
      if (typeof value === "undefined") {
        return true;
      } else if (value === null) {
        return true;
      } else if (value === false) {
        return true;
      } else if(Object.prototype.toString.call(value) === "[object Array]" && value.length === 0) {
        return true;
      } else {
        return false;
      }
    }
  };
})();;
// lib/handlebars/compiler/compiler.js

/*jshint eqnull:true*/
Handlebars.Compiler = function() {};
Handlebars.JavaScriptCompiler = function() {};

(function(Compiler, JavaScriptCompiler) {
  // the foundHelper register will disambiguate helper lookup from finding a
  // function in a context. This is necessary for mustache compatibility, which
  // requires that context functions in blocks are evaluated by blockHelperMissing,
  // and then proceed as if the resulting value was provided to blockHelperMissing.

  Compiler.prototype = {
    compiler: Compiler,

    disassemble: function() {
      var opcodes = this.opcodes, opcode, out = [], params, param;

      for (var i=0, l=opcodes.length; i<l; i++) {
        opcode = opcodes[i];

        if (opcode.opcode === 'DECLARE') {
          out.push("DECLARE " + opcode.name + "=" + opcode.value);
        } else {
          params = [];
          for (var j=0; j<opcode.args.length; j++) {
            param = opcode.args[j];
            if (typeof param === "string") {
              param = "\"" + param.replace("\n", "\\n") + "\"";
            }
            params.push(param);
          }
          out.push(opcode.opcode + " " + params.join(" "));
        }
      }

      return out.join("\n");
    },

    guid: 0,

    compile: function(program, options) {
      this.children = [];
      this.depths = {list: []};
      this.options = options;

      // These changes will propagate to the other compiler components
      var knownHelpers = this.options.knownHelpers;
      this.options.knownHelpers = {
        'helperMissing': true,
        'blockHelperMissing': true,
        'each': true,
        'if': true,
        'unless': true,
        'with': true,
        'log': true
      };
      if (knownHelpers) {
        for (var name in knownHelpers) {
          this.options.knownHelpers[name] = knownHelpers[name];
        }
      }

      return this.program(program);
    },

    accept: function(node) {
      return this[node.type](node);
    },

    program: function(program) {
      var statements = program.statements, statement;
      this.opcodes = [];

      for(var i=0, l=statements.length; i<l; i++) {
        statement = statements[i];
        this[statement.type](statement);
      }
      this.isSimple = l === 1;

      this.depths.list = this.depths.list.sort(function(a, b) {
        return a - b;
      });

      return this;
    },

    compileProgram: function(program) {
      var result = new this.compiler().compile(program, this.options);
      var guid = this.guid++, depth;

      this.usePartial = this.usePartial || result.usePartial;

      this.children[guid] = result;

      for(var i=0, l=result.depths.list.length; i<l; i++) {
        depth = result.depths.list[i];

        if(depth < 2) { continue; }
        else { this.addDepth(depth - 1); }
      }

      return guid;
    },

    block: function(block) {
      var mustache = block.mustache,
          program = block.program,
          inverse = block.inverse;

      if (program) {
        program = this.compileProgram(program);
      }

      if (inverse) {
        inverse = this.compileProgram(inverse);
      }

      var type = this.classifyMustache(mustache);

      if (type === "helper") {
        this.helperMustache(mustache, program, inverse);
      } else if (type === "simple") {
        this.simpleMustache(mustache);

        // now that the simple mustache is resolved, we need to
        // evaluate it by executing `blockHelperMissing`
        this.opcode('pushProgram', program);
        this.opcode('pushProgram', inverse);
        this.opcode('pushLiteral', '{}');
        this.opcode('blockValue');
      } else {
        this.ambiguousMustache(mustache, program, inverse);

        // now that the simple mustache is resolved, we need to
        // evaluate it by executing `blockHelperMissing`
        this.opcode('pushProgram', program);
        this.opcode('pushProgram', inverse);
        this.opcode('pushLiteral', '{}');
        this.opcode('ambiguousBlockValue');
      }

      this.opcode('append');
    },

    hash: function(hash) {
      var pairs = hash.pairs, pair, val;

      this.opcode('push', '{}');

      for(var i=0, l=pairs.length; i<l; i++) {
        pair = pairs[i];
        val  = pair[1];

        this.accept(val);
        this.opcode('assignToHash', pair[0]);
      }
    },

    partial: function(partial) {
      var id = partial.id;
      this.usePartial = true;

      if(partial.context) {
        this.ID(partial.context);
      } else {
        this.opcode('push', 'depth0');
      }

      this.opcode('invokePartial', id.original);
      this.opcode('append');
    },

    content: function(content) {
      this.opcode('appendContent', content.string);
    },

    mustache: function(mustache) {
      var options = this.options;
      var type = this.classifyMustache(mustache);

      if (type === "simple") {
        this.simpleMustache(mustache);
      } else if (type === "helper") {
        this.helperMustache(mustache);
      } else {
        this.ambiguousMustache(mustache);
      }

      if(mustache.escaped && !options.noEscape) {
        this.opcode('appendEscaped');
      } else {
        this.opcode('append');
      }
    },

    ambiguousMustache: function(mustache, program, inverse) {
      var id = mustache.id, name = id.parts[0];

      this.opcode('getContext', id.depth);

      this.opcode('pushProgram', program);
      this.opcode('pushProgram', inverse);

      this.opcode('invokeAmbiguous', name);
    },

    simpleMustache: function(mustache, program, inverse) {
      var id = mustache.id;

      if (id.type === 'DATA') {
        this.DATA(id);
      } else if (id.parts.length) {
        this.ID(id);
      } else {
        // Simplified ID for `this`
        this.addDepth(id.depth);
        this.opcode('getContext', id.depth);
        this.opcode('pushContext');
      }

      this.opcode('resolvePossibleLambda');
    },

    helperMustache: function(mustache, program, inverse) {
      var params = this.setupFullMustacheParams(mustache, program, inverse),
          name = mustache.id.parts[0];

      if (this.options.knownHelpers[name]) {
        this.opcode('invokeKnownHelper', params.length, name);
      } else if (this.knownHelpersOnly) {
        throw new Error("You specified knownHelpersOnly, but used the unknown helper " + name);
      } else {
        this.opcode('invokeHelper', params.length, name);
      }
    },

    ID: function(id) {
      this.addDepth(id.depth);
      this.opcode('getContext', id.depth);

      var name = id.parts[0];
      if (!name) {
        this.opcode('pushContext');
      } else {
        this.opcode('lookupOnContext', id.parts[0]);
      }

      for(var i=1, l=id.parts.length; i<l; i++) {
        this.opcode('lookup', id.parts[i]);
      }
    },

    DATA: function(data) {
      this.options.data = true;
      this.opcode('lookupData', data.id);
    },

    STRING: function(string) {
      this.opcode('pushString', string.string);
    },

    INTEGER: function(integer) {
      this.opcode('pushLiteral', integer.integer);
    },

    BOOLEAN: function(bool) {
      this.opcode('pushLiteral', bool.bool);
    },

    comment: function() {},

    // HELPERS
    opcode: function(name) {
      this.opcodes.push({ opcode: name, args: [].slice.call(arguments, 1) });
    },

    declare: function(name, value) {
      this.opcodes.push({ opcode: 'DECLARE', name: name, value: value });
    },

    addDepth: function(depth) {
      if(isNaN(depth)) { throw new Error("EWOT"); }
      if(depth === 0) { return; }

      if(!this.depths[depth]) {
        this.depths[depth] = true;
        this.depths.list.push(depth);
      }
    },

    classifyMustache: function(mustache) {
      var isHelper   = mustache.isHelper;
      var isEligible = mustache.eligibleHelper;
      var options    = this.options;

      // if ambiguous, we can possibly resolve the ambiguity now
      if (isEligible && !isHelper) {
        var name = mustache.id.parts[0];

        if (options.knownHelpers[name]) {
          isHelper = true;
        } else if (options.knownHelpersOnly) {
          isEligible = false;
        }
      }

      if (isHelper) { return "helper"; }
      else if (isEligible) { return "ambiguous"; }
      else { return "simple"; }
    },

    pushParams: function(params) {
      var i = params.length, param;

      while(i--) {
        param = params[i];

        if(this.options.stringParams) {
          if(param.depth) {
            this.addDepth(param.depth);
          }

          this.opcode('getContext', param.depth || 0);
          this.opcode('pushStringParam', param.string);
        } else {
          this[param.type](param);
        }
      }
    },

    setupMustacheParams: function(mustache) {
      var params = mustache.params;
      this.pushParams(params);

      if(mustache.hash) {
        this.hash(mustache.hash);
      } else {
        this.opcode('pushLiteral', '{}');
      }

      return params;
    },

    // this will replace setupMustacheParams when we're done
    setupFullMustacheParams: function(mustache, program, inverse) {
      var params = mustache.params;
      this.pushParams(params);

      this.opcode('pushProgram', program);
      this.opcode('pushProgram', inverse);

      if(mustache.hash) {
        this.hash(mustache.hash);
      } else {
        this.opcode('pushLiteral', '{}');
      }

      return params;
    }
  };

  var Literal = function(value) {
    this.value = value;
  };

  JavaScriptCompiler.prototype = {
    // PUBLIC API: You can override these methods in a subclass to provide
    // alternative compiled forms for name lookup and buffering semantics
    nameLookup: function(parent, name, type) {
      if (/^[0-9]+$/.test(name)) {
        return parent + "[" + name + "]";
      } else if (JavaScriptCompiler.isValidJavaScriptVariableName(name)) {
        return parent + "." + name;
      }
      else {
        return parent + "['" + name + "']";
      }
    },

    appendToBuffer: function(string) {
      if (this.environment.isSimple) {
        return "return " + string + ";";
      } else {
        return "buffer += " + string + ";";
      }
    },

    initializeBuffer: function() {
      return this.quotedString("");
    },

    namespace: "Handlebars",
    // END PUBLIC API

    compile: function(environment, options, context, asObject) {
      this.environment = environment;
      this.options = options || {};

      Handlebars.log(Handlebars.logger.DEBUG, this.environment.disassemble() + "\n\n");

      this.name = this.environment.name;
      this.isChild = !!context;
      this.context = context || {
        programs: [],
        aliases: { }
      };

      this.preamble();

      this.stackSlot = 0;
      this.stackVars = [];
      this.registers = { list: [] };
      this.compileStack = [];

      this.compileChildren(environment, options);

      var opcodes = environment.opcodes, opcode;

      this.i = 0;

      for(l=opcodes.length; this.i<l; this.i++) {
        opcode = opcodes[this.i];

        if(opcode.opcode === 'DECLARE') {
          this[opcode.name] = opcode.value;
        } else {
          this[opcode.opcode].apply(this, opcode.args);
        }
      }

      return this.createFunctionContext(asObject);
    },

    nextOpcode: function() {
      var opcodes = this.environment.opcodes, opcode = opcodes[this.i + 1];
      return opcodes[this.i + 1];
    },

    eat: function(opcode) {
      this.i = this.i + 1;
    },

    preamble: function() {
      var out = [];

      if (!this.isChild) {
        var namespace = this.namespace;
        var copies = "helpers = helpers || " + namespace + ".helpers;";
        if (this.environment.usePartial) { copies = copies + " partials = partials || " + namespace + ".partials;"; }
        if (this.options.data) { copies = copies + " data = data || {};"; }
        out.push(copies);
      } else {
        out.push('');
      }

      if (!this.environment.isSimple) {
        out.push(", buffer = " + this.initializeBuffer());
      } else {
        out.push("");
      }

      // track the last context pushed into place to allow skipping the
      // getContext opcode when it would be a noop
      this.lastContext = 0;
      this.source = out;
    },

    createFunctionContext: function(asObject) {
      var locals = this.stackVars.concat(this.registers.list);

      if(locals.length > 0) {
        this.source[1] = this.source[1] + ", " + locals.join(", ");
      }

      // Generate minimizer alias mappings
      if (!this.isChild) {
        var aliases = [];
        for (var alias in this.context.aliases) {
          this.source[1] = this.source[1] + ', ' + alias + '=' + this.context.aliases[alias];
        }
      }

      if (this.source[1]) {
        this.source[1] = "var " + this.source[1].substring(2) + ";";
      }

      // Merge children
      if (!this.isChild) {
        this.source[1] += '\n' + this.context.programs.join('\n') + '\n';
      }

      if (!this.environment.isSimple) {
        this.source.push("return buffer;");
      }

      var params = this.isChild ? ["depth0", "data"] : ["Handlebars", "depth0", "helpers", "partials", "data"];

      for(var i=0, l=this.environment.depths.list.length; i<l; i++) {
        params.push("depth" + this.environment.depths.list[i]);
      }

      if (asObject) {
        params.push(this.source.join("\n  "));

        return Function.apply(this, params);
      } else {
        var functionSource = 'function ' + (this.name || '') + '(' + params.join(',') + ') {\n  ' + this.source.join("\n  ") + '}';
        Handlebars.log(Handlebars.logger.DEBUG, functionSource + "\n\n");
        return functionSource;
      }
    },

    // [blockValue]
    //
    // On stack, before: hash, inverse, program, value
    // On stack, after: return value of blockHelperMissing
    //
    // The purpose of this opcode is to take a block of the form
    // `{{#foo}}...{{/foo}}`, resolve the value of `foo`, and
    // replace it on the stack with the result of properly
    // invoking blockHelperMissing.
    blockValue: function() {
      this.context.aliases.blockHelperMissing = 'helpers.blockHelperMissing';

      var params = ["depth0"];
      this.setupParams(0, params);

      this.replaceStack(function(current) {
        params.splice(1, 0, current);
        return current + " = blockHelperMissing.call(" + params.join(", ") + ")";
      });
    },

    // [ambiguousBlockValue]
    //
    // On stack, before: hash, inverse, program, value
    // Compiler value, before: lastHelper=value of last found helper, if any
    // On stack, after, if no lastHelper: same as [blockValue]
    // On stack, after, if lastHelper: value
    ambiguousBlockValue: function() {
      this.context.aliases.blockHelperMissing = 'helpers.blockHelperMissing';

      var params = ["depth0"];
      this.setupParams(0, params);

      var current = this.topStack();
      params.splice(1, 0, current);

      this.source.push("if (!" + this.lastHelper + ") { " + current + " = blockHelperMissing.call(" + params.join(", ") + "); }");
    },

    // [appendContent]
    //
    // On stack, before: ...
    // On stack, after: ...
    //
    // Appends the string value of `content` to the current buffer
    appendContent: function(content) {
      this.source.push(this.appendToBuffer(this.quotedString(content)));
    },

    // [append]
    //
    // On stack, before: value, ...
    // On stack, after: ...
    //
    // Coerces `value` to a String and appends it to the current buffer.
    //
    // If `value` is truthy, or 0, it is coerced into a string and appended
    // Otherwise, the empty string is appended
    append: function() {
      var local = this.popStack();
      this.source.push("if(" + local + " || " + local + " === 0) { " + this.appendToBuffer(local) + " }");
      if (this.environment.isSimple) {
        this.source.push("else { " + this.appendToBuffer("''") + " }");
      }
    },

    // [appendEscaped]
    //
    // On stack, before: value, ...
    // On stack, after: ...
    //
    // Escape `value` and append it to the buffer
    appendEscaped: function() {
      var opcode = this.nextOpcode(), extra = "";
      this.context.aliases.escapeExpression = 'this.escapeExpression';

      if(opcode && opcode.opcode === 'appendContent') {
        extra = " + " + this.quotedString(opcode.args[0]);
        this.eat(opcode);
      }

      this.source.push(this.appendToBuffer("escapeExpression(" + this.popStack() + ")" + extra));
    },

    // [getContext]
    //
    // On stack, before: ...
    // On stack, after: ...
    // Compiler value, after: lastContext=depth
    //
    // Set the value of the `lastContext` compiler value to the depth
    getContext: function(depth) {
      if(this.lastContext !== depth) {
        this.lastContext = depth;
      }
    },

    // [lookupOnContext]
    //
    // On stack, before: ...
    // On stack, after: currentContext[name], ...
    //
    // Looks up the value of `name` on the current context and pushes
    // it onto the stack.
    lookupOnContext: function(name) {
      this.pushStack(this.nameLookup('depth' + this.lastContext, name, 'context'));
    },

    // [pushContext]
    //
    // On stack, before: ...
    // On stack, after: currentContext, ...
    //
    // Pushes the value of the current context onto the stack.
    pushContext: function() {
      this.pushStackLiteral('depth' + this.lastContext);
    },

    // [resolvePossibleLambda]
    //
    // On stack, before: value, ...
    // On stack, after: resolved value, ...
    //
    // If the `value` is a lambda, replace it on the stack by
    // the return value of the lambda
    resolvePossibleLambda: function() {
      this.context.aliases.functionType = '"function"';

      this.replaceStack(function(current) {
        return "typeof " + current + " === functionType ? " + current + "() : " + current;
      });
    },

    // [lookup]
    //
    // On stack, before: value, ...
    // On stack, after: value[name], ...
    //
    // Replace the value on the stack with the result of looking
    // up `name` on `value`
    lookup: function(name) {
      this.replaceStack(function(current) {
        return current + " == null || " + current + " === false ? " + current + " : " + this.nameLookup(current, name, 'context');
      });
    },

    // [lookupData]
    //
    // On stack, before: ...
    // On stack, after: data[id], ...
    //
    // Push the result of looking up `id` on the current data
    lookupData: function(id) {
      this.pushStack(this.nameLookup('data', id, 'data'));
    },

    // [pushStringParam]
    //
    // On stack, before: ...
    // On stack, after: string, currentContext, ...
    //
    // This opcode is designed for use in string mode, which
    // provides the string value of a parameter along with its
    // depth rather than resolving it immediately.
    pushStringParam: function(string) {
      this.pushStackLiteral('depth' + this.lastContext);
      this.pushString(string);
    },

    // [pushString]
    //
    // On stack, before: ...
    // On stack, after: quotedString(string), ...
    //
    // Push a quoted version of `string` onto the stack
    pushString: function(string) {
      this.pushStackLiteral(this.quotedString(string));
    },

    // [push]
    //
    // On stack, before: ...
    // On stack, after: expr, ...
    //
    // Push an expression onto the stack
    push: function(expr) {
      this.pushStack(expr);
    },

    // [pushLiteral]
    //
    // On stack, before: ...
    // On stack, after: value, ...
    //
    // Pushes a value onto the stack. This operation prevents
    // the compiler from creating a temporary variable to hold
    // it.
    pushLiteral: function(value) {
      this.pushStackLiteral(value);
    },

    // [pushProgram]
    //
    // On stack, before: ...
    // On stack, after: program(guid), ...
    //
    // Push a program expression onto the stack. This takes
    // a compile-time guid and converts it into a runtime-accessible
    // expression.
    pushProgram: function(guid) {
      if (guid != null) {
        this.pushStackLiteral(this.programExpression(guid));
      } else {
        this.pushStackLiteral(null);
      }
    },

    // [invokeHelper]
    //
    // On stack, before: hash, inverse, program, params..., ...
    // On stack, after: result of helper invocation
    //
    // Pops off the helper's parameters, invokes the helper,
    // and pushes the helper's return value onto the stack.
    //
    // If the helper is not found, `helperMissing` is called.
    invokeHelper: function(paramSize, name) {
      this.context.aliases.helperMissing = 'helpers.helperMissing';

      var helper = this.lastHelper = this.setupHelper(paramSize, name);
      this.register('foundHelper', helper.name);

      this.pushStack("foundHelper ? foundHelper.call(" +
        helper.callParams + ") " + ": helperMissing.call(" +
        helper.helperMissingParams + ")");
    },

    // [invokeKnownHelper]
    //
    // On stack, before: hash, inverse, program, params..., ...
    // On stack, after: result of helper invocation
    //
    // This operation is used when the helper is known to exist,
    // so a `helperMissing` fallback is not required.
    invokeKnownHelper: function(paramSize, name) {
      var helper = this.setupHelper(paramSize, name);
      this.pushStack(helper.name + ".call(" + helper.callParams + ")");
    },

    // [invokeAmbiguous]
    //
    // On stack, before: hash, inverse, program, params..., ...
    // On stack, after: result of disambiguation
    //
    // This operation is used when an expression like `{{foo}}`
    // is provided, but we don't know at compile-time whether it
    // is a helper or a path.
    //
    // This operation emits more code than the other options,
    // and can be avoided by passing the `knownHelpers` and
    // `knownHelpersOnly` flags at compile-time.
    invokeAmbiguous: function(name) {
      this.context.aliases.functionType = '"function"';

      this.pushStackLiteral('{}');
      var helper = this.setupHelper(0, name);

      var helperName = this.lastHelper = this.nameLookup('helpers', name, 'helper');
      this.register('foundHelper', helperName);

      var nonHelper = this.nameLookup('depth' + this.lastContext, name, 'context');
      var nextStack = this.nextStack();

      this.source.push('if (foundHelper) { ' + nextStack + ' = foundHelper.call(' + helper.callParams + '); }');
      this.source.push('else { ' + nextStack + ' = ' + nonHelper + '; ' + nextStack + ' = typeof ' + nextStack + ' === functionType ? ' + nextStack + '() : ' + nextStack + '; }');
    },

    // [invokePartial]
    //
    // On stack, before: context, ...
    // On stack after: result of partial invocation
    //
    // This operation pops off a context, invokes a partial with that context,
    // and pushes the result of the invocation back.
    invokePartial: function(name) {
      var params = [this.nameLookup('partials', name, 'partial'), "'" + name + "'", this.popStack(), "helpers", "partials"];

      if (this.options.data) {
        params.push("data");
      }

      this.context.aliases.self = "this";
      this.pushStack("self.invokePartial(" + params.join(", ") + ");");
    },

    // [assignToHash]
    //
    // On stack, before: value, hash, ...
    // On stack, after: hash, ...
    //
    // Pops a value and hash off the stack, assigns `hash[key] = value`
    // and pushes the hash back onto the stack.
    assignToHash: function(key) {
      var value = this.popStack();
      var hash = this.topStack();

      this.source.push(hash + "['" + key + "'] = " + value + ";");
    },

    // HELPERS

    compiler: JavaScriptCompiler,

    compileChildren: function(environment, options) {
      var children = environment.children, child, compiler;

      for(var i=0, l=children.length; i<l; i++) {
        child = children[i];
        compiler = new this.compiler();

        this.context.programs.push('');     // Placeholder to prevent name conflicts for nested children
        var index = this.context.programs.length;
        child.index = index;
        child.name = 'program' + index;
        this.context.programs[index] = compiler.compile(child, options, this.context);
      }
    },

    programExpression: function(guid) {
      this.context.aliases.self = "this";

      if(guid == null) {
        return "self.noop";
      }

      var child = this.environment.children[guid],
          depths = child.depths.list, depth;

      var programParams = [child.index, child.name, "data"];

      for(var i=0, l = depths.length; i<l; i++) {
        depth = depths[i];

        if(depth === 1) { programParams.push("depth0"); }
        else { programParams.push("depth" + (depth - 1)); }
      }

      if(depths.length === 0) {
        return "self.program(" + programParams.join(", ") + ")";
      } else {
        programParams.shift();
        return "self.programWithDepth(" + programParams.join(", ") + ")";
      }
    },

    register: function(name, val) {
      this.useRegister(name);
      this.source.push(name + " = " + val + ";");
    },

    useRegister: function(name) {
      if(!this.registers[name]) {
        this.registers[name] = true;
        this.registers.list.push(name);
      }
    },

    pushStackLiteral: function(item) {
      this.compileStack.push(new Literal(item));
      return item;
    },

    pushStack: function(item) {
      this.source.push(this.incrStack() + " = " + item + ";");
      this.compileStack.push("stack" + this.stackSlot);
      return "stack" + this.stackSlot;
    },

    replaceStack: function(callback) {
      var item = callback.call(this, this.topStack());

      this.source.push(this.topStack() + " = " + item + ";");
      return "stack" + this.stackSlot;
    },

    nextStack: function(skipCompileStack) {
      var name = this.incrStack();
      this.compileStack.push("stack" + this.stackSlot);
      return name;
    },

    incrStack: function() {
      this.stackSlot++;
      if(this.stackSlot > this.stackVars.length) { this.stackVars.push("stack" + this.stackSlot); }
      return "stack" + this.stackSlot;
    },

    popStack: function() {
      var item = this.compileStack.pop();

      if (item instanceof Literal) {
        return item.value;
      } else {
        this.stackSlot--;
        return item;
      }
    },

    topStack: function() {
      var item = this.compileStack[this.compileStack.length - 1];

      if (item instanceof Literal) {
        return item.value;
      } else {
        return item;
      }
    },

    quotedString: function(str) {
      return '"' + str
        .replace(/\\/g, '\\\\')
        .replace(/"/g, '\\"')
        .replace(/\n/g, '\\n')
        .replace(/\r/g, '\\r') + '"';
    },

    setupHelper: function(paramSize, name) {
      var params = [];
      this.setupParams(paramSize, params);
      var foundHelper = this.nameLookup('helpers', name, 'helper');

      return {
        params: params,
        name: foundHelper,
        callParams: ["depth0"].concat(params).join(", "),
        helperMissingParams: ["depth0", this.quotedString(name)].concat(params).join(", ")
      };
    },

    // the params and contexts arguments are passed in arrays
    // to fill in
    setupParams: function(paramSize, params) {
      var options = [], contexts = [], param, inverse, program;

      options.push("hash:" + this.popStack());

      inverse = this.popStack();
      program = this.popStack();

      // Avoid setting fn and inverse if neither are set. This allows
      // helpers to do a check for `if (options.fn)`
      if (program || inverse) {
        if (!program) {
          this.context.aliases.self = "this";
          program = "self.noop";
        }

        if (!inverse) {
         this.context.aliases.self = "this";
          inverse = "self.noop";
        }

        options.push("inverse:" + inverse);
        options.push("fn:" + program);
      }

      for(var i=0; i<paramSize; i++) {
        param = this.popStack();
        params.push(param);

        if(this.options.stringParams) {
          contexts.push(this.popStack());
        }
      }

      if (this.options.stringParams) {
        options.push("contexts:[" + contexts.join(",") + "]");
      }

      if(this.options.data) {
        options.push("data:data");
      }

      params.push("{" + options.join(",") + "}");
      return params.join(", ");
    }
  };

  var reservedWords = (
    "break else new var" +
    " case finally return void" +
    " catch for switch while" +
    " continue function this with" +
    " default if throw" +
    " delete in try" +
    " do instanceof typeof" +
    " abstract enum int short" +
    " boolean export interface static" +
    " byte extends long super" +
    " char final native synchronized" +
    " class float package throws" +
    " const goto private transient" +
    " debugger implements protected volatile" +
    " double import public let yield"
  ).split(" ");

  var compilerWords = JavaScriptCompiler.RESERVED_WORDS = {};

  for(var i=0, l=reservedWords.length; i<l; i++) {
    compilerWords[reservedWords[i]] = true;
  }

  JavaScriptCompiler.isValidJavaScriptVariableName = function(name) {
    if(!JavaScriptCompiler.RESERVED_WORDS[name] && /^[a-zA-Z_$][0-9a-zA-Z_$]+$/.test(name)) {
      return true;
    }
    return false;
  };

})(Handlebars.Compiler, Handlebars.JavaScriptCompiler);

Handlebars.precompile = function(string, options) {
  options = options || {};

  var ast = Handlebars.parse(string);
  var environment = new Handlebars.Compiler().compile(ast, options);
  return new Handlebars.JavaScriptCompiler().compile(environment, options);
};

Handlebars.compile = function(string, options) {
  options = options || {};

  var compiled;
  function compile() {
    var ast = Handlebars.parse(string);
    var environment = new Handlebars.Compiler().compile(ast, options);
    var templateSpec = new Handlebars.JavaScriptCompiler().compile(environment, options, undefined, true);
    return Handlebars.template(templateSpec);
  }

  // Template is only compiled on first use and cached after that point.
  return function(context, options) {
    if (!compiled) {
      compiled = compile();
    }
    return compiled.call(this, context, options);
  };
};
;
// lib/handlebars/runtime.js
Handlebars.VM = {
  template: function(templateSpec) {
    // Just add water
    var container = {
      escapeExpression: Handlebars.Utils.escapeExpression,
      invokePartial: Handlebars.VM.invokePartial,
      programs: [],
      program: function(i, fn, data) {
        var programWrapper = this.programs[i];
        if(data) {
          return Handlebars.VM.program(fn, data);
        } else if(programWrapper) {
          return programWrapper;
        } else {
          programWrapper = this.programs[i] = Handlebars.VM.program(fn);
          return programWrapper;
        }
      },
      programWithDepth: Handlebars.VM.programWithDepth,
      noop: Handlebars.VM.noop
    };

    return function(context, options) {
      options = options || {};
      return templateSpec.call(container, Handlebars, context, options.helpers, options.partials, options.data);
    };
  },

  programWithDepth: function(fn, data, $depth) {
    var args = Array.prototype.slice.call(arguments, 2);

    return function(context, options) {
      options = options || {};

      return fn.apply(this, [context, options.data || data].concat(args));
    };
  },
  program: function(fn, data) {
    return function(context, options) {
      options = options || {};

      return fn(context, options.data || data);
    };
  },
  noop: function() { return ""; },
  invokePartial: function(partial, name, context, helpers, partials, data) {
    var options = { helpers: helpers, partials: partials, data: data };

    if(partial === undefined) {
      throw new Handlebars.Exception("The partial " + name + " could not be found");
    } else if(partial instanceof Function) {
      return partial(context, options);
    } else if (!Handlebars.compile) {
      throw new Handlebars.Exception("The partial " + name + " could not be compiled when running in runtime-only mode");
    } else {
      partials[name] = Handlebars.compile(partial, {data: data !== undefined});
      return partials[name](context, options);
    }
  }
};

Handlebars.template = Handlebars.VM.template;
;

//jshint eqeqeq:false

define('core/view',['require','underscore','handlebars'],function(require) {

	var _ = require('underscore');
	var Handlebars = require('handlebars');

	/**************
	 * HANDLEBARS *
	 **************/

	Handlebars.registerHelper('equals', function(value, expected, options) {
		return Handlebars.helpers['if'].call(this, value == expected, options);
	});

	Handlebars.registerHelper('unless_equals', function(value, expected, options) {
		return Handlebars.helpers.unless.call(this, value == expected, options);
	});

	Handlebars.registerHelper('if_contains', function(value, expected, options) {
		return Handlebars.helpers['if'].call(this, value && (value.indexOf(expected) !== -1), options);
	});

	Handlebars.registerHelper('unless_contains', function(value, expected, options) {
		return Handlebars.helpers.unless.call(this, value && (value.indexOf(expected) !== -1), options);
	});

	Handlebars.registerHelper('date', function(value, format) {
		var date = typeof value === 'number' ? moment.unix(value) : moment(value);

		if (format === 'from now')
			return date.fromNow();

		return date.format(typeof format === 'string' ? format : 'L');
	});

	Handlebars.registerHelper('enum', function(value, id) {
		if (enums[id])
			return enums[id].fromValue(value);
		else
			return window[id][value];
	});

	Handlebars.registerHelper('rate', function(rate) {
		return (rate === -1) ? new Handlebars.SafeString('-') : new Handlebars.SafeString(rate + '%');
	});

	var originalEach = Handlebars.helpers.each;
	Handlebars.registerHelper('each', function(context, options) {
		if (context instanceof Array) {
			context = context.map(function(item, index) {
				return _.extend({}, item, {
					self: item,
					index: index,
					indexPlusOne: index + 1,
					indexMinusOne: index - 1,
					first: index === 0,
					last: index === context.length - 1,
					secondLast: index === context.length - 2,
				});
			});
		}

		return originalEach.call(this, context, options);
	});

	Handlebars.registerHelper('range', function(start, end, modificator, options) {
		if (arguments.length === 3) {
			options = modificator;
			modificator = 1;
		} else if (arguments.length === 2) {
			options = end;
			modificator = 1;
			end = start;
			start = 1;
		} else {
			modificator = +modificator;
		}

		var checker = modificator > 0 ?
			function(a) { return a <= end; } :
			function(a) { return a >= end; };

		var arr = [];
		for (var i = start; checker(i); i += modificator)
			arr.push(i);

		return Handlebars.helpers.each.call(this, arr, options);
	});

	Handlebars.registerHelper('selected', function(option, value) {
		if (option == value) {
			return new Handlebars.SafeString(' selected');
		} else {
			return '';
		}
	});

	Handlebars.registerHelper('checked', function(option, value) {
		if (option == value) {
			return new Handlebars.SafeString(' checked="checked"');
		} else {
			return '';
		}
	});


	/*********
	 * ENUMS *
	 *********/

	function enumerate(values) {
		var inverse = _.object(_.values(values), _.keys(values));
		var map = values;

		if (values instanceof Array) {
			var tmp = map;
			map = inverse;
			inverse = tmp;
		}

		map.fromValue = function(value) {
			return inverse[value];
		};
		return map;
	}

	var enums = {
		'notification-type': enumerate({
			Request: 'request',
			Invitation: 'invite',
			Message: 'message'
		}),

		'notification-state': enumerate({
			pending: 'P',
			maybe: 'M',
			accepted: 'A',
			denied: 'D',
		}),

	};


	/*****************
	 * VIEW FUNCTION *
	 *****************/

	return function(text) {
		var compiled = Handlebars.compile(text);

		return function(data) {
			if (arguments.length > 1)
				data = _.extend.apply(_, [{}].concat(_.toArray(arguments)));
			return compiled(data ||   {});
		};
	};
});

define('tmpl',['require','text','core/view'],function(require) {

	var text = require('text');
	var view = require('core/view');

	var cache = {};

	function load(name, parentRequire, done, config) {
		text.load(name, parentRequire, function(template) {
			cache[name] = template;
			done(view(template));
		}, config);
	}

	function write(pluginName, moduleName, write, config) {
		write.asModule(pluginName + "!" + moduleName, [
			"define([ 'core/view' ], function(view) {",
				"return view('",
					text.jsEscape(cache[moduleName]),
				"');",
			"});"
		].join(""));
	}

	return {
		load: load,
		write: write,
	};
});

define('tmpl!templates/lib/alert2.html',[ 'core/view' ], function(view) {return view('<div class="alert {{#if options.block }}alert-block{{/if}} {{#if type }}alert-{{ type }}{{/if}}">\n\t{{#unless options.noClose }}\n\t\t<button type="button" class="close" data-dismiss="alert">×</button>\n\t{{/unless}}\n  <!--   <h2>{{ title }}</h2> -->\n  <p>{{{ content }}}</p>\n</div>\n');});
define('views/lib/alerts',['require','tmpl!templates/lib/alert2.html'],function(require) {

	var template = require('tmpl!templates/lib/alert2.html');

	var lastAlert;

	function showAlert(type, content, options) {
		var title;
		if (typeof options === 'string') {
			title = content;
			content = options;
			options = arguments[3];
		}

		options = options || {};
		if (!('autoclose' in options))
			options.autoclose = 60000;

		var alert = $(template({
			type: type,
			title: title,
			content: content,
			options: options,
		}));

		if (lastAlert)
			lastAlert.alert('close');

		lastAlert = alert;

		$('#alerts-container').append(alert);

		if (options.autoclose)
			setTimeout(function() { alert.alert('close'); }, options.autoclose);

		alert.alert();
		return alert;
	}

	return {
		success: showAlert.bind(null, 'success'),
		info: showAlert.bind(null, 'info'),
		warning: showAlert.bind(null, null),
		error: showAlert.bind(null, 'error'),
		defaultError: showAlert.bind(null, 'error', 'Sorry, an error ocurred, it has been reported'),
	};

});

define('views/lib/spinner',[],function() {

	var options = {
		lines: 13, // The number of lines to draw
		length: 3, // The length of each line
		width: 1, // The line thickness
		radius: 7, // The radius of the inner circle
		corners: 1, // Corner roundness (0..1)
		rotate: 0, // The rotation offset
		color: '#000', // #rgb or #rrggbb
		speed: 1, // Rounds per second
		trail: 60, // Afterglow percentage
		shadow: false, // Whether to render a shadow
		hwaccel: false, // Whether to use hardware acceleration
		className: 'spinner', // The CSS class to assign to the spinner
		zIndex: 2e9, // The z-index (defaults to 2000000000)
		top: 'auto', // Top position relative to parent in px
		left: 'auto' // Left position relative to parent in px
	};
	var spinner = new Spinner(options);
	var spinners = [];
	var timers = {};

	function show(id) {
		spinners.push(id);
		spinner.spin($('#mini-spinner').get(0));
		$('#mini-spinner span').show();
	}

	function hide(id) {
		clearTimeout(timers[id]);
		spinners = spinners.filter(function(a) {
			return a !== id;
		});

		if (!spinners.length) {
			spinner.stop();
			$('#mini-spinner span').hide();
		}
	}

	function showAfter(id, time) {
		if (!time)
			return show(id);
		timers[id] = setTimeout(show.bind(null, id), time);
	}


	return {
		show: showAfter,
		hide: hide,
		options: options,
	};
});

define('config',[],function() {

	var Config = {
		Local: {
			domain: 'localhost',
			server: 'http://peoplewings-be-development.herokuapp.com',
			apiVersion: '/api/v1',
		},
		Test: {
			domain: 'test.peoplewings.com',
			server: 'http://peoplewings-be-test.herokuapp.com',
			apiVersion: '/api/v1',
		},
		Alpha: {
			domain: 'alpha.peoplewings.com',
			server: 'http://peoplewings-be-alpha.herokuapp.com',
			apiVersion: '/api/v1',
		},
	};

	return {
		getValue: function(key) {
			var env;
			switch (window.location.hostname) {
				case "localhost":
				case "peoplewings":
				case "0.0.0.0":
				case "127.0.0.1":
					env = 'Local';
					break;
				//case: 'pw-test-bucket',
				case "test.peoplewings.com":
					env = 'Test';
					break;
				case "peoplewings-alpha.herokuapp.com":
				case "alpha.peoplewings.com":
					env = 'Alpha';
					break;
				default:
					throw ('Unknown environment: ' + window.location.hostname);
			}
			return Config[env][key];
		}
	};
});
define('api2',['require','underscore','promise','views/lib/alerts','views/lib/spinner','config'],function(require) {

	var _ = require('underscore');
	var Promise = require('promise');
	var alerts = require('views/lib/alerts');
	var spinner = require('views/lib/spinner');
	var config = require("config");

	var server = config.getValue('server');
	var apiVersion = config.getValue('apiVersion');

	function logout() {
		alerts.error('Your session has expired');
		localStorage.removeItem("Peoplewings-Auth-Token");
		document.location.hash = '/login';
		document.location.reload();
		// jsHint se queja de que se asigne un valor a una función
		//jshint -W021
		logout = function() { };
	}

	var updateListeners = {};

	function parseUpdates(updates) {
		_.each(updates, function(value, key) {
			var listeners = updateListeners[key];
			if (!listeners)
				return;

			listeners.forEach(function(listener) {
				listener(value);
			});
		});
	}

	function registerUpdateListener(type, callback) {
		if (!updateListeners[type])
			updateListeners[type] = [];

		updateListeners[type].push(callback);
	}

	function simpleRequest(method, url, headers, body) {
		var prom = new Promise();
		var xhr = new XMLHttpRequest();
		xhr.open(method, url, true);

		_.each(headers, function(value, key) {
			xhr.setRequestHeader(key, value);
		});

		xhr.onreadystatechange = function() {
			if(xhr.readyState === 4)
				prom.resolve(xhr);
		};

		xhr.send(body);
		return prom.future;
	}


	function request(method, uri, body) {
		var reqId = _.uniqueId('request');
		var prom = new Promise();
		var url = server + uri;
		var xhr = new XMLHttpRequest();
		var requestBody = null;

		var resource = /\/api\/v1\/(\w+)/.exec(uri)[1];
		if (resource !== 'control')
			spinner.show(reqId, 1000);
		xhr.open(method, url, true);

		xhr.onreadystatechange = function() {
			if(xhr.readyState === 4) {
				spinner.hide(reqId);

				if (xhr.status === 401)
					return logout();

				pooling.restart();

				var response;
				try {
					response = JSON.parse(xhr.responseText);
				} catch(err) {
					console.error('Invalid JSON (', uri, '): ', xhr.responseText);
					return prom.reject(err);
				}

				if (response.updates)
					parseUpdates(response.updates);

				if (response.status)
					return prom.resolve(response);

				// ANALYZE ERROR

				if (!response.errors || !response.errors.length) {
					prom.reject(new Error('Server error'));
					alerts.error('ERROR', 'Sorry an error ocurred');
					return;
				}

				var errorOptions = {autoclose:60000};

				response.errors.forEach(function(error) {
					switch (error.type) {
						case 'AUTH_REQUIRED':
							logout();
							break;

						case 'INVALID_USER_OR_PASS':
							alerts.error('Wrong email or password', errorOptions);
							break;

						case 'INACTIVE_USER':
							alerts.error('Your account is not activated. Please check your email inbox', errorOptions);
							break;

						case 'EXPIRED_KEY':
							alerts.error('Your key has expired.', errorOptions);
							break;

						case 'USED_KEY':
							alerts.error('This key is already activated.', errorOptions);
							break;

						case 'EMAIL_IN_USE':
							alerts.error('The gicen email is already in use', errorOptions);
							break;
						case 'INCORRECT_PASSWORD':
							alerts.error('Incorrect password', errorOptions);
							break;
						case 'UNDERAGE':
							prom.resolve({"errors": [{"type": "UNDERAGE"}], "status": false});
							break;
						case 'INVALID':
							if (error.extras.length === 1)
								alerts.error('Invalid field ' + error.extras[0], errorOptions);
							else
								debugger;
							break;
						case 'BAD_REQUEST':
						case 'FIELD_REQUIRED':
						case 'FORBIDDEN':
						case 'INTERNAL_ERROR':
						case 'INVALID_FIELD':
						case 'JSON_ERROR':
						case 'METHOD_NOT_ALLOWED':
						case 'NO_CONTENT':
						case 'NOT_EMPTY':
						case 'START_DATE_GT_END_DATE':
						case 'TOO_LONG':
						case 'VALIDATION_ERROR':
							alerts.error(JSON.stringify(error, null, '\t'), {autoclose:0});
							break;

						default:
							alerts.error('UNKNOWN ERROR TYPE:\n' + JSON.stringify(error, null, '\t'), {autoclose:0});
					}
				});

				prom.reject(response.errors);
			}
		};

		if(body) {
			requestBody = JSON.stringify(body);
			xhr.setRequestHeader("Content-Type", "application/json; charset=utf-8");
		}
		if(loadAuthToken()) {
			xhr.setRequestHeader("X-Auth-Token", JSON.parse(loadAuthToken()).auth);
		}

		xhr.send(requestBody);
		return prom.future;
	}

	function addParams(url, params) {
		return url + '?' + _.map(params, function(value, key) {
			return encodeURIComponent(key) + '=' + encodeURIComponent(value);
		}).join('&');
	}

	function loadAuthToken() {
		return localStorage.getItem("Peoplewings-Auth-Token");
	}

	var pooling = {
		// seconds
		interval: 60,

		start: function() {
			this.timeout = setTimeout(this.tick, this.interval * 1000);
		},

		stop: function() {
			clearTimeout(this.timeout);
		},

		restart: function() {
			this.stop();
			this.start();
		},

		tick: function() {
			this.stop();
			if (loadAuthToken())
				request('GET', apiVersion + '/control');
		}
	};
	pooling.tick = pooling.tick.bind(pooling);
	pooling.start();


	return {
		request: simpleRequest,

		delete: function(uri, body) {
			return request('DELETE', uri, body);
		},
		put: function(uri, body) {
			return request('PUT', uri, body);
		},
		post: function(uri, body) {
			return request('POST', uri, body);
		},
		get: function(uri, params) {
			return request('GET', addParams(uri, params), null);
		},

		listenUpdate: registerUpdateListener,

		urlEncode: function(params){
			return addParams("", params);
		},
		saveAuthToken: function(authToken) {
			localStorage.setItem("Peoplewings-Auth-Token", authToken);
		},
		clearAuthToken: function() {
			localStorage.removeItem("Peoplewings-Auth-Token");
		},
		userIsLoggedIn: function() {
			return loadAuthToken() != null;
		},
		getServerUrl: function() {
			return server;
		},
		getApiVersion: function() {
			return apiVersion;
		},
		getUserId: function() {
			if(loadAuthToken() != null) return JSON.parse(loadAuthToken()).uid;
		},
		getAuthToken: function() {
			if(loadAuthToken() != null) return JSON.parse(loadAuthToken()).auth;
		}
	};

});

/*! jQuery UI - v1.9.1 - 2012-11-14
* http://jqueryui.com
* Includes: jquery.ui.core.js, jquery.ui.datepicker.js
* Copyright (c) 2012 jQuery Foundation and other contributors Licensed MIT */

(function(e,t){function i(t,n){var r,i,o,u=t.nodeName.toLowerCase();return"area"===u?(r=t.parentNode,i=r.name,!t.href||!i||r.nodeName.toLowerCase()!=="map"?!1:(o=e("img[usemap=#"+i+"]")[0],!!o&&s(o))):(/input|select|textarea|button|object/.test(u)?!t.disabled:"a"===u?t.href||n:n)&&s(t)}function s(t){return e.expr.filters.visible(t)&&!e(t).parents().andSelf().filter(function(){return e.css(this,"visibility")==="hidden"}).length}var n=0,r=/^ui-id-\d+$/;e.ui=e.ui||{};if(e.ui.version)return;e.extend(e.ui,{version:"1.9.1",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({_focus:e.fn.focus,focus:function(t,n){return typeof t=="number"?this.each(function(){var r=this;setTimeout(function(){e(r).focus(),n&&n.call(r)},t)}):this._focus.apply(this,arguments)},scrollParent:function(){var t;return e.ui.ie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?t=this.parents().filter(function(){return/(relative|absolute|fixed)/.test(e.css(this,"position"))&&/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0):t=this.parents().filter(function(){return/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0),/fixed/.test(this.css("position"))||!t.length?e(document):t},zIndex:function(n){if(n!==t)return this.css("zIndex",n);if(this.length){var r=e(this[0]),i,s;while(r.length&&r[0]!==document){i=r.css("position");if(i==="absolute"||i==="relative"||i==="fixed"){s=parseInt(r.css("zIndex"),10);if(!isNaN(s)&&s!==0)return s}r=r.parent()}}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++n)})},removeUniqueId:function(){return this.each(function(){r.test(this.id)&&e(this).removeAttr("id")})}}),e("<a>").outerWidth(1).jquery||e.each(["Width","Height"],function(n,r){function u(t,n,r,s){return e.each(i,function(){n-=parseFloat(e.css(t,"padding"+this))||0,r&&(n-=parseFloat(e.css(t,"border"+this+"Width"))||0),s&&(n-=parseFloat(e.css(t,"margin"+this))||0)}),n}var i=r==="Width"?["Left","Right"]:["Top","Bottom"],s=r.toLowerCase(),o={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+r]=function(n){return n===t?o["inner"+r].call(this):this.each(function(){e(this).css(s,u(this,n)+"px")})},e.fn["outer"+r]=function(t,n){return typeof t!="number"?o["outer"+r].call(this,t):this.each(function(){e(this).css(s,u(this,t,!0,n)+"px")})}}),e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(n){return!!e.data(n,t)}}):function(t,n,r){return!!e.data(t,r[3])},focusable:function(t){return i(t,!isNaN(e.attr(t,"tabindex")))},tabbable:function(t){var n=e.attr(t,"tabindex"),r=isNaN(n);return(r||n>=0)&&i(t,!r)}}),e(function(){var t=document.body,n=t.appendChild(n=document.createElement("div"));n.offsetHeight,e.extend(n.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0}),e.support.minHeight=n.offsetHeight===100,e.support.selectstart="onselectstart"in n,t.removeChild(n).style.display="none"}),function(){var t=/msie ([\w.]+)/.exec(navigator.userAgent.toLowerCase())||[];e.ui.ie=t.length?!0:!1,e.ui.ie6=parseFloat(t[1],10)===6}(),e.fn.extend({disableSelection:function(){return this.bind((e.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),e.extend(e.ui,{plugin:{add:function(t,n,r){var i,s=e.ui[t].prototype;for(i in r)s.plugins[i]=s.plugins[i]||[],s.plugins[i].push([n,r[i]])},call:function(e,t,n){var r,i=e.plugins[t];if(!i||!e.element[0].parentNode||e.element[0].parentNode.nodeType===11)return;for(r=0;r<i.length;r++)e.options[i[r][0]]&&i[r][1].apply(e.element,n)}},contains:e.contains,hasScroll:function(t,n){if(e(t).css("overflow")==="hidden")return!1;var r=n&&n==="left"?"scrollLeft":"scrollTop",i=!1;return t[r]>0?!0:(t[r]=1,i=t[r]>0,t[r]=0,i)},isOverAxis:function(e,t,n){return e>t&&e<t+n},isOver:function(t,n,r,i,s,o){return e.ui.isOverAxis(t,r,s)&&e.ui.isOverAxis(n,i,o)}})})(jQuery);(function($,undefined){function Datepicker(){this.debug=!1,this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},$.extend(this._defaults,this.regional[""]),this.dpDiv=bindHover($('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}function bindHover(e){var t="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return e.delegate(t,"mouseout",function(){$(this).removeClass("ui-state-hover"),this.className.indexOf("ui-datepicker-prev")!=-1&&$(this).removeClass("ui-datepicker-prev-hover"),this.className.indexOf("ui-datepicker-next")!=-1&&$(this).removeClass("ui-datepicker-next-hover")}).delegate(t,"mouseover",function(){$.datepicker._isDisabledDatepicker(instActive.inline?e.parent()[0]:instActive.input[0])||($(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),$(this).addClass("ui-state-hover"),this.className.indexOf("ui-datepicker-prev")!=-1&&$(this).addClass("ui-datepicker-prev-hover"),this.className.indexOf("ui-datepicker-next")!=-1&&$(this).addClass("ui-datepicker-next-hover"))})}function extendRemove(e,t){$.extend(e,t);for(var n in t)if(t[n]==null||t[n]==undefined)e[n]=t[n];return e}$.extend($.ui,{datepicker:{version:"1.9.1"}});var PROP_NAME="datepicker",dpuuid=(new Date).getTime(),instActive;$.extend(Datepicker.prototype,{markerClassName:"hasDatepicker",maxRows:4,log:function(){this.debug&&console.log.apply("",arguments)},_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(e){return extendRemove(this._defaults,e||{}),this},_attachDatepicker:function(target,settings){var inlineSettings=null;for(var attrName in this._defaults){var attrValue=target.getAttribute("date:"+attrName);if(attrValue){inlineSettings=inlineSettings||{};try{inlineSettings[attrName]=eval(attrValue)}catch(err){inlineSettings[attrName]=attrValue}}}var nodeName=target.nodeName.toLowerCase(),inline=nodeName=="div"||nodeName=="span";target.id||(this.uuid+=1,target.id="dp"+this.uuid);var inst=this._newInst($(target),inline);inst.settings=$.extend({},settings||{},inlineSettings||{}),nodeName=="input"?this._connectDatepicker(target,inst):inline&&this._inlineDatepicker(target,inst)},_newInst:function(e,t){var n=e[0].id.replace(/([^A-Za-z0-9_-])/g,"\\\\$1");return{id:n,input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:t,dpDiv:t?bindHover($('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')):this.dpDiv}},_connectDatepicker:function(e,t){var n=$(e);t.append=$([]),t.trigger=$([]);if(n.hasClass(this.markerClassName))return;this._attachments(n,t),n.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",function(e,n,r){t.settings[n]=r}).bind("getData.datepicker",function(e,n){return this._get(t,n)}),this._autoSize(t),$.data(e,PROP_NAME,t),t.settings.disabled&&this._disableDatepicker(e)},_attachments:function(e,t){var n=this._get(t,"appendText"),r=this._get(t,"isRTL");t.append&&t.append.remove(),n&&(t.append=$('<span class="'+this._appendClass+'">'+n+"</span>"),e[r?"before":"after"](t.append)),e.unbind("focus",this._showDatepicker),t.trigger&&t.trigger.remove();var i=this._get(t,"showOn");(i=="focus"||i=="both")&&e.focus(this._showDatepicker);if(i=="button"||i=="both"){var s=this._get(t,"buttonText"),o=this._get(t,"buttonImage");t.trigger=$(this._get(t,"buttonImageOnly")?$("<img/>").addClass(this._triggerClass).attr({src:o,alt:s,title:s}):$('<button type="button"></button>').addClass(this._triggerClass).html(o==""?s:$("<img/>").attr({src:o,alt:s,title:s}))),e[r?"before":"after"](t.trigger),t.trigger.click(function(){return $.datepicker._datepickerShowing&&$.datepicker._lastInput==e[0]?$.datepicker._hideDatepicker():$.datepicker._datepickerShowing&&$.datepicker._lastInput!=e[0]?($.datepicker._hideDatepicker(),$.datepicker._showDatepicker(e[0])):$.datepicker._showDatepicker(e[0]),!1})}},_autoSize:function(e){if(this._get(e,"autoSize")&&!e.inline){var t=new Date(2009,11,20),n=this._get(e,"dateFormat");if(n.match(/[DM]/)){var r=function(e){var t=0,n=0;for(var r=0;r<e.length;r++)e[r].length>t&&(t=e[r].length,n=r);return n};t.setMonth(r(this._get(e,n.match(/MM/)?"monthNames":"monthNamesShort"))),t.setDate(r(this._get(e,n.match(/DD/)?"dayNames":"dayNamesShort"))+20-t.getDay())}e.input.attr("size",this._formatDate(e,t).length)}},_inlineDatepicker:function(e,t){var n=$(e);if(n.hasClass(this.markerClassName))return;n.addClass(this.markerClassName).append(t.dpDiv).bind("setData.datepicker",function(e,n,r){t.settings[n]=r}).bind("getData.datepicker",function(e,n){return this._get(t,n)}),$.data(e,PROP_NAME,t),this._setDate(t,this._getDefaultDate(t),!0),this._updateDatepicker(t),this._updateAlternate(t),t.settings.disabled&&this._disableDatepicker(e),t.dpDiv.css("display","block")},_dialogDatepicker:function(e,t,n,r,i){var s=this._dialogInst;if(!s){this.uuid+=1;var o="dp"+this.uuid;this._dialogInput=$('<input type="text" id="'+o+'" style="position: absolute; top: -100px; width: 0px;"/>'),this._dialogInput.keydown(this._doKeyDown),$("body").append(this._dialogInput),s=this._dialogInst=this._newInst(this._dialogInput,!1),s.settings={},$.data(this._dialogInput[0],PROP_NAME,s)}extendRemove(s.settings,r||{}),t=t&&t.constructor==Date?this._formatDate(s,t):t,this._dialogInput.val(t),this._pos=i?i.length?i:[i.pageX,i.pageY]:null;if(!this._pos){var u=document.documentElement.clientWidth,a=document.documentElement.clientHeight,f=document.documentElement.scrollLeft||document.body.scrollLeft,l=document.documentElement.scrollTop||document.body.scrollTop;this._pos=[u/2-100+f,a/2-150+l]}return this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),s.settings.onSelect=n,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),$.blockUI&&$.blockUI(this.dpDiv),$.data(this._dialogInput[0],PROP_NAME,s),this},_destroyDatepicker:function(e){var t=$(e),n=$.data(e,PROP_NAME);if(!t.hasClass(this.markerClassName))return;var r=e.nodeName.toLowerCase();$.removeData(e,PROP_NAME),r=="input"?(n.append.remove(),n.trigger.remove(),t.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):(r=="div"||r=="span")&&t.removeClass(this.markerClassName).empty()},_enableDatepicker:function(e){var t=$(e),n=$.data(e,PROP_NAME);if(!t.hasClass(this.markerClassName))return;var r=e.nodeName.toLowerCase();if(r=="input")e.disabled=!1,n.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""});else if(r=="div"||r=="span"){var i=t.children("."+this._inlineClass);i.children().removeClass("ui-state-disabled"),i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)}this._disabledInputs=$.map(this._disabledInputs,function(t){return t==e?null:t})},_disableDatepicker:function(e){var t=$(e),n=$.data(e,PROP_NAME);if(!t.hasClass(this.markerClassName))return;var r=e.nodeName.toLowerCase();if(r=="input")e.disabled=!0,n.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"});else if(r=="div"||r=="span"){var i=t.children("."+this._inlineClass);i.children().addClass("ui-state-disabled"),i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)}this._disabledInputs=$.map(this._disabledInputs,function(t){return t==e?null:t}),this._disabledInputs[this._disabledInputs.length]=e},_isDisabledDatepicker:function(e){if(!e)return!1;for(var t=0;t<this._disabledInputs.length;t++)if(this._disabledInputs[t]==e)return!0;return!1},_getInst:function(e){try{return $.data(e,PROP_NAME)}catch(t){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(e,t,n){var r=this._getInst(e);if(arguments.length==2&&typeof t=="string")return t=="defaults"?$.extend({},$.datepicker._defaults):r?t=="all"?$.extend({},r.settings):this._get(r,t):null;var i=t||{};typeof t=="string"&&(i={},i[t]=n);if(r){this._curInst==r&&this._hideDatepicker();var s=this._getDateDatepicker(e,!0),o=this._getMinMaxDate(r,"min"),u=this._getMinMaxDate(r,"max");extendRemove(r.settings,i),o!==null&&i.dateFormat!==undefined&&i.minDate===undefined&&(r.settings.minDate=this._formatDate(r,o)),u!==null&&i.dateFormat!==undefined&&i.maxDate===undefined&&(r.settings.maxDate=this._formatDate(r,u)),this._attachments($(e),r),this._autoSize(r),this._setDate(r,s),this._updateAlternate(r),this._updateDatepicker(r)}},_changeDatepicker:function(e,t,n){this._optionDatepicker(e,t,n)},_refreshDatepicker:function(e){var t=this._getInst(e);t&&this._updateDatepicker(t)},_setDateDatepicker:function(e,t){var n=this._getInst(e);n&&(this._setDate(n,t),this._updateDatepicker(n),this._updateAlternate(n))},_getDateDatepicker:function(e,t){var n=this._getInst(e);return n&&!n.inline&&this._setDateFromField(n,t),n?this._getDate(n):null},_doKeyDown:function(e){var t=$.datepicker._getInst(e.target),n=!0,r=t.dpDiv.is(".ui-datepicker-rtl");t._keyEvent=!0;if($.datepicker._datepickerShowing)switch(e.keyCode){case 9:$.datepicker._hideDatepicker(),n=!1;break;case 13:var i=$("td."+$.datepicker._dayOverClass+":not(."+$.datepicker._currentClass+")",t.dpDiv);i[0]&&$.datepicker._selectDay(e.target,t.selectedMonth,t.selectedYear,i[0]);var s=$.datepicker._get(t,"onSelect");if(s){var o=$.datepicker._formatDate(t);s.apply(t.input?t.input[0]:null,[o,t])}else $.datepicker._hideDatepicker();return!1;case 27:$.datepicker._hideDatepicker();break;case 33:$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,"stepBigMonths"):-$.datepicker._get(t,"stepMonths"),"M");break;case 34:$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,"stepBigMonths"):+$.datepicker._get(t,"stepMonths"),"M");break;case 35:(e.ctrlKey||e.metaKey)&&$.datepicker._clearDate(e.target),n=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&$.datepicker._gotoToday(e.target),n=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,r?1:-1,"D"),n=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,"stepBigMonths"):-$.datepicker._get(t,"stepMonths"),"M");break;case 38:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,-7,"D"),n=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,r?-1:1,"D"),n=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,"stepBigMonths"):+$.datepicker._get(t,"stepMonths"),"M");break;case 40:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,7,"D"),n=e.ctrlKey||e.metaKey;break;default:n=!1}else e.keyCode==36&&e.ctrlKey?$.datepicker._showDatepicker(this):n=!1;n&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(e){var t=$.datepicker._getInst(e.target);if($.datepicker._get(t,"constrainInput")){var n=$.datepicker._possibleChars($.datepicker._get(t,"dateFormat")),r=String.fromCharCode(e.charCode==undefined?e.keyCode:e.charCode);return e.ctrlKey||e.metaKey||r<" "||!n||n.indexOf(r)>-1}},_doKeyUp:function(e){var t=$.datepicker._getInst(e.target);if(t.input.val()!=t.lastVal)try{var n=$.datepicker.parseDate($.datepicker._get(t,"dateFormat"),t.input?t.input.val():null,$.datepicker._getFormatConfig(t));n&&($.datepicker._setDateFromField(t),$.datepicker._updateAlternate(t),$.datepicker._updateDatepicker(t))}catch(r){$.datepicker.log(r)}return!0},_showDatepicker:function(e){e=e.target||e,e.nodeName.toLowerCase()!="input"&&(e=$("input",e.parentNode)[0]);if($.datepicker._isDisabledDatepicker(e)||$.datepicker._lastInput==e)return;var t=$.datepicker._getInst(e);$.datepicker._curInst&&$.datepicker._curInst!=t&&($.datepicker._curInst.dpDiv.stop(!0,!0),t&&$.datepicker._datepickerShowing&&$.datepicker._hideDatepicker($.datepicker._curInst.input[0]));var n=$.datepicker._get(t,"beforeShow"),r=n?n.apply(e,[e,t]):{};if(r===!1)return;extendRemove(t.settings,r),t.lastVal=null,$.datepicker._lastInput=e,$.datepicker._setDateFromField(t),$.datepicker._inDialog&&(e.value=""),$.datepicker._pos||($.datepicker._pos=$.datepicker._findPos(e),$.datepicker._pos[1]+=e.offsetHeight);var i=!1;$(e).parents().each(function(){return i|=$(this).css("position")=="fixed",!i});var s={left:$.datepicker._pos[0],top:$.datepicker._pos[1]};$.datepicker._pos=null,t.dpDiv.empty(),t.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),$.datepicker._updateDatepicker(t),s=$.datepicker._checkOffset(t,s,i),t.dpDiv.css({position:$.datepicker._inDialog&&$.blockUI?"static":i?"fixed":"absolute",display:"none",left:s.left+"px",top:s.top+"px"});if(!t.inline){var o=$.datepicker._get(t,"showAnim"),u=$.datepicker._get(t,"duration"),a=function(){var e=t.dpDiv.find("iframe.ui-datepicker-cover");if(!!e.length){var n=$.datepicker._getBorders(t.dpDiv);e.css({left:-n[0],top:-n[1],width:t.dpDiv.outerWidth(),height:t.dpDiv.outerHeight()})}};t.dpDiv.zIndex($(e).zIndex()+1),$.datepicker._datepickerShowing=!0,$.effects&&($.effects.effect[o]||$.effects[o])?t.dpDiv.show(o,$.datepicker._get(t,"showOptions"),u,a):t.dpDiv[o||"show"](o?u:null,a),(!o||!u)&&a(),t.input.is(":visible")&&!t.input.is(":disabled")&&t.input.focus(),$.datepicker._curInst=t}},_updateDatepicker:function(e){this.maxRows=4;var t=$.datepicker._getBorders(e.dpDiv);instActive=e,e.dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var n=e.dpDiv.find("iframe.ui-datepicker-cover");!n.length||n.css({left:-t[0],top:-t[1],width:e.dpDiv.outerWidth(),height:e.dpDiv.outerHeight()}),e.dpDiv.find("."+this._dayOverClass+" a").mouseover();var r=this._getNumberOfMonths(e),i=r[1],s=17;e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),i>1&&e.dpDiv.addClass("ui-datepicker-multi-"+i).css("width",s*i+"em"),e.dpDiv[(r[0]!=1||r[1]!=1?"add":"remove")+"Class"]("ui-datepicker-multi"),e.dpDiv[(this._get(e,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),e==$.datepicker._curInst&&$.datepicker._datepickerShowing&&e.input&&e.input.is(":visible")&&!e.input.is(":disabled")&&e.input[0]!=document.activeElement&&e.input.focus();if(e.yearshtml){var o=e.yearshtml;setTimeout(function(){o===e.yearshtml&&e.yearshtml&&e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),o=e.yearshtml=null},0)}},_getBorders:function(e){var t=function(e){return{thin:1,medium:2,thick:3}[e]||e};return[parseFloat(t(e.css("border-left-width"))),parseFloat(t(e.css("border-top-width")))]},_checkOffset:function(e,t,n){var r=e.dpDiv.outerWidth(),i=e.dpDiv.outerHeight(),s=e.input?e.input.outerWidth():0,o=e.input?e.input.outerHeight():0,u=document.documentElement.clientWidth+(n?0:$(document).scrollLeft()),a=document.documentElement.clientHeight+(n?0:$(document).scrollTop());return t.left-=this._get(e,"isRTL")?r-s:0,t.left-=n&&t.left==e.input.offset().left?$(document).scrollLeft():0,t.top-=n&&t.top==e.input.offset().top+o?$(document).scrollTop():0,t.left-=Math.min(t.left,t.left+r>u&&u>r?Math.abs(t.left+r-u):0),t.top-=Math.min(t.top,t.top+i>a&&a>i?Math.abs(i+o):0),t},_findPos:function(e){var t=this._getInst(e),n=this._get(t,"isRTL");while(e&&(e.type=="hidden"||e.nodeType!=1||$.expr.filters.hidden(e)))e=e[n?"previousSibling":"nextSibling"];var r=$(e).offset();return[r.left,r.top]},_hideDatepicker:function(e){var t=this._curInst;if(!t||e&&t!=$.data(e,PROP_NAME))return;if(this._datepickerShowing){var n=this._get(t,"showAnim"),r=this._get(t,"duration"),i=function(){$.datepicker._tidyDialog(t)};$.effects&&($.effects.effect[n]||$.effects[n])?t.dpDiv.hide(n,$.datepicker._get(t,"showOptions"),r,i):t.dpDiv[n=="slideDown"?"slideUp":n=="fadeIn"?"fadeOut":"hide"](n?r:null,i),n||i(),this._datepickerShowing=!1;var s=this._get(t,"onClose");s&&s.apply(t.input?t.input[0]:null,[t.input?t.input.val():"",t]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),$.blockUI&&($.unblockUI(),$("body").append(this.dpDiv))),this._inDialog=!1}},_tidyDialog:function(e){e.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(e){if(!$.datepicker._curInst)return;var t=$(e.target),n=$.datepicker._getInst(t[0]);(t[0].id!=$.datepicker._mainDivId&&t.parents("#"+$.datepicker._mainDivId).length==0&&!t.hasClass($.datepicker.markerClassName)&&!t.closest("."+$.datepicker._triggerClass).length&&$.datepicker._datepickerShowing&&(!$.datepicker._inDialog||!$.blockUI)||t.hasClass($.datepicker.markerClassName)&&$.datepicker._curInst!=n)&&$.datepicker._hideDatepicker()},_adjustDate:function(e,t,n){var r=$(e),i=this._getInst(r[0]);if(this._isDisabledDatepicker(r[0]))return;this._adjustInstDate(i,t+(n=="M"?this._get(i,"showCurrentAtPos"):0),n),this._updateDatepicker(i)},_gotoToday:function(e){var t=$(e),n=this._getInst(t[0]);if(this._get(n,"gotoCurrent")&&n.currentDay)n.selectedDay=n.currentDay,n.drawMonth=n.selectedMonth=n.currentMonth,n.drawYear=n.selectedYear=n.currentYear;else{var r=new Date;n.selectedDay=r.getDate(),n.drawMonth=n.selectedMonth=r.getMonth(),n.drawYear=n.selectedYear=r.getFullYear()}this._notifyChange(n),this._adjustDate(t)},_selectMonthYear:function(e,t,n){var r=$(e),i=this._getInst(r[0]);i["selected"+(n=="M"?"Month":"Year")]=i["draw"+(n=="M"?"Month":"Year")]=parseInt(t.options[t.selectedIndex].value,10),this._notifyChange(i),this._adjustDate(r)},_selectDay:function(e,t,n,r){var i=$(e);if($(r).hasClass(this._unselectableClass)||this._isDisabledDatepicker(i[0]))return;var s=this._getInst(i[0]);s.selectedDay=s.currentDay=$("a",r).html(),s.selectedMonth=s.currentMonth=t,s.selectedYear=s.currentYear=n,this._selectDate(e,this._formatDate(s,s.currentDay,s.currentMonth,s.currentYear))},_clearDate:function(e){var t=$(e),n=this._getInst(t[0]);this._selectDate(t,"")},_selectDate:function(e,t){var n=$(e),r=this._getInst(n[0]);t=t!=null?t:this._formatDate(r),r.input&&r.input.val(t),this._updateAlternate(r);var i=this._get(r,"onSelect");i?i.apply(r.input?r.input[0]:null,[t,r]):r.input&&r.input.trigger("change"),r.inline?this._updateDatepicker(r):(this._hideDatepicker(),this._lastInput=r.input[0],typeof r.input[0]!="object"&&r.input.focus(),this._lastInput=null)},_updateAlternate:function(e){var t=this._get(e,"altField");if(t){var n=this._get(e,"altFormat")||this._get(e,"dateFormat"),r=this._getDate(e),i=this.formatDate(n,r,this._getFormatConfig(e));$(t).each(function(){$(this).val(i)})}},noWeekends:function(e){var t=e.getDay();return[t>0&&t<6,""]},iso8601Week:function(e){var t=new Date(e.getTime());t.setDate(t.getDate()+4-(t.getDay()||7));var n=t.getTime();return t.setMonth(0),t.setDate(1),Math.floor(Math.round((n-t)/864e5)/7)+1},parseDate:function(e,t,n){if(e==null||t==null)throw"Invalid arguments";t=typeof t=="object"?t.toString():t+"";if(t=="")return null;var r=(n?n.shortYearCutoff:null)||this._defaults.shortYearCutoff;r=typeof r!="string"?r:(new Date).getFullYear()%100+parseInt(r,10);var i=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,s=(n?n.dayNames:null)||this._defaults.dayNames,o=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,u=(n?n.monthNames:null)||this._defaults.monthNames,a=-1,f=-1,l=-1,c=-1,h=!1,p=function(t){var n=y+1<e.length&&e.charAt(y+1)==t;return n&&y++,n},d=function(e){var n=p(e),r=e=="@"?14:e=="!"?20:e=="y"&&n?4:e=="o"?3:2,i=new RegExp("^\\d{1,"+r+"}"),s=t.substring(g).match(i);if(!s)throw"Missing number at position "+g;return g+=s[0].length,parseInt(s[0],10)},v=function(e,n,r){var i=$.map(p(e)?r:n,function(e,t){return[[t,e]]}).sort(function(e,t){return-(e[1].length-t[1].length)}),s=-1;$.each(i,function(e,n){var r=n[1];if(t.substr(g,r.length).toLowerCase()==r.toLowerCase())return s=n[0],g+=r.length,!1});if(s!=-1)return s+1;throw"Unknown name at position "+g},m=function(){if(t.charAt(g)!=e.charAt(y))throw"Unexpected literal at position "+g;g++},g=0;for(var y=0;y<e.length;y++)if(h)e.charAt(y)=="'"&&!p("'")?h=!1:m();else switch(e.charAt(y)){case"d":l=d("d");break;case"D":v("D",i,s);break;case"o":c=d("o");break;case"m":f=d("m");break;case"M":f=v("M",o,u);break;case"y":a=d("y");break;case"@":var b=new Date(d("@"));a=b.getFullYear(),f=b.getMonth()+1,l=b.getDate();break;case"!":var b=new Date((d("!")-this._ticksTo1970)/1e4);a=b.getFullYear(),f=b.getMonth()+1,l=b.getDate();break;case"'":p("'")?m():h=!0;break;default:m()}if(g<t.length){var w=t.substr(g);if(!/^\s+/.test(w))throw"Extra/unparsed characters found in date: "+w}a==-1?a=(new Date).getFullYear():a<100&&(a+=(new Date).getFullYear()-(new Date).getFullYear()%100+(a<=r?0:-100));if(c>-1){f=1,l=c;do{var E=this._getDaysInMonth(a,f-1);if(l<=E)break;f++,l-=E}while(!0)}var b=this._daylightSavingAdjust(new Date(a,f-1,l));if(b.getFullYear()!=a||b.getMonth()+1!=f||b.getDate()!=l)throw"Invalid date";return b},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925))*24*60*60*1e7,formatDate:function(e,t,n){if(!t)return"";var r=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,i=(n?n.dayNames:null)||this._defaults.dayNames,s=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,o=(n?n.monthNames:null)||this._defaults.monthNames,u=function(t){var n=h+1<e.length&&e.charAt(h+1)==t;return n&&h++,n},a=function(e,t,n){var r=""+t;if(u(e))while(r.length<n)r="0"+r;return r},f=function(e,t,n,r){return u(e)?r[t]:n[t]},l="",c=!1;if(t)for(var h=0;h<e.length;h++)if(c)e.charAt(h)=="'"&&!u("'")?c=!1:l+=e.charAt(h);else switch(e.charAt(h)){case"d":l+=a("d",t.getDate(),2);break;case"D":l+=f("D",t.getDay(),r,i);break;case"o":l+=a("o",Math.round(((new Date(t.getFullYear(),t.getMonth(),t.getDate())).getTime()-(new Date(t.getFullYear(),0,0)).getTime())/864e5),3);break;case"m":l+=a("m",t.getMonth()+1,2);break;case"M":l+=f("M",t.getMonth(),s,o);break;case"y":l+=u("y")?t.getFullYear():(t.getYear()%100<10?"0":"")+t.getYear()%100;break;case"@":l+=t.getTime();break;case"!":l+=t.getTime()*1e4+this._ticksTo1970;break;case"'":u("'")?l+="'":c=!0;break;default:l+=e.charAt(h)}return l},_possibleChars:function(e){var t="",n=!1,r=function(t){var n=i+1<e.length&&e.charAt(i+1)==t;return n&&i++,n};for(var i=0;i<e.length;i++)if(n)e.charAt(i)=="'"&&!r("'")?n=!1:t+=e.charAt(i);else switch(e.charAt(i)){case"d":case"m":case"y":case"@":t+="0123456789";break;case"D":case"M":return null;case"'":r("'")?t+="'":n=!0;break;default:t+=e.charAt(i)}return t},_get:function(e,t){return e.settings[t]!==undefined?e.settings[t]:this._defaults[t]},_setDateFromField:function(e,t){if(e.input.val()==e.lastVal)return;var n=this._get(e,"dateFormat"),r=e.lastVal=e.input?e.input.val():null,i,s;i=s=this._getDefaultDate(e);var o=this._getFormatConfig(e);try{i=this.parseDate(n,r,o)||s}catch(u){this.log(u),r=t?"":r}e.selectedDay=i.getDate(),e.drawMonth=e.selectedMonth=i.getMonth(),e.drawYear=e.selectedYear=i.getFullYear(),e.currentDay=r?i.getDate():0,e.currentMonth=r?i.getMonth():0,e.currentYear=r?i.getFullYear():0,this._adjustInstDate(e)},_getDefaultDate:function(e){return this._restrictMinMax(e,this._determineDate(e,this._get(e,"defaultDate"),new Date))},_determineDate:function(e,t,n){var r=function(e){var t=new Date;return t.setDate(t.getDate()+e),t},i=function(t){try{return $.datepicker.parseDate($.datepicker._get(e,"dateFormat"),t,$.datepicker._getFormatConfig(e))}catch(n){}var r=(t.toLowerCase().match(/^c/)?$.datepicker._getDate(e):null)||new Date,i=r.getFullYear(),s=r.getMonth(),o=r.getDate(),u=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,a=u.exec(t);while(a){switch(a[2]||"d"){case"d":case"D":o+=parseInt(a[1],10);break;case"w":case"W":o+=parseInt(a[1],10)*7;break;case"m":case"M":s+=parseInt(a[1],10),o=Math.min(o,$.datepicker._getDaysInMonth(i,s));break;case"y":case"Y":i+=parseInt(a[1],10),o=Math.min(o,$.datepicker._getDaysInMonth(i,s))}a=u.exec(t)}return new Date(i,s,o)},s=t==null||t===""?n:typeof t=="string"?i(t):typeof t=="number"?isNaN(t)?n:r(t):new Date(t.getTime());return s=s&&s.toString()=="Invalid Date"?n:s,s&&(s.setHours(0),s.setMinutes(0),s.setSeconds(0),s.setMilliseconds(0)),this._daylightSavingAdjust(s)},_daylightSavingAdjust:function(e){return e?(e.setHours(e.getHours()>12?e.getHours()+2:0),e):null},_setDate:function(e,t,n){var r=!t,i=e.selectedMonth,s=e.selectedYear,o=this._restrictMinMax(e,this._determineDate(e,t,new Date));e.selectedDay=e.currentDay=o.getDate(),e.drawMonth=e.selectedMonth=e.currentMonth=o.getMonth(),e.drawYear=e.selectedYear=e.currentYear=o.getFullYear(),(i!=e.selectedMonth||s!=e.selectedYear)&&!n&&this._notifyChange(e),this._adjustInstDate(e),e.input&&e.input.val(r?"":this._formatDate(e))},_getDate:function(e){var t=!e.currentYear||e.input&&e.input.val()==""?null:this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return t},_attachHandlers:function(e){var t=this._get(e,"stepMonths"),n="#"+e.id.replace(/\\\\/g,"\\");e.dpDiv.find("[data-handler]").map(function(){var e={prev:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(n,-t,"M")},next:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(n,+t,"M")},hide:function(){window["DP_jQuery_"+dpuuid].datepicker._hideDatepicker()},today:function(){window["DP_jQuery_"+dpuuid].datepicker._gotoToday(n)},selectDay:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectDay(n,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(n,this,"M"),!1},selectYear:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(n,this,"Y"),!1}};$(this).bind(this.getAttribute("data-event"),e[this.getAttribute("data-handler")])})},_generateHTML:function(e){var t=new Date;t=this._daylightSavingAdjust(new Date(t.getFullYear(),t.getMonth(),t.getDate()));var n=this._get(e,"isRTL"),r=this._get(e,"showButtonPanel"),i=this._get(e,"hideIfNoPrevNext"),s=this._get(e,"navigationAsDateFormat"),o=this._getNumberOfMonths(e),u=this._get(e,"showCurrentAtPos"),a=this._get(e,"stepMonths"),f=o[0]!=1||o[1]!=1,l=this._daylightSavingAdjust(e.currentDay?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(9999,9,9)),c=this._getMinMaxDate(e,"min"),h=this._getMinMaxDate(e,"max"),p=e.drawMonth-u,d=e.drawYear;p<0&&(p+=12,d--);if(h){var v=this._daylightSavingAdjust(new Date(h.getFullYear(),h.getMonth()-o[0]*o[1]+1,h.getDate()));v=c&&v<c?c:v;while(this._daylightSavingAdjust(new Date(d,p,1))>v)p--,p<0&&(p=11,d--)}e.drawMonth=p,e.drawYear=d;var m=this._get(e,"prevText");m=s?this.formatDate(m,this._daylightSavingAdjust(new Date(d,p-a,1)),this._getFormatConfig(e)):m;var g=this._canAdjustMonth(e,-1,d,p)?'<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="'+m+'"><span class="ui-icon ui-icon-circle-triangle-'+(n?"e":"w")+'">'+m+"</span></a>":i?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+m+'"><span class="ui-icon ui-icon-circle-triangle-'+(n?"e":"w")+'">'+m+"</span></a>",y=this._get(e,"nextText");y=s?this.formatDate(y,this._daylightSavingAdjust(new Date(d,p+a,1)),this._getFormatConfig(e)):y;var b=this._canAdjustMonth(e,1,d,p)?'<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="'+y+'"><span class="ui-icon ui-icon-circle-triangle-'+(n?"w":"e")+'">'+y+"</span></a>":i?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+y+'"><span class="ui-icon ui-icon-circle-triangle-'+(n?"w":"e")+'">'+y+"</span></a>",w=this._get(e,"currentText"),E=this._get(e,"gotoCurrent")&&e.currentDay?l:t;w=s?this.formatDate(w,E,this._getFormatConfig(e)):w;var S=e.inline?"":'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">'+this._get(e,"closeText")+"</button>",x=r?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(n?S:"")+(this._isInRange(e,E)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">'+w+"</button>":"")+(n?"":S)+"</div>":"",T=parseInt(this._get(e,"firstDay"),10);T=isNaN(T)?0:T;var N=this._get(e,"showWeek"),C=this._get(e,"dayNames"),k=this._get(e,"dayNamesShort"),L=this._get(e,"dayNamesMin"),A=this._get(e,"monthNames"),O=this._get(e,"monthNamesShort"),M=this._get(e,"beforeShowDay"),_=this._get(e,"showOtherMonths"),D=this._get(e,"selectOtherMonths"),P=this._get(e,"calculateWeek")||this.iso8601Week,H=this._getDefaultDate(e),B="";for(var j=0;j<o[0];j++){var F="";this.maxRows=4;for(var I=0;I<o[1];I++){var q=this._daylightSavingAdjust(new Date(d,p,e.selectedDay)),R=" ui-corner-all",U="";if(f){U+='<div class="ui-datepicker-group';if(o[1]>1)switch(I){case 0:U+=" ui-datepicker-group-first",R=" ui-corner-"+(n?"right":"left");break;case o[1]-1:U+=" ui-datepicker-group-last",R=" ui-corner-"+(n?"left":"right");break;default:U+=" ui-datepicker-group-middle",R=""}U+='">'}U+='<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+R+'">'+(/all|left/.test(R)&&j==0?n?b:g:"")+(/all|right/.test(R)&&j==0?n?g:b:"")+this._generateMonthYearHeader(e,p,d,c,h,j>0||I>0,A,O)+'</div><table class="ui-datepicker-calendar"><thead>'+"<tr>";var z=N?'<th class="ui-datepicker-week-col">'+this._get(e,"weekHeader")+"</th>":"";for(var W=0;W<7;W++){var X=(W+T)%7;z+="<th"+((W+T+6)%7>=5?' class="ui-datepicker-week-end"':"")+">"+'<span title="'+C[X]+'">'+L[X]+"</span></th>"}U+=z+"</tr></thead><tbody>";var V=this._getDaysInMonth(d,p);d==e.selectedYear&&p==e.selectedMonth&&(e.selectedDay=Math.min(e.selectedDay,V));var J=(this._getFirstDayOfMonth(d,p)-T+7)%7,K=Math.ceil((J+V)/7),Q=f?this.maxRows>K?this.maxRows:K:K;this.maxRows=Q;var G=this._daylightSavingAdjust(new Date(d,p,1-J));for(var Y=0;Y<Q;Y++){U+="<tr>";var Z=N?'<td class="ui-datepicker-week-col">'+this._get(e,"calculateWeek")(G)+"</td>":"";for(var W=0;W<7;W++){var et=M?M.apply(e.input?e.input[0]:null,[G]):[!0,""],tt=G.getMonth()!=p,nt=tt&&!D||!et[0]||c&&G<c||h&&G>h;Z+='<td class="'+((W+T+6)%7>=5?" ui-datepicker-week-end":"")+(tt?" ui-datepicker-other-month":"")+(G.getTime()==q.getTime()&&p==e.selectedMonth&&e._keyEvent||H.getTime()==G.getTime()&&H.getTime()==q.getTime()?" "+this._dayOverClass:"")+(nt?" "+this._unselectableClass+" ui-state-disabled":"")+(tt&&!_?"":" "+et[1]+(G.getTime()==l.getTime()?" "+this._currentClass:"")+(G.getTime()==t.getTime()?" ui-datepicker-today":""))+'"'+((!tt||_)&&et[2]?' title="'+et[2]+'"':"")+(nt?"":' data-handler="selectDay" data-event="click" data-month="'+G.getMonth()+'" data-year="'+G.getFullYear()+'"')+">"+(tt&&!_?"&#xa0;":nt?'<span class="ui-state-default">'+G.getDate()+"</span>":'<a class="ui-state-default'+(G.getTime()==t.getTime()?" ui-state-highlight":"")+(G.getTime()==l.getTime()?" ui-state-active":"")+(tt?" ui-priority-secondary":"")+'" href="#">'+G.getDate()+"</a>")+"</td>",G.setDate(G.getDate()+1),G=this._daylightSavingAdjust(G)}U+=Z+"</tr>"}p++,p>11&&(p=0,d++),U+="</tbody></table>"+(f?"</div>"+(o[0]>0&&I==o[1]-1?'<div class="ui-datepicker-row-break"></div>':""):""),F+=U}B+=F}return B+=x+($.ui.ie6&&!e.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':""),e._keyEvent=!1,B},_generateMonthYearHeader:function(e,t,n,r,i,s,o,u){var a=this._get(e,"changeMonth"),f=this._get(e,"changeYear"),l=this._get(e,"showMonthAfterYear"),c='<div class="ui-datepicker-title">',h="";if(s||!a)h+='<span class="ui-datepicker-month">'+o[t]+"</span>";else{var p=r&&r.getFullYear()==n,d=i&&i.getFullYear()==n;h+='<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';for(var v=0;v<12;v++)(!p||v>=r.getMonth())&&(!d||v<=i.getMonth())&&(h+='<option value="'+v+'"'+(v==t?' selected="selected"':"")+">"+u[v]+"</option>");h+="</select>"}l||(c+=h+(s||!a||!f?"&#xa0;":""));if(!e.yearshtml){e.yearshtml="";if(s||!f)c+='<span class="ui-datepicker-year">'+n+"</span>";else{var m=this._get(e,"yearRange").split(":"),g=(new Date).getFullYear(),y=function(e){var t=e.match(/c[+-].*/)?n+parseInt(e.substring(1),10):e.match(/[+-].*/)?g+parseInt(e,10):parseInt(e,10);return isNaN(t)?g:t},b=y(m[0]),w=Math.max(b,y(m[1]||""));b=r?Math.max(b,r.getFullYear()):b,w=i?Math.min(w,i.getFullYear()):w,e.yearshtml+='<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';for(;b<=w;b++)e.yearshtml+='<option value="'+b+'"'+(b==n?' selected="selected"':"")+">"+b+"</option>";e.yearshtml+="</select>",c+=e.yearshtml,e.yearshtml=null}}return c+=this._get(e,"yearSuffix"),l&&(c+=(s||!a||!f?"&#xa0;":"")+h),c+="</div>",c},_adjustInstDate:function(e,t,n){var r=e.drawYear+(n=="Y"?t:0),i=e.drawMonth+(n=="M"?t:0),s=Math.min(e.selectedDay,this._getDaysInMonth(r,i))+(n=="D"?t:0),o=this._restrictMinMax(e,this._daylightSavingAdjust(new Date(r,i,s)));e.selectedDay=o.getDate(),e.drawMonth=e.selectedMonth=o.getMonth(),e.drawYear=e.selectedYear=o.getFullYear(),(n=="M"||n=="Y")&&this._notifyChange(e)},_restrictMinMax:function(e,t){var n=this._getMinMaxDate(e,"min"),r=this._getMinMaxDate(e,"max"),i=n&&t<n?n:t;return i=r&&i>r?r:i,i},_notifyChange:function(e){var t=this._get(e,"onChangeMonthYear");t&&t.apply(e.input?e.input[0]:null,[e.selectedYear,e.selectedMonth+1,e])},_getNumberOfMonths:function(e){var t=this._get(e,"numberOfMonths");return t==null?[1,1]:typeof t=="number"?[1,t]:t},_getMinMaxDate:function(e,t){return this._determineDate(e,this._get(e,t+"Date"),null)},_getDaysInMonth:function(e,t){return 32-this._daylightSavingAdjust(new Date(e,t,32)).getDate()},_getFirstDayOfMonth:function(e,t){return(new Date(e,t,1)).getDay()},_canAdjustMonth:function(e,t,n,r){var i=this._getNumberOfMonths(e),s=this._daylightSavingAdjust(new Date(n,r+(t<0?t:i[0]*i[1]),1));return t<0&&s.setDate(this._getDaysInMonth(s.getFullYear(),s.getMonth())),this._isInRange(e,s)},_isInRange:function(e,t){var n=this._getMinMaxDate(e,"min"),r=this._getMinMaxDate(e,"max");return(!n||t.getTime()>=n.getTime())&&(!r||t.getTime()<=r.getTime())},_getFormatConfig:function(e){var t=this._get(e,"shortYearCutoff");return t=typeof t!="string"?t:(new Date).getFullYear()%100+parseInt(t,10),{shortYearCutoff:t,dayNamesShort:this._get(e,"dayNamesShort"),dayNames:this._get(e,"dayNames"),monthNamesShort:this._get(e,"monthNamesShort"),monthNames:this._get(e,"monthNames")}},_formatDate:function(e,t,n,r){t||(e.currentDay=e.selectedDay,e.currentMonth=e.selectedMonth,e.currentYear=e.selectedYear);var i=t?typeof t=="object"?t:this._daylightSavingAdjust(new Date(r,n,t)):this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return this.formatDate(this._get(e,"dateFormat"),i,this._getFormatConfig(e))}}),$.fn.datepicker=function(e){if(!this.length)return this;$.datepicker.initialized||($(document).mousedown($.datepicker._checkExternalClick).find(document.body).append($.datepicker.dpDiv),$.datepicker.initialized=!0);var t=Array.prototype.slice.call(arguments,1);return typeof e!="string"||e!="isDisabled"&&e!="getDate"&&e!="widget"?e=="option"&&arguments.length==2&&typeof arguments[1]=="string"?$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this[0]].concat(t)):this.each(function(){typeof e=="string"?$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this].concat(t)):$.datepicker._attachDatepicker(this,e)}):$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this[0]].concat(t))},$.datepicker=new Datepicker,$.datepicker.initialized=!1,$.datepicker.uuid=(new Date).getTime(),$.datepicker.version="1.9.1",window["DP_jQuery_"+dpuuid]=$})(jQuery);
define("jquery.Datepicker", function(){});

define('tmpl!templates/lib/modal2.html',[ 'core/view' ], function(view) {return view('<div id="generic-modal" class="generic-modal modal hide fade {{#if thinModal}}thin-modal{{/if}}" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">\n\t<div class="modal-header">\n\t\t<h1 id="myModalLabel">{{header}}</h1>\n\t\t<button type="button" class="button-close" data-dismiss="modal" aria-hidden="true">×</button>\n\t</div>\n\t<div class="modal-body">{{{content}}}</div>\n\t<div class="modal-footer">\n\t\t<div class="button-group">\n\t\t\t{{#if close}}\n\t\t\t<button class="button" data-dismiss="modal" aria-hidden="true">Cancel</button>\n\t\t\t{{/if}}\n\t\t\t{{#if accept}}\n\t\t\t<button {{{formRel}}} class="button-highlight accept-modal-btn" {{#if loadingText}}data-loading-text="{{loadingText}}"{{/if}}>{{accept}}</button>\n\t\t\t{{/if}}\n\t\t</div>\n\t</div>\n</div>\n');});
//jshint camelcase:false
/*globals Base64, b64_hmac_sha1 */

define('utils',['require','jquery','api2','tmpl!templates/lib/modal2.html'],function(require) {

	var $ = require('jquery');
	var api = require('api2');
	var modalTpl = require('tmpl!templates/lib/modal2.html');

	function getCC(addressComponents){
		var data = {};

		_.each(addressComponents, function(component) {
			_.each(component.types, function(type) {
				switch (type) {
					case "locality":
						data.city = component.long_name;
						break;
					case "country":
						data.country = component.long_name;
						break;
					case "administrative_area_level_1":
						data.region = component.long_name;
						break;
				}
			});
		});
		return data;
	}

	var setAutocomplete = function(autocomplete, wing) {
		var place = autocomplete.getPlace();
		if (place.geometry) {
			var cc = getCC(place.address_components);
			cc.lat = place.geometry.location.lat() + "";
			cc.lon = place.geometry.location.lng() + "";
			cc.name = cc.city;
			cc = _.omit(cc, "city");
			wing.city = cc;
		} else
			return;
	};

	var serialize = function(form_id){
		var form = (form_id) ? 'form#' + form_id : 'form';
		var values = {};
		$.each(jQuery(form).serializeArray(), function(i, field) {
			if (!field.value) return;
			var key = field.name;
			var value = field.value;

			if (!values.hasOwnProperty(key)) {
				values[key] = value;
				return value;
			}

			if (!(values[key] instanceof Array))
				values[key] = [values[key]];

			values[key].push(value);
		});
		return values;
	};

	var showModal = function(options) {
		var modal = $(modalTpl({
			header: options.header,
			accept: options.accept,
			content: options.content,
			close: options.close || true,
			thinModal: options.thin,
			loadingText: options.loadingText,
			formRel: 'form="' + options.form + '"',
		}));
		$("body section:last").append(modal);

		modal.modal('show');
		var acceptBtn = modal.find('.accept-modal-btn');
		acceptBtn.click(options.callback);

		if (options.form)
			acceptBtn.attr('form', options.form);

		modal.on('hidden', function() {
			modal.remove();
		});

		return modal;
	};

	var weekMs = moment(0).add('weeks', 1).valueOf();
	var dayMs = moment(0).add('days', 1).valueOf();
	var hourMs = moment(0).add('hours', 1).valueOf();
	var minuteMs = moment(0).add('minutes', 1).valueOf();

	function formatReplyTime(time) {
		if (time === -1)
			return '-';

		var weeks = Math.floor(time / weekMs);
		if (weeks > 4) return '+4w';
		if (weeks > 0) return weeks + 'w';

		var days = Math.floor(time / dayMs);
		if (days > 0) return days + 'd';

		var hours = Math.floor(time / hourMs);
		if (hours > 0) return hours + 'h';

		var minutes = Math.floor(time / minuteMs);
		if (minutes > 5) return minutes + 'm';

		return '5m';
	}

	function uploadAmazon(file, folder, filename) {
		filename = filename || file.name;
		folder = folder ? folder + '/' : '';

		var AWSSecretKeyId = 'BTgUM/6/4QqS5n8jPZl5+lJhjJpvy0wVy668nb75';
		var contentType = 'image/';
		var bucket = 'peoplewings-test-media';
		var acl = 'public-read';
		var key = folder + filename;

		var policyJson = {
			"expiration": "2013-12-12T12:00:00.000Z",
			"conditions": [
				[ "eq", "$bucket", bucket ],
				[ "starts-with", "$key", key ],
				{ "acl": acl },
				{ "x-amz-meta-filename": filename },
				[ "starts-with", "$Content-Type", contentType ]
			]
		};

		var policy = Base64.encode(JSON.stringify(policyJson));
		var signature = b64_hmac_sha1(AWSSecretKeyId, policy);

		var fd = new FormData();
		fd.append('AWSAccessKeyId', 'AKIAI5TSJI7DYXGRQDYA');
		fd.append('acl', acl);
		fd.append('Policy', policy);
		fd.append('Signature', signature);
		fd.append('Content-Type', contentType);
		fd.append('x-amz-meta-filename', filename);
		fd.append('key', key);
		fd.append('file', file);

		return api.request('POST', 'http://peoplewings-test-media.s3.amazonaws.com', {}, fd).then(function() {
			return 'https://s3-eu-west-1.amazonaws.com/' + bucket + '/' + key;
		});
	}

	return {
		serializeForm: serialize,
		showModal: showModal,
		setAutocomplete: setAutocomplete,
		getCityAndCountry: getCC,
		formatReplyTime: formatReplyTime,
		uploadAmazon: uploadAmazon,
	};
});

define('tmpl!templates/home/main.html',[ 'core/view' ], function(view) {return view('<div class="row">\n\t<div class="span8">\n\t\t<div class="tab-content">\n\t\t\t<ul class="nav nav-tabs">\n\t\t\t\t<li><a class="all">All</a></li>\n\t\t\t\t<li class="active"><a href="#accomodation" class="accommodation" data-toggle="tab">Accomodation</a></li>\n\t\t\t\t<li><a class="transport">Transport</a></li>\n\t\t\t\t<li><a class="travel">Trip</a></li>\n\t\t\t</ul>\n\t\t\t<div class="tab-pane active" id="accomodation">Accomodation</div>\n\t\t</div><!-- EOF tab-content -->\n\t</div><!-- EOF span8 -->\n</div><!-- EOF row -->\n<div id="search-results"></div>');});
define('tmpl!templates/home/search.accomodation.html',[ 'core/view' ], function(view) {return view('<form id="accomodation-search-form">\n\t<div class="form-errors date-error"></div>\n\t<div class="form-block">\n\t\t<label class="wings_text">Wings</label>\n\t\t<div class="control-group">\n\t\t\t<label>Wings</label>\n\t\t\t<input type="text" id="inputWings" name="wings" class="input-large" placeholder="City or town">\n\t\t</div>\n\t\t<div class="control-group">\n\t\t\t<label>Date</label>\n\t\t\t<input type="text" name="startDate" class="input-sdate" placeholder="Start date">\n\t\t\t<input type="text" name="endDate" class="input-edate" placeholder="End date">\n\t\t</div>\n\t\t<div class="control-group">\n\t\t\t<label>Capacity</label>\n\t\t\t<select name="capacity" class="input-guests">\n\t\t\t\t<option value="1">1 Guest</option>\n\t\t\t\t<option value="2">2 Guests</option>\n\t\t\t\t<option value="3">3 Guests</option>\n\t\t\t\t<option value="4">4 Guests</option>\n\t\t\t\t<option value="5">5 Guests</option>\n\t\t\t\t<option value="6">6 Guests</option>\n\t\t\t\t<option value="7">7 Guests</option>\n\t\t\t\t<option value="8">8 Guests</option>\n\t\t\t\t<option value="9">9 Guests</option>\n\t\t\t\t<option value="+9">+9 Guests</option>\n\t\t\t</select>\n\t\t</div>\n\t</div><!-- EOF form-block -->\n\n\t<div class="form-block">\n\t\t<label class="people_text">People</label>\n\t\t<div class="control-group">\n\t\t\t<label>Age</label>\n\t\t\t<select name="startAge" class="input-age1">\n\t\t\t\t<option value="18">Age 18</option>\n\t\t\t\t{{#range 20 98 2}}\n\t\t\t\t<option value="{{self}}">{{self}}</option>\n\t\t\t\t{{/range}}\n\t\t\t</select>\n\t\t\t<select name="endAge" class="input-age2">\n\t\t\t\t{{#range 98 18 \'-2\'}}\n\t\t\t\t<option value="{{self}}">{{self}}</option>\n\t\t\t\t{{/range}}\n\t\t\t</select>\n\t\t</div>\n\t\t<div class="control-group">\n\t\t\t<label>Language</label>\n\t\t\t<select name="language" class="input-language">\n\t\t\t\t<option value="all">Language</option>\n\t\t\t\t<option value="all">All</option>\n\t\t\t\t<option value="Abkhazian" >Abkhazian</option>\n\t\t\t\t<option value="Acholi" >Acholi</option>\n\t\t\t\t<option value="Afar" >Afar</option>\n\t\t\t\t<option value="Afrikaans" >Afrikaans</option>\n\t\t\t\t<option value="Ainu" >Ainu</option>\n\t\t\t\t<option value="Albanian" >Albanian</option>\n\t\t\t\t<option value="Algonquin" >Algonquin</option>\n\t\t\t\t<option value="Alsatian" >Alsatian</option>\n\t\t\t\t<option value="Amharic" >Amharic</option>\n\t\t\t\t<option value="Ancient Greek" >Ancient Greek</option>\n\t\t\t\t<option value="Arabic" >Arabic</option>\n\t\t\t\t<option value="Arabic (Baharna)" >Arabic (Baharna)</option>\n\t\t\t\t<option value="Arabic (Egypt)" >Arabic (Egypt)</option>\n\t\t\t\t<option value="Arabic (Gulf)" >Arabic (Gulf)</option>\n\t\t\t\t<option value="Arabic (Levantine / Shami)" >Arabic (Levantine / Shami)</option>\n\t\t\t\t<option value="Arabic (Morocco)" >Arabic (Morocco)</option>\n\t\t\t\t<option value="Arabic (Tunisia)" >Arabic (Tunisia)</option>\n\t\t\t\t<option value="Aragonese" >Aragonese</option>\n\t\t\t\t<option value="Aramaic" >Aramaic</option>\n\t\t\t\t<option value="Armenian" >Armenian</option>\n\t\t\t\t<option value="Arpitan" >Arpitan</option>\n\t\t\t\t<option value="Assamese" >Assamese</option>\n\t\t\t\t<option value="Asturian" >Asturian</option>\n\t\t\t\t<option value="Aymara" >Aymara</option>\n\t\t\t\t<option value="Azerbaijani" >Azerbaijani</option>\n\t\t\t\t<option value="Bambara" >Bambara</option>\n\t\t\t\t<option value="Bashkir" >Bashkir</option>\n\t\t\t\t<option value="Basque" >Basque</option>\n\t\t\t\t<option value="Belarusian" >Belarusian</option>\n\t\t\t\t<option value="Bengali" >Bengali</option>\n\t\t\t\t<option value="Berber" >Berber</option>\n\t\t\t\t<option value="Bihari" >Bihari</option>\n\t\t\t\t<option value="Bislama" >Bislama</option>\n\t\t\t\t<option value="Bosnian" >Bosnian</option>\n\t\t\t\t<option value="Breton" >Breton</option>\n\t\t\t\t<option value="Bulgarian" >Bulgarian</option>\n\t\t\t\t<option value="Bunun" >Bunun</option>\n\t\t\t\t<option value="Burmese" >Burmese</option>\n\t\t\t\t<option value="Calabrian" >Calabrian</option>\n\t\t\t\t<option value="Catalan" >Catalan</option>\n\t\t\t\t<option value="Chichewa" >Chichewa</option>\n\t\t\t\t<option value="Chilean Sign Language" >Chilean Sign Language</option>\n\t\t\t\t<option value="Chinese (Mandarin)" >Chinese (Mandarin)</option>\n\t\t\t\t<option value="Chinese (Simplified)" >Chinese (Simplified)</option>\n\t\t\t\t<option value="Chinese (Traditional)" >Chinese (Traditional)</option>\n\t\t\t\t<option value="Chinuk Wawa" >Chinuk Wawa</option>\n\t\t\t\t<option value="Chuukese" >Chuukese</option>\n\t\t\t\t<option value="Chuvash" >Chuvash</option>\n\t\t\t\t<option value="Cornish" >Cornish</option>\n\t\t\t\t<option value="Corsican" >Corsican</option>\n\t\t\t\t<option value="Cree" >Cree</option>\n\t\t\t\t<option value="Creole" >Creole</option>\n\t\t\t\t<option value="Creole (Guyana)" >Creole (Guyana)</option>\n\t\t\t\t<option value="Creole (Haiti)" >Creole (Haiti)</option>\n\t\t\t\t<option value="Creole (Jamaica)" >Creole (Jamaica)</option>\n\t\t\t\t<option value="Creole (Louisiana)" >Creole (Louisiana)</option>\n\t\t\t\t<option value="Croatian" >Croatian</option>\n\t\t\t\t<option value="Czech" >Czech</option>\n\t\t\t\t<option value="Danish" >Danish</option>\n\t\t\t\t<option value="Dari" >Dari</option>\n\t\t\t\t<option value="Dhivehi" >Dhivehi</option>\n\t\t\t\t<option value="Dutch" >Dutch</option>\n\t\t\t\t<option value="Dutch (Belgium)" >Dutch (Belgium)</option>\n\t\t\t\t<option value="Dutch (Netherlands)" >Dutch (Netherlands)</option>\n\t\t\t\t<option value="Dzongkha" >Dzongkha</option>\n\t\t\t\t<option value="English" >English</option>\n\t\t\t\t<option value="English (Australia)" >English (Australia)</option>\n\t\t\t\t<option value="English (Belize)" >English (Belize)</option>\n\t\t\t\t<option value="English (Canada)" >English (Canada)</option>\n\t\t\t\t<option value="English (Caribbean)" >English (Caribbean)</option>\n\t\t\t\t<option value="English (Guyana)" >English (Guyana)</option>\n\t\t\t\t<option value="English (Ireland)" >English (Ireland)</option>\n\t\t\t\t<option value="English (Jamaica)" >English (Jamaica)</option>\n\t\t\t\t<option value="English (New Zealand)" >English (New Zealand)</option>\n\t\t\t\t<option value="English (Philippines)" >English (Philippines)</option>\n\t\t\t\t<option value="English (South Africa)" >English (South Africa)</option>\n\t\t\t\t<option value="English (Trinidad)" >English (Trinidad)</option>\n\t\t\t\t<option value="English (United Kingdom)" >English (United Kingdom)</option>\n\t\t\t\t<option value="English (United States)" >English (United States)</option>\n\t\t\t\t<option value="English (Zimbabwe)" >English (Zimbabwe)</option>\n\t\t\t\t<option value="Erzya" >Erzya</option>\n\t\t\t\t<option value="Esperanto" >Esperanto</option>\n\t\t\t\t<option value="Estonian" >Estonian</option>\n\t\t\t\t<option value="Fang" >Fang</option>\n\t\t\t\t<option value="Faroese" >Faroese</option>\n\t\t\t\t<option value="Fijian" >Fijian</option>\n\t\t\t\t<option value="Finnish" >Finnish</option>\n\t\t\t\t<option value="French" >French</option>\n\t\t\t\t<option value="French (Acadian)" >French (Acadian)</option>\n\t\t\t\t<option value="French (Belgium)" >French (Belgium)</option>\n\t\t\t\t<option value="French (Cajun)" >French (Cajun)</option>\n\t\t\t\t<option value="French (Canada)" >French (Canada)</option>\n\t\t\t\t<option value="French (France)" >French (France)</option>\n\t\t\t\t<option value="French (Luxembourg)" >French (Luxembourg)</option>\n\t\t\t\t<option value="French (Monaco)" >French (Monaco)</option>\n\t\t\t\t<option value="French (Quebec)" >French (Quebec)</option>\n\t\t\t\t<option value="French (Switzerland)" >French (Switzerland)</option>\n\t\t\t\t<option value="Frisian" >Frisian</option>\n\t\t\t\t<option value="Fulah" >Fulah</option>\n\t\t\t\t<option value="Gaelic" >Gaelic</option>\n\t\t\t\t<option value="Galician" >Galician</option>\n\t\t\t\t<option value="Ganda" >Ganda</option>\n\t\t\t\t<option value="Georgian" >Georgian</option>\n\t\t\t\t<option value="German" >German</option>\n\t\t\t\t<option value="German (Austria)" >German (Austria)</option>\n\t\t\t\t<option value="German (Germany)" >German (Germany)</option>\n\t\t\t\t<option value="German (Liechtenstein)" >German (Liechtenstein)</option>\n\t\t\t\t<option value="German (Luxembourg)" >German (Luxembourg)</option>\n\t\t\t\t<option value="German (Switzerland)" >German (Switzerland)</option>\n\t\t\t\t<option value="Greek" >Greek</option>\n\t\t\t\t<option value="Greenlandic" >Greenlandic</option>\n\t\t\t\t<option value="Guahibo" >Guahibo</option>\n\t\t\t\t<option value="Guarani" >Guarani</option>\n\t\t\t\t<option value="Gujarati" >Gujarati</option>\n\t\t\t\t<option value="Hakka" >Hakka</option>\n\t\t\t\t<option value="Hausa" >Hausa</option>\n\t\t\t\t<option value="Hawaiian" >Hawaiian</option>\n\t\t\t\t<option value="Hebrew" >Hebrew</option>\n\t\t\t\t<option value="Hiligaynon" >Hiligaynon</option>\n\t\t\t\t<option value="Hindi" >Hindi</option>\n\t\t\t\t<option value="Hindko" >Hindko</option>\n\t\t\t\t<option value="Hmong" >Hmong</option>\n\t\t\t\t<option value="Hungarian" >Hungarian</option>\n\t\t\t\t<option value="Icelandic" >Icelandic</option>\n\t\t\t\t<option value="Igbo" >Igbo</option>\n\t\t\t\t<option value="Indonesian" >Indonesian</option>\n\t\t\t\t<option value="Ingush" >Ingush</option>\n\t\t\t\t<option value="Interlingua" >Interlingua</option>\n\t\t\t\t<option value="Interlingue" >Interlingue</option>\n\t\t\t\t<option value="Inuktitut" >Inuktitut</option>\n\t\t\t\t<option value="Inupiaq" >Inupiaq</option>\n\t\t\t\t<option value="Irish" >Irish</option>\n\t\t\t\t<option value="Irish Gaelic" >Irish Gaelic</option>\n\t\t\t\t<option value="Italian" >Italian</option>\n\t\t\t\t<option value="Italian (Italy)" >Italian (Italy)</option>\n\t\t\t\t<option value="Italian (Switzerland)" >Italian (Switzerland)</option>\n\t\t\t\t<option value="Japanese" >Japanese</option>\n\t\t\t\t<option value="Javanese" >Javanese</option>\n\t\t\t\t<option value="Kannada" >Kannada</option>\n\t\t\t\t<option value="Kaqchikel" >Kaqchikel</option>\n\t\t\t\t<option value="Karelian" >Karelian</option>\n\t\t\t\t<option value="Kashmiri" >Kashmiri</option>\n\t\t\t\t<option value="Kashubian" >Kashubian</option>\n\t\t\t\t<option value="Kazakh" >Kazakh</option>\n\t\t\t\t<option value="Khmer" >Khmer</option>\n\t\t\t\t<option value="Kichwa" >Kichwa</option>\n\t\t\t\t<option value="Kinyarwanda" >Kinyarwanda</option>\n\t\t\t\t<option value="Klingon" >Klingon</option>\n\t\t\t\t<option value="Komi" >Komi</option>\n\t\t\t\t<option value="Konkani" >Konkani</option>\n\t\t\t\t<option value="Korean" >Korean</option>\n\t\t\t\t<option value="Kosraean" >Kosraean</option>\n\t\t\t\t<option value="Kurdish" >Kurdish</option>\n\t\t\t\t<option value="Kurmanji" >Kurmanji</option>\n\t\t\t\t<option value="Kyrgyz" >Kyrgyz</option>\n\t\t\t\t<option value="Láadan" >Láadan</option>\n\t\t\t\t<option value="Ladakhi" >Ladakhi</option>\n\t\t\t\t<option value="Ladin" >Ladin</option>\n\t\t\t\t<option value="Lao" >Lao</option>\n\t\t\t\t<option value="Latin" >Latin</option>\n\t\t\t\t<option value="Latvian" >Latvian</option>\n\t\t\t\t<option value="Ligurian" >Ligurian</option>\n\t\t\t\t<option value="Limburgish" >Limburgish</option>\n\t\t\t\t<option value="Lingala" >Lingala</option>\n\t\t\t\t<option value="Lithuanian" >Lithuanian</option>\n\t\t\t\t<option value="Lojban" >Lojban</option>\n\t\t\t\t<option value="Lombard" >Lombard</option>\n\t\t\t\t<option value="Lower Sorbian" >Lower Sorbian</option>\n\t\t\t\t<option value="Low German" >Low German</option>\n\t\t\t\t<option value="Luganda" >Luganda</option>\n\t\t\t\t<option value="Luxembourgish" >Luxembourgish</option>\n\t\t\t\t<option value="Macedonian" >Macedonian</option>\n\t\t\t\t<option value="Maithili" >Maithili</option>\n\t\t\t\t<option value="Malagasy" >Malagasy</option>\n\t\t\t\t<option value="Malay" >Malay</option>\n\t\t\t\t<option value="Malayalam" >Malayalam</option>\n\t\t\t\t<option value="Maltese" >Maltese</option>\n\t\t\t\t<option value="Manchu" >Manchu</option>\n\t\t\t\t<option value="Manx" >Manx</option>\n\t\t\t\t<option value="Maori" >Maori</option>\n\t\t\t\t<option value="Mapudungun" >Mapudungun</option>\n\t\t\t\t<option value="Marathi" >Marathi</option>\n\t\t\t\t<option value="Mari" >Mari</option>\n\t\t\t\t<option value="Marshallese" >Marshallese</option>\n\t\t\t\t<option value="Min Nan" >Min Nan</option>\n\t\t\t\t<option value="Moksha" >Moksha</option>\n\t\t\t\t<option value="Moldovan" >Moldovan</option>\n\t\t\t\t<option value="Mongolian" >Mongolian</option>\n\t\t\t\t<option value="Montenegrin" >Montenegrin</option>\n\t\t\t\t<option value="More" >More</option>\n\t\t\t\t<option value="Mortlockese" >Mortlockese</option>\n\t\t\t\t<option value="Nahuatl" >Nahuatl</option>\n\t\t\t\t<option value="Nauruan" >Nauruan</option>\n\t\t\t\t<option value="Navajo" >Navajo</option>\n\t\t\t\t<option value="Neapolitan" >Neapolitan</option>\n\t\t\t\t<option value="Nepal Bhasa" >Nepal Bhasa</option>\n\t\t\t\t<option value="Nepali" >Nepali</option>\n\t\t\t\t<option value="Norwegian" >Norwegian</option>\n\t\t\t\t<option value="Norwegian (Bokmål)" >Norwegian (Bokmål)</option>\n\t\t\t\t<option value="Norwegian (Nynorsk)" >Norwegian (Nynorsk)</option>\n\t\t\t\t<option value="Occitan" >Occitan</option>\n\t\t\t\t<option value="Ojibwe" >Ojibwe</option>\n\t\t\t\t<option value="Okinawan" >Okinawan</option>\n\t\t\t\t<option value="Oriya" >Oriya</option>\n\t\t\t\t<option value="Oromo" >Oromo</option>\n\t\t\t\t<option value="Ossetian" >Ossetian</option>\n\t\t\t\t<option value="Palauan" >Palauan</option>\n\t\t\t\t<option value="Papiamento" >Papiamento</option>\n\t\t\t\t<option value="Pashto" >Pashto</option>\n\t\t\t\t<option value="Pemon" >Pemon</option>\n\t\t\t\t<option value="Persian" >Persian</option>\n\t\t\t\t<option value="Pidgin" >Pidgin</option>\n\t\t\t\t<option value="Piedmontese" >Piedmontese</option>\n\t\t\t\t<option value="Pohnpeian" >Pohnpeian</option>\n\t\t\t\t<option value="Polish" >Polish</option>\n\t\t\t\t<option value="Portuguese" >Portuguese</option>\n\t\t\t\t<option value="Portuguese (Brazil)" >Portuguese (Brazil)</option>\n\t\t\t\t<option value="Portuguese (Portugal)" >Portuguese (Portugal)</option>\n\t\t\t\t<option value="Punjabi" >Punjabi</option>\n\t\t\t\t<option value="Quechua" >Quechua</option>\n\t\t\t\t<option value="Quenya" >Quenya</option>\n\t\t\t\t<option value="Quiche" >Quiche</option>\n\t\t\t\t<option value="Rapa Nui" >Rapa Nui</option>\n\t\t\t\t<option value="Romani" >Romani</option>\n\t\t\t\t<option value="Romanian" >Romanian</option>\n\t\t\t\t<option value="Romanian (Moldova)" >Romanian (Moldova)</option>\n\t\t\t\t<option value="Romanian (Romania)" >Romanian (Romania)</option>\n\t\t\t\t<option value="Romansh" >Romansh</option>\n\t\t\t\t<option value="Rundi" >Rundi</option>\n\t\t\t\t<option value="Russian" >Russian</option>\n\t\t\t\t<option value="Russian (Moldova)" >Russian (Moldova)</option>\n\t\t\t\t<option value="Russian (Russia)" >Russian (Russia)</option>\n\t\t\t\t<option value="Sakha" >Sakha</option>\n\t\t\t\t<option value="Sami" >Sami</option>\n\t\t\t\t<option value="Samoan" >Samoan</option>\n\t\t\t\t<option value="Sango" >Sango</option>\n\t\t\t\t<option value="Sanskrit" >Sanskrit</option>\n\t\t\t\t<option value="Saramaccan" >Saramaccan</option>\n\t\t\t\t<option value="Sardinian" >Sardinian</option>\n\t\t\t\t<option value="Scots" >Scots</option>\n\t\t\t\t<option value="Scottish Gaelic" >Scottish Gaelic</option>\n\t\t\t\t<option value="Serbian (Cyrillic)" >Serbian (Cyrillic)</option>\n\t\t\t\t<option value="Serbian (Latin)" >Serbian (Latin)</option>\n\t\t\t\t<option value="Serbo-Croatian" >Serbo-Croatian</option>\n\t\t\t\t<option value="Shona" >Shona</option>\n\t\t\t\t<option value="Sibe" >Sibe</option>\n\t\t\t\t<option value="Sicilian" >Sicilian</option>\n\t\t\t\t<option value="Sign Language - American" >Sign Language - American</option>\n\t\t\t\t<option value="Sign Language - Austrian" >Sign Language - Austrian</option>\n\t\t\t\t<option value="Sign Language - Brazilian" >Sign Language - Brazilian</option>\n\t\t\t\t<option value="Sign Language - British" >Sign Language - British</option>\n\t\t\t\t<option value="Sign Language - BSL, AUSLAN, NZS" >Sign Language - BSL, AUSLAN, NZS</option>\n\t\t\t\t<option value="Sign Language - Catalan" >Sign Language - Catalan</option>\n\t\t\t\t<option value="Sign Language - Chinese" >Sign Language - Chinese</option>\n\t\t\t\t<option value="Sign Language - Danish" >Sign Language - Danish</option>\n\t\t\t\t<option value="Sign Language - Dutch (NGT)" >Sign Language - Dutch (NGT)</option>\n\t\t\t\t<option value="Sign Language - Finnish" >Sign Language - Finnish</option>\n\t\t\t\t<option value="Sign Language - Flemish" >Sign Language - Flemish</option>\n\t\t\t\t<option value="Sign Language - French" >Sign Language - French</option>\n\t\t\t\t<option value="Sign Language - German" >Sign Language - German</option>\n\t\t\t\t<option value="Sign Language - Greek" >Sign Language - Greek</option>\n\t\t\t\t<option value="Sign Language - Honduran" >Sign Language - Honduran</option>\n\t\t\t\t<option value="Sign Language - Honduras" >Sign Language - Honduras</option>\n\t\t\t\t<option value="Sign Language - Hungarian" >Sign Language - Hungarian</option>\n\t\t\t\t<option value="Sign Language - Indian" >Sign Language - Indian</option>\n\t\t\t\t<option value="Sign Language - International" >Sign Language - International</option>\n\t\t\t\t<option value="Sign Language - Irish" >Sign Language - Irish</option>\n\t\t\t\t<option value="Sign Language - Israeli" >Sign Language - Israeli</option>\n\t\t\t\t<option value="Sign Language - Italian" >Sign Language - Italian</option>\n\t\t\t\t<option value="Sign Language - Japanese" >Sign Language - Japanese</option>\n\t\t\t\t<option value="Sign Language - Kenyan" >Sign Language - Kenyan</option>\n\t\t\t\t<option value="Sign Language - Korean" >Sign Language - Korean</option>\n\t\t\t\t<option value="Sign Language - Mexican" >Sign Language - Mexican</option>\n\t\t\t\t<option value="Sign Language - New Zealand" >Sign Language - New Zealand</option>\n\t\t\t\t<option value="Sign Language - Nicaragua" >Sign Language - Nicaragua</option>\n\t\t\t\t<option value="Sign Language - Norwegian" >Sign Language - Norwegian</option>\n\t\t\t\t<option value="Sign Language - Poland" >Sign Language - Poland</option>\n\t\t\t\t<option value="Sign Language - Quebec" >Sign Language - Quebec</option>\n\t\t\t\t<option value="Sign Language - Russian" >Sign Language - Russian</option>\n\t\t\t\t<option value="Sign Language - Spanish" >Sign Language - Spanish</option>\n\t\t\t\t<option value="Sign Language - Swedish" >Sign Language - Swedish</option>\n\t\t\t\t<option value="Sign Language - Switzerland" >Sign Language - Switzerland</option>\n\t\t\t\t<option value="Sign Language - Taiwanese" >Sign Language - Taiwanese</option>\n\t\t\t\t<option value="Sign Language - Trinidad and Tob" >Sign Language - Trinidad and Tob</option>\n\t\t\t\t<option value="Sign Language - Turkish" >Sign Language - Turkish</option>\n\t\t\t\t<option value="Sign Language - Yugoslavian" >Sign Language - Yugoslavian</option>\n\t\t\t\t<option value="Silesian" >Silesian</option>\n\t\t\t\t<option value="Sindhi" >Sindhi</option>\n\t\t\t\t<option value="Sinhala" >Sinhala</option>\n\t\t\t\t<option value="Slavic Languages" >Slavic Languages</option>\n\t\t\t\t<option value="Slovak" >Slovak</option>\n\t\t\t\t<option value="Slovenian" >Slovenian</option>\n\t\t\t\t<option value="Slovio" >Slovio</option>\n\t\t\t\t<option value="Somali" >Somali</option>\n\t\t\t\t<option value="Soranî" >Soranî</option>\n\t\t\t\t<option value="Sotho" >Sotho</option>\n\t\t\t\t<option value="Spanish" >Spanish</option>\n\t\t\t\t<option value="Spanish (Argentina)" >Spanish (Argentina)</option>\n\t\t\t\t<option value="Spanish (Bolivia)" >Spanish (Bolivia)</option>\n\t\t\t\t<option value="Spanish (Chile)" >Spanish (Chile)</option>\n\t\t\t\t<option value="Spanish (Colombia)" >Spanish (Colombia)</option>\n\t\t\t\t<option value="Spanish (Costa Rica)" >Spanish (Costa Rica)</option>\n\t\t\t\t<option value="Spanish (Dominican Republic)" >Spanish (Dominican Republic)</option>\n\t\t\t\t<option value="Spanish (Ecuador)" >Spanish (Ecuador)</option>\n\t\t\t\t<option value="Spanish (El Salvador)" >Spanish (El Salvador)</option>\n\t\t\t\t<option value="Spanish (Guatemala)" >Spanish (Guatemala)</option>\n\t\t\t\t<option value="Spanish (Honduras)" >Spanish (Honduras)</option>\n\t\t\t\t<option value="Spanish (Mexico)" >Spanish (Mexico)</option>\n\t\t\t\t<option value="Spanish (Nicaragua)" >Spanish (Nicaragua)</option>\n\t\t\t\t<option value="Spanish (Panama)" >Spanish (Panama)</option>\n\t\t\t\t<option value="Spanish (Paraguay)" >Spanish (Paraguay)</option>\n\t\t\t\t<option value="Spanish (Peru)" >Spanish (Peru)</option>\n\t\t\t\t<option value="Spanish (Puerto Rico)" >Spanish (Puerto Rico)</option>\n\t\t\t\t<option value="Spanish (Spain)" >Spanish (Spain)</option>\n\t\t\t\t<option value="Spanish (Uruguay)" >Spanish (Uruguay)</option>\n\t\t\t\t<option value="Spanish (Venezuela)" >Spanish (Venezuela)</option>\n\t\t\t\t<option value="Sranan Tongo" >Sranan Tongo</option>\n\t\t\t\t<option value="Sundanese" >Sundanese</option>\n\t\t\t\t<option value="Swahili" >Swahili</option>\n\t\t\t\t<option value="Swati" >Swati</option>\n\t\t\t\t<option value="Swedish" >Swedish</option>\n\t\t\t\t<option value="Swedish (Finland)" >Swedish (Finland)</option>\n\t\t\t\t<option value="Swedish (Sweden)" >Swedish (Sweden)</option>\n\t\t\t\t<option value="Tagalog" >Tagalog</option>\n\t\t\t\t<option value="Tahitian" >Tahitian</option>\n\t\t\t\t<option value="Taiwanese" >Taiwanese</option>\n\t\t\t\t<option value="Tajik" >Tajik</option>\n\t\t\t\t<option value="Tamil" >Tamil</option>\n\t\t\t\t<option value="Tatar" >Tatar</option>\n\t\t\t\t<option value="Telugu" >Telugu</option>\n\t\t\t\t<option value="Tetum" >Tetum</option>\n\t\t\t\t<option value="Thai" >Thai</option>\n\t\t\t\t<option value="Tibetan" >Tibetan</option>\n\t\t\t\t<option value="Tigrinya" >Tigrinya</option>\n\t\t\t\t<option value="Tongan" >Tongan</option>\n\t\t\t\t<option value="Tsonga" >Tsonga</option>\n\t\t\t\t<option value="Tswana" >Tswana</option>\n\t\t\t\t<option value="Turkish" >Turkish</option>\n\t\t\t\t<option value="Turkmen" >Turkmen</option>\n\t\t\t\t<option value="Twi" >Twi</option>\n\t\t\t\t<option value="Udmurt" >Udmurt</option>\n\t\t\t\t<option value="Ukrainian" >Ukrainian</option>\n\t\t\t\t<option value="Ulster Scots" >Ulster Scots</option>\n\t\t\t\t<option value="Upper Sorbian" >Upper Sorbian</option>\n\t\t\t\t<option value="Urdu" >Urdu</option>\n\t\t\t\t<option value="Uyghur" >Uyghur</option>\n\t\t\t\t<option value="Uzbek" >Uzbek</option>\n\t\t\t\t<option value="Venetian" >Venetian</option>\n\t\t\t\t<option value="Vietnamese" >Vietnamese</option>\n\t\t\t\t<option value="Volapük" >Volapük</option>\n\t\t\t\t<option value="Waray Waray" >Waray Waray</option>\n\t\t\t\t<option value="Wayuu" >Wayuu</option>\n\t\t\t\t<option value="Welsh" >Welsh</option>\n\t\t\t\t<option value="Wolof" >Wolof</option>\n\t\t\t\t<option value="Wu" >Wu</option>\n\t\t\t\t<option value="Xhosa" >Xhosa</option>\n\t\t\t\t<option value="Yapese" >Yapese</option>\n\t\t\t\t<option value="Yiddish" >Yiddish</option>\n\t\t\t\t<option value="Yoruba" >Yoruba</option>\n\t\t\t\t<option value="Yucatec Maya" >Yucatec Maya</option>\n\t\t\t\t<option value="Yue (Cantonese)" >Yue (Cantonese)</option>\n\t\t\t\t<option value="Yupik" >Yupik</option>\n\t\t\t\t<option value="Zulu" >Zulu</option>\n\t\t\t</select>\n\t\t</div>\n\t\t<div class="control-group">\n\t\t\t<label>Gender</label>\n\t\t\t<select class="input-others" name="gender">\n\t\t\t\t<option value="Both" selected>Both genders</option>\n\t\t\t\t<option value="Male">Male</option>\n\t\t\t\t<option value="Female">Female</option>\n\t\t\t</select>\n\t\t</div>\n\t\t<div class="control-group">\n\t\t\t<label>Host</label>\n\t\t\t<select class="input-others" name="type">\n\t\t\t\t<option value="Host">Host</option>\n\t\t\t\t<option value="Applicant">Applicant</option>\n\t\t\t</select>\n\t\t</div>\n\t</div><!-- EOF form-block -->\n\n\t<div class="form-errors age-error"></div>\n\t<div class="form-actions">\n\t\t<button type="reset" class="btn" style="display: none;">Clear</button>\n\t\t<button type="submit" class="button-peoplewings">SEARCH PEOPLEWINGS</button>\n\t</div>\n</form>\n');});
define('core/factory',[],function() {

	return function Factory(model) {
		var store = {};

		function ModelFactory(attr, opt) {
			var idField = this.idAttribute;

			if (!attr || !(idField in attr))
				throw new Error('Cool Models always have IDs!');

			var id = attr[idField];

			if (store.hasOwnProperty(id))
				store[id].set(attr, opt);
			else {
				model.call(this, attr, opt);
				store[id] = this;
			}

			return store[id];
		}

		ModelFactory.prototype = Object.create(model.prototype);
		return ModelFactory;
	};
});

define('models/Account',['require','backbone','api2','core/factory'],function(require) {

	var Backbone = require('backbone');
	var api = require('api2');
	var factory = require('core/factory');

	var UserModel = Backbone.Model.extend({

		urlRoot: api.getApiVersion() + '/accounts/',

		fetch: function(options) {
			var self = this;
			api.get(this.url())
				.then(function(resp){
					self.attributes = resp.data;
					if (resp.updates)
						self.attributes.notifs = resp.updates.notifs;
					self.trigger("change");
						if (options && options.success)
							options.success();
				});
		},

		save: function(attributes, pwd) {
			var self = this;
			return api.put(this.urlRoot + this.id, { resource: attributes, currentPassword: pwd })
				.prop('status')
				.then(function(status){
					if (status) {
						_.each(attributes, function(value, name) {
							self.set(name, value);
						});
					}
					return status;
				});
		},

		destroy: function(data) {
			return api.post(api.getApiVersion() + '/accounts/', data);
		}
	});

	return factory(UserModel);
});

define('tmpl!templates/lib/send-notification.html',[ 'core/view' ], function(view) {return view('<div data-reciver-id="{{to.id}}">\n\t<div class="control-group">\n\t\t<label class="control-label" for="reciver-name">For</label>\n\t\t<div class="controls">\n\t\t\t<input type="text" id="reciver-name" class="autocompletePeople" placeholder="Name" value="{{to.fullname}}" data-provide="typeahead" {{#if to.id}}readonly="readonly"{{/if}}>\n\t\t</div>\n\t</div>\n\t<div class="control-group avatar-message">\n\t\t<label class="control-label" for="message-content">\n\t\t\t<img src="{{avatar}}">\n\t\t</label>\n\t\t<form>\n\t\t\t<div class="controls">\n\t\t\t\t{{#unless_equals kind \'message\'}}\n\t\t\t\t<div id="new-invitation-content" class="request-options">\n\t\t\t\t\t<div id="wing-data">\n\t\t\t\t\t\t<select id="wings" class="required size-extralarge">\n\t\t\t\t\t\t\t{{#each wings}}\n\t\t\t\t\t\t\t<option value="{{idWing}}" data-type="{{wingType}}">\n\t\t\t\t\t\t\t\t{{ wingName}} ({{ wingType }})\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t{{/each}}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t<div id="wing-parameters"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div><!-- EOF new-invitation-content -->\n\t\t\t\t{{/unless_equals}}\n\n\t\t\t\t{{#equals kind \'request\'}}\n\t\t\t\t<textarea name="publicMessage" id="public-message-content" maxlength="1500" class="required" placeholder="Introduce yourself and explain a little your interest in the wing you are looking for"></textarea>\n\t\t\t\t<span class="help-block"></span>\n\t\t\t\t<i class="icon-public-state">Public state icon</i>\n\t\t\t\t<label class="checkbox" for="public-request">\n\t\t\t\t\t<input type="checkbox" id="public-request" checked>Let other hosts send me invitations (this text will be visible to all hosts)\n\t\t\t\t</label>\n\t\t\t\t<h3>Personal message to host</h3>\n\t\t\t\t{{/equals}}\n\t\t\t\t\n\t\t\t\t<textarea name="privateMessage" id="message-content" maxlength="1500" class="required"\n\t\t\t\t{{#equals kind \'request\'}}\n\t\t\t\tplaceholder="Tell your host why you\'d like to meet them..."\n\t\t\t\t{{else}}\n\t\t\t\tplaceholder="Write a message"\n\t\t\t\t{{/equals}}\n\t\t\t\t></textarea>\n\t\t\t\t<span class="help-block"></span>\n\n\t\t\t</div><!-- EOF controls -->\n\t\t</form>\n\t</div>\n</div>\n');});
define('tmpl!templates/lib/wing.accomodation.html',[ 'core/view' ], function(view) {return view('<div id="wing-accomodation-params">\n\t<div class="control-group">\n\t\t<div class="controls">\n\t\t\t<input type="text" name="start-date" class="required input-sdate">\n\t\t\t<span class="help-block"></span>\n\t\t\t<input type="text" name="end-date" class="required input-edate">\n\t\t\t<span class="help-block"></span>\n\t\t\t<select name="capacity" class="size-medium">\n\t\t\t\t{{#range 9}}\n\t\t\t\t<option value="{{indexPlusOne}}">{{indexPlusOne}}</option>\n\t\t\t\t{{/range}}\n\t\t\t\t<option value="+9">+9</option>\n\t\t\t</select>\n\t\t\t{{#unless_equals kind \'invite\' }}\n\t\t\t<select name="via" class="size-large">\n\t\t\t\t<option value="">Choose transport</option>\n\t\t\t\t<option value="plane">Plane</option>\n\t\t\t\t<option value="train">Train</option>\n\t\t\t\t<option value="car">Car</option>\n\t\t\t</select>\n\t\t\t{{/unless_equals}}\n\t\t</div>\n\t</div>\n\t<div class="control-group flexible-dates">\n\t\t<div class="controls">\n\t\t\t<label class="checkbox">\n\t\t\t\t<input type="checkbox" id="flexible-start-date" name="flexibleStart" class="input-edate">Flexible date\n\t\t\t</label>\n\t\t\t<label class="checkbox">\n\t\t\t\t<input type="checkbox" id="flexible-end-date" name="flexibleEnd">Flexible date\n\t\t\t</label>\n\t\t</div>\n\t</div>\n</div>\n');});
// W003 Function 'send' was used before it was defined.
//jshint camelcase:false, maxparams:7, -W003

define('views/lib/notifications',['require','jquery','api2','promise','utils','views/lib/alerts','models/Account','tmpl!templates/lib/send-notification.html','tmpl!templates/lib/wing.accomodation.html'],function(require) {

	var $ = require('jquery');
	var api = require('api2');
	var Promise = require('promise');
	var utils = require('utils');
	var alerts = require('views/lib/alerts');
	var UserAccount = require('models/Account');

	var sendNotificationTpl = require('tmpl!templates/lib/send-notification.html');
	var accomodationTpl = require('tmpl!templates/lib/wing.accomodation.html');

	var wingsParams = {
		'none': function(parent) {
			parent.html('');
		},
		'accomodation': function(parent, params) {
			parent.html(accomodationTpl(params));
			parent.parents("form").validate(validation);

			parent.find("input[name=start-date]").datepicker({
				minDate: new Date(),
				dateFormat: "yy-mm-dd",
			});
			parent.find("input[name=end-date]").datepicker({
				minDate: new Date(),
				dateFormat: "yy-mm-dd",
			});
		},
	};

	var validation = {
			rules: {
				publicMessage: {
					maxlength: 1500,
				},
				privateMessage: {
					maxlength: 1500,
				},
			},
			errorPlacement: function(error, element) {
				error.appendTo(element.next("span.help-block"));
			},
	};

	function selectedWingType(container) {
		return container.find('option[value="' + container.find('#wings').val() + '"]').data('type');
	}


	function modalHelper(targetId, targetName, kind, title, button, wingsReq, getData) {
		var prom = new Promise();
		var hasTarget = !!targetId;

		Promise.parallel(
			hasTarget || api.get(api.getApiVersion() + '/contacts?type=' + kind),
			wingsReq
		).spread(function(contacts, wings) {
			var avatar = new UserAccount({ id: api.getUserId() }).get('avatar');

			var content = sendNotificationTpl({
				avatar: avatar,
				kind: kind,
				to: {
					id: targetId,
					fullname: targetName
				},
				wings: wings ? [{
					idWing: null,
					wingName: 'Select a wing',
					wingType: 'none',
				}].concat(wings.items) : null,
			});

			var modal = utils.showModal({
				header: title,
				accept: button,
				content: content,
				callback: send
			});

			modal.on('hidden', function() {
				if (!prom.future.isCompleted())
					prom.resolve(false);
			});
			modal.delegate('#wings', 'change', function() {
				var data = $(this).closest('#wing-data');
				var type = selectedWingType(data);
				wingsParams[type.toLowerCase()](data.find('#wing-parameters'), { kind: kind });
			});

			if (!hasTarget) {
				contacts.forEach(function(contact) {
					contact.fullname = contact.name + ' ' + contact.last_name;
				});

				modal.find('.autocompletePeople').typeahead({
					source: contacts.map(function(c) { return c.fullname; })
				});
			}

			modal.find('form').validate(validation);


			function send() {
				if (!modal.find('form').valid())
					return;

				var data = getData(modal);

				if (!hasTarget) {
					var selected = modal.find('.autocompletePeople').val();
					targetId = contacts.filter(function(c) { return c.fullname === selected; })['0'].id;
				}

				$(".generic-modal-btn").button('loading');

				api.post('/api/v1/notificationslist', {
					"idReceiver": targetId,
					"kind": kind,
					"data": data,
				}).then(function() {
					alerts.success('Message Sent');
					prom.resolve(true);
				}, function(error) {
					debugger;
					alerts.defaultError();
					prom.reject(error);
				}).fin(function() {
					$(".generic-modal-btn").button('reset');
					modal.modal('hide');
				});
			}
		});

		return prom;
	}


	function reqinv(targetId, targetName, kind, title, button, wingsOwnerId) {
		var request = api.get('/api/v1/wings', { profile:  wingsOwnerId}).prop('data');
		return modalHelper(targetId, targetName, kind, title, button, request, function(modal) {
			return {
				"privateText": modal.find('#message-content').val(),
				"publicText": modal.find('#public-message-content').val(),
				"makePublic": modal.find('#public-request').is(':checked'),
				"wingType": selectedWingType(modal),
				"wingParameters": {
					"wingId": modal.find('#wings').val(),
					"startDate": +new Date(modal.find('#wing-parameters [name="start-date"]').val())/1000,
					"endDate": +new Date(modal.find('#wing-parameters [name="end-date"]').val())/1000,
					"capacity": modal.find('#wing-parameters [name="capacity"]').val(),
					"arrivingVia": modal.find('#wing-parameters [name="via"]').val(),
					"flexibleStart": modal.find('#wing-parameters #flexible-start-date').is(':checked'),
					"flexibleEnd": modal.find('#wing-parameters #flexible-end-date').is(':checked'),
				}
			};
		});
	}


	return {

		message: function(targetId, targetName) {
			modalHelper(targetId, targetName, 'message', 'New message', 'Send', null, function(modal) {
				return {
					"content": modal.find('#message-content').val(),
				};
			});
		},

		request: function(targetId, targetName) {
			return reqinv(targetId, targetName, 'request', 'New request', 'Send', targetId);
		},

		invitation: function(targetId, targetName) {
			return reqinv(targetId, targetName, 'invite', 'New invitation', 'Send', api.getUserId());
		}
	};
});

define('tmpl!templates/home/search_result.html',[ 'core/view' ], function(view) {return view('\t<div class="row">\n\t\t<div class="span8">\n\n\t\t\t<div class="pager-content">\n\t\t\t\t<div class="pager-left">\n\t\t\t\t\t<span>{{totalCount}}</span>\n\t\t\t\t\t<p>results of {{#if applicant}}applicant{{else}}accommodation{{/if}} in</p>\n\t\t\t\t\t{{#if locationSearch}}\n\t\t\t\t\t<span class="location">{{locationSearch}}</span>\n\t\t\t\t\t{{else}}\n\t\t\t\t\t<span class="location">the world</span>\n\t\t\t\t\t{{/if}}\n\t\t\t\t</div>\n\t\t\t\t<div class="pager-right">\n\t\t\t\t\t<div class="resultCounter">\n\t\t\t\t\t\t<span>{{startResult}}</span>\n\t\t\t\t\t\t<span>{{endResult}}</span>\n\t\t\t\t\t\t<span>{{totalCount}}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="button-group">\n\t\t\t\t\t\t<a href="" class="button-pager-previous">\n\t\t\t\t\t\t\t<i class="icon-pager-previous">button previous</i>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href="" class="button-pager-next">\n\t\t\t\t\t\t\t<i class="icon-pager-next">button next</i>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div><!-- EOF button-group -->\n\t\t\t</div><!-- EOF pager content -->\n\n\t\t\t{{#each results}}\n\t\t\t<div class="profile search-result" data-profile-id="{{ id }}">\n\t\t\t\t<div class="content-left">\n\t\t\t\t\t<span class="dot {{#if live}}online{{/if}}">online dot</span>\n\t\t\t\t\t<a href="#/profiles/{{id}}/about">\n\t\t\t\t\t\t<img src="{{ avatar }}" alt="avatar">\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t<div class="content-right">\n\t\t\t\t\t<div class="personal-info">\n\t\t\t\t\t\t<div class="first-info">\n\t\t\t\t\t\t\t<h1 id="user-name-label" class="name">\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t{{#if ../notlogged}}\n\t\t\t\t\t\t\t\thref="#/register"\n\t\t\t\t\t\t\t\tstyle="color: transparent; text-shadow: 3px 3px 11px rgba(0,0,0,1)"\n\t\t\t\t\t\t\t\t{{else}}\n\t\t\t\t\t\t\t\thref="#/profiles/{{id}}/about"\n\t\t\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t\t\t>{{firstName}} {{lastName}}</a>\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<span class="age">[{{age}}]</span>\n\t\t\t\t\t\t\t{{#if live}}<span class="online">{{online}}</span>{{/if}}\n\t\t\t\t\t\t<!--\n\t\t\t\t\t\t{{#if verified }}\n\t\t\t\t\t\t\t<span class="label label-success">Verified</span>\n\t\t\t\t\t\t{{else}}\n\t\t\t\t\t\t\t<span class="label label-important">Not verified</span>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t{{#if lastLogin}}\n\t\t\t\t\t\t\t\t<p><b>Last in:</b> {{ lastLogin }}</p>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t-->\n\t\t\t\t\t{{#if current.name }}\n\t\t\t\t\t<h2 class="home-town">{{ current.name }}, {{ current.country }}</h2>\n\t\t\t\t\t<!--<h3 class="current-location">Now in {{ current.name }}, {{ current.country }}</h3>-->\n\t\t\t\t\t{{/if}}\n\t\t\t\t</div>\n\t\t\t\t{{#if languages.length }}\n\t\t\t\t<dl>\n\t\t\t\t\t<dt class="languages-tag">Languages</dt>\n\t\t\t\t\t<dd class="languages">\n\t\t\t\t\t\t{{#each languages }}\n\t\t\t\t\t\t\t{{#if last}}\n\t\t\t\t\t\t\t\t{{ name }} ({{ level }}).\n\t\t\t\t\t\t\t{{else}}\n\t\t\t\t\t\t\t\t{{ name }} ({{ level }}),\n\t\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t{{/each}}\n\t\t\t\t\t</dd>\n\t\t\t\t</dl>\n\t\t\t\t{{/if}}\n\t\t\t</div>\n\t\t\t<div class="main-bar">\n\t\t\t\t<div class="info-bar">\n\t\t\t\t\t<span class="">Reply time</span>\n\t\t\t\t\t<span class="results">{{replyTime}}</span>\n\t\t\t\t\t<span class="">Reply rate</span>\n\t\t\t\t\t<span class="results">{{rate replyRate}}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class="button-bar">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><button class="button send-message-btn">MESSAGE</button></li>\n\t\t\t\t\t\t<li><button class="button-highlight send-request-btn selected">REQUEST</button></li>\n\t\t\t\t\t\t<li><button class="button send-invitation-btn">INVITE</button></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div><!-- EOF button-bar -->\n\t\t\t</div><!-- EOF main-bar -->\n\t\t</div><!-- EOF content-right -->\n\t\t<div class="accordion">\n\t\t\t<div class="accordion-group">\n\t\t\t\t<div id="collapse-{{@index}}" class="accordion-body collapse">\n\t\t\t\t\t<div class="accordion-inner">\n\t\t\t\t\t\t<h1>About me!</h1>\n\t\t\t\t\t\t<p>{{ allAboutYou }}</p>\n\t\t\t\t\t\t{{#if ../applicant}}\n\t\t\t\t\t\t<h1>Looking for...</h1>\n\t\t\t\t\t\t<p>City: <span>{{ wingCity }}</span></p>\n\t\t\t\t\t\t<p>Capacity: <span>{{ wingCapacity }}</span></p>\n\t\t\t\t\t\t<p>Start Date: <span>{{ wingStartDate }}</span></p>\n\t\t\t\t\t\t<p>End date: <span>{{ wingEndDate }}</span></p>\n\t\t\t\t\t\t<p>Type <span>{{ wingType }}</span></p>\n\t\t\t\t\t\t<p><span>{{ wingIntroduction }}</span></p>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="accordion-heading" data-toggle="collapse" href="#collapse-{{@index}}">\n\t\t\t\t\t<span>See more</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div><!-- EOF accordion -->\n\t</div>\n\t{{/each}}\n\n\t<div class="pager-content">\n\t\t<div class="pager-left">\n\t\t\t<span>{{totalCount}}</span>\n\t\t\t<p>results of {{#if applicant}}applicant{{else}}accommodation{{/if}} in</p>\n\t\t\t{{#if locationSearch}}\n\t\t\t<span class="location">{{locationSearch}}</span>\n\t\t\t{{else}}\n\t\t\t<span class="location">the world</span>\n\t\t\t{{/if}}\n\t\t</div>\n\t\t<div class="pager-right">\n\t\t\t<div class="resultCounter">\n\t\t\t\t<span>{{startResult}}</span>\n\t\t\t\t<span>{{endResult}}</span>\n\t\t\t\t<span>{{totalCount}}</span>\n\t\t\t</div>\n\t\t\t<div class="button-group">\n\t\t\t\t<a href="" class="button-pager-previous">\n\t\t\t\t\t<i class="icon-pager-previous">button previous</i>\n\t\t\t\t</a>\n\t\t\t\t<a href="" class="button-pager-next">\n\t\t\t\t\t<i class="icon-pager-next">button next</i>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div><!-- EOF button-group -->\n\t</div><!-- EOF pager content -->\n\t\n</div>\n');});
define('views/home/results',['require','jquery','backbone','api2','utils','views/lib/notifications','tmpl!templates/home/search_result.html'],function(require) {

	var $ = require('jquery');
	var Backbone = require('backbone');
	var api = require('api2');
	var utils = require('utils');
	var notifications = require('views/lib/notifications');
	var resultsTpl = require('tmpl!templates/home/search_result.html');

	var resultsView = Backbone.View.extend({

		el: "#search-results",

		events: {
			"click button.send-message-btn": "sendMessage",
			"click button.send-request-btn": "sendRequest",
			"click button.send-invitation-btn": "sendInvitation",
			"click .pager-content a.button-pager-next": "nextPage",
			"click .pager-content a.button-pager-previous": "previousPage"
		},

		reset: function(options) {
			this.$el = $('#search-results');
			this.el = this.$el[0];
			this.namesById = {};
			this.logged = options.logged;
			this.query = options.query;
		},
		setQuery: function(query) {
			this.query = query;
		},
		render: function(results) {
			var self = this;

			this.$el.html(resultsTpl({
				notlogged: !self.logged,
				startResult: results.startResult,
				endResult: results.endResult,
				totalCount: results.count,
				locationSearch: self.query.wings,
				applicant: self.query.type === "Applicant",
				results: results.profiles.map(function(result) {
					result.live = (result.online === 'ON') ? true : false;
					result.online = (result.online === 'ON') ? 'Online' : false;
					result.id = result.profileId;
					result.replyTime = utils.formatReplyTime(+result.replyTime);
					self.namesById[result.id]  = result.firstName + ' ' + result.lastName;
					return result;
				})
			}));

			this.lastPage = results.count / results.endResult;

			$('[id^=collapse]').on('hide', function() {
				self.toggleCollapsibleText(this, 'less', 'more');
			});

			$('[id^=collapse]').on('show', function() {
				self.toggleCollapsibleText(this, 'more', 'less');
			});

			if (!self.logged)
				$("#feedback-btn").hide();

		},
		nextPage: function() {
			debugger;
			var scope = this;
			if (+this.query.page === this.lastPage) return false;
			this.query.page++;
			api.get(api.getApiVersion() + "/profiles", this.query).then(function(results) {
				scope.render(results.data);
			});
			return false;
		},
		previousPage: function() {
			var scope = this;
			if (+this.query.page === 1) return false;
			this.query.page--;
			api.get(api.getApiVersion() + "/profiles", this.query).then(function(results) {
				scope.render(results.data);
			});
			return false;
		},
		close: function() {
			this.remove();
			this.unbind();
		},

		_sendNotification: function(event, type) {
			if (!this.logged)
				return router.navigate('#/register');

			var id = $(event.target).parents('.search-result').data('profile-id');
			var name = this.namesById[id];
			notifications[type](id, name);
		},

		sendMessage: function(event) {
			this._sendNotification(event, 'message');
		},
		sendRequest: function(event) {
			this._sendNotification(event, 'request');
		},
		sendInvitation: function(event) {
			this._sendNotification(event, 'invitation');
		},

		toggleCollapsibleText: function(target, targetText, replaceText) {
			var heading = $(target).next('.accordion-heading').find('span');
			var re = new RegExp('(' + targetText + ')');
			var changed = heading.html().replace(re, replaceText);
			heading.html(changed);
			if (targetText === 'more')
				$(heading).css('background-position', '-858px -16px');
			else
				$(heading).css('background-position', '-658px -16px');
		}
	});
	return resultsView;
});

//jshint camelcase:false

define('views/home/main',['require','jquery.Datepicker','jquery','backbone','api2','utils','tmpl!templates/home/main.html','tmpl!templates/home/search.accomodation.html','views/home/results'],function(require) {

	require("jquery.Datepicker");
	var $ = require("jquery");
	var Backbone = require("backbone");
	var api = require("api2");
	var utils = require("utils");
	var mainTpl = require("tmpl!templates/home/main.html");
	var accomodationTpl = require("tmpl!templates/home/search.accomodation.html");
	var ResultsView = require("views/home/results");

	var MainHomeView = Backbone.View.extend({

		el: "#main",

		events: {
			"submit form#accomodation-search-form": "submitSearch",
		},

		initialize: function() {

		},

		render: function(params) {
			$(this.el).html(mainTpl);

			this.$("#accomodation").html(accomodationTpl);

			this.$("input[name=startDate]").datepicker({
				minDate: new Date(),
				dateFormat: "yy-mm-dd",
			});
			this.$("input[name=endDate]").datepicker({
				minDate: new Date(),
				dateFormat: "yy-mm-dd",
			});

			this.search = new google.maps.places.Autocomplete(document.getElementById("inputWings"), { types: ['(cities)'] });

			/*
			* BUG: Do search is never reached if user selects city by pressing Enter
			*/
			google.maps.event.addListener(this.search, 'place_changed', this.setCityField.bind(this));

			if (params)
				this.unserializeParams(params);

			if (!api.userIsLoggedIn())
				$("#feedback-btn").hide();

		},

		setCityField: function(){
			var place = this.search.getPlace();
			var cc = null;

			if (place)
				cc = utils.getCityAndCountry(place.address_components);
			if (!cc)
				return;

			this.cityField = cc.city;
		},

		unserializeParams: function(params){
			var self = this;
			_.each(params, function(value, key){
				self.$("[name=" + key + "]")
				.val(value);
			});
		},

		renderResults: function(query, results) {
			if (!this.resultsView)
				this.resultsView = new ResultsView();

			this.resultsView.reset({
				logged: api.userIsLoggedIn(),
				query: query,
			});

			this.resultsView.render(results);
		},

		displayErrors: function(errors) {
			var self = this;

			errors.map(function(error){
				self.$('.form-errors.' + error.css)
				.html('<label class="error">' + error.text + '</label>');
			});
		},

		submitSearch: function(e) {
			var errors = [];
			e.preventDefault();

			var crc = this.$('#inputWings').val();
			this.$('#inputWings').val(crc.split(',')[0]);

			if (new Date($("input[name=endDate]").val()) < new Date($("input[name=startDate]").val()))
				errors.push({css: 'date-error', text: 'Invalid dates'});

			if (+$("select[name=endAge]").val() < +$("select[name=startAge]").val())
				errors.push({css: 'age-error', text: 'Invalid age'});

			if (errors.length)
				return this.displayErrors(errors);

			var formData = utils.serializeForm(e.target.id);
			if (this.cityField){
				formData.wings = this.cityField;
				this.cityField = null;
			}

			formData.page = 1;
			//Trigger false isn't working here due to BacboneJS bug I guess
			router.navigate("#/search/" + api.urlEncode(formData), {trigger: false});
		},

	});

	return new MainHomeView;
});

define('tmpl!templates/app/feedback.html',[ 'core/view' ], function(view) {return view('<form id="feedback-form">\n\t<div class="control-group">\n\t\t<label class="control-label" for="inputHost">Typology</label>\n\t\t<div class="controls radios">\n\t\t\t<i class="icon-like-up">Like up icon</i>\n\t\t\t<label>\n\t\t\t\t<input type="radio" name="ftype" id="optionsType" value="Positive" checked="">Cool\n\t\t\t</label>\n\t\t\t<i class="icon-like-down">Like down icon</i>\n\t\t\t<label class="radio-like-down">\n\t\t\t\t<input type="radio" name="ftype" id="optionsRadios2" value="Negative">Sucks\n\t\t\t</label>\n\t\t</div>\n\t</div>\n\t<div class="control-group avatar-message">\n\t\t<label class="control-label">\n\t\t\t<a href="">\n\t\t\t\t<img id="avatar" src="{{avatar}}" alt="avatar">\n\t\t\t</a>\n\t\t</label>\n\t\t<div class="controls">\n\t\t\t<textarea rows="3" maxlength="1500" name="text" placeholder="Write a message..." class="required"></textarea>\n\t\t\t<span class="help-block"></span>\n\t\t</div>\n\t</div>\n</form>\n');});
define('views/app/feedback',['require','jquery','backbone','api2','utils','views/lib/alerts','tmpl!templates/app/feedback.html','models/Account'],function(require) {

	var $ = require('jquery');
	var Backbone = require('backbone');
	var api = require('api2');
	var utils = require('utils');
	var alerts = require('views/lib/alerts');
	var contentTpl = require('tmpl!templates/app/feedback.html');
	var UserModel = require('models/Account');

	$(window).scroll(function() {
		if($(window).scrollTop() + $(window).height() > $(document).height() - 1) {
			$('#feedback-btn-submit').css('bottom', 54);
		} else
			$('#feedback-btn-submit').css('bottom', 0);
	});

	var FeedbackView = Backbone.View.extend({

		validation: {
			rules: {
				text: {
					required: true,
					maxlength: 1000,
				},
			}
		},

		initialize: function(userId){
			this.model = new UserModel({id: userId});
		},

		render: function(){
			var content = contentTpl({ avatar: this.model.get("avatar")});
			this.modal = utils.showModal({
				header: "New suggestion",
				accept: "Send",
				loadingText: 'Sending...',
				content: content,
				form: 'feedback-form'
			});
			this.modal.on('hidden', this.close.bind(this));
			$("#feedback-form").on('submit', this.submitFeedback.bind(this));
			$("#feedback-form").validate(this.validation);
		},

		submitFeedback: function(evt){
			evt.preventDefault();
			var self = this;
			var data = utils.serializeForm("feedback-form");

			if (this.modal.find("#feedback-form").valid()) {
				this.modal.find(".accept-modal-btn").button('loading');

				api.post(api.getApiVersion() + "/feedback", data)
				.then(function(response){
					self.modal.find(".accept-modal-btn").button('reset');
					self.modal.modal('hide');

					if (response.status === true)
						alerts.success('Feedback received, thanks for your help.');
				});
			}
		},

		close: function() {
			this.remove();
			this.unbind();
		},
	});

return FeedbackView;
});

define('views/app/home',['require','jquery','backbone','api2','views/home/main','views/app/feedback'],function(require) {

	var $ = require('jquery');
	var Backbone = require('backbone');
	var api = require('api2');
	var mainView = require('views/home/main');
	var FeedView = require('views/app/feedback');

	var HomeView = Backbone.View.extend({
		initialize: function(){
			this.eventBinds();
		},
		eventBinds: function(){
			$("#feedback-btn-submit").live("click", this.showFeedback.bind(this));
		},
		render: function(){
			mainView.render();
			$("#feedback-btn").show();
		},
		showFeedback: function(evt){
			evt.preventDefault();
			if (!this.feedbackView)
				this.feedbackView = new FeedView(api.getUserId());

			this.feedbackView.render();
		}
	});

	return new HomeView;
});

define('phrases',[],function() {

    var civilState = {
        SI: "Single",
        EN: "Engaged",
        MA: "Married",
        WI: "Widowed",
        IR: "In a relationship",
        IO: "In an open relationship",
        IC: "It's complicated",
        DI: "Divorced",
        SE: "Separated"
    };

    var smoking = {
        S: "I smoke",
        D: "I don't smoke, but guests can smoke here",
        N: "No smoking allowed"
    };

    var whereSleepingType = {
        C: "Common area",
        P: "Private area",
        S: "Shared private area"
    };

    var wingStatus = {
        Y: "Yes",
        N: "No",
        M: "Maybe"
    };

    var wingDaysChoices = {
        A: "Any",
        F: "From Monday to Friday",
        T: "From Monday to Thursday",
        W: "Weekend",
    };

    var months = [
            { name: 'January'},
            { name: 'Feburary'},
            { name: 'March'},
            { name: 'April'},
            { name: 'May'},
            { name: 'June'},
            { name: 'July'},
            { name: 'August'},
            { name: 'September'},
            { name: 'October'},
            { name: 'November'},
            { name: 'December'},
    ];

    return {
        choices: {
            civilState: civilState,
            smoking: smoking,
            whereSleepingType: whereSleepingType,
            wingStatus: wingStatus,
            wingDaysChoices: wingDaysChoices,
        },
        months: months,
    };

});


define('tmpl!templates/lib/balloon.html',[ 'core/view' ], function(view) {return view('<div class="balloon-alert">\n\t<span class="ribbon"></span>\n\t<div class="balloon-content">\n\t\t{{#with options}}\n\t\t\t{{{content}}}\n\t\t{{/with}}\n\t</div>\n</div>\n<span class="signal-bottom"></span>');});
define('views/lib/balloon.response',['require','jquery','backbone','tmpl!templates/lib/balloon.html'],function(require) {

	var $ = require('jquery');
	var Backbone = require('backbone');
	var balloonTpl = require('tmpl!templates/lib/balloon.html');

	var BalloonView = Backbone.View.extend({

		el: '#main',

		render: function(options){
			$(this.el).html(balloonTpl({options: options}));
		}
	});

	return new BalloonView;
});

define('tmpl!templates/home/forms/register.html',[ 'core/view' ], function(view) {return view('<form id="register-form" class="form-horizontal pull-right navbar-inner">\n\t<span class="signal">register signal</span>\n\t<legend>Sign up</legend>\n\t<div class="control-group clear">\n\t\t<label class="control-label" for="inputName">Name</label>\n\t\t<div class="controls two-elements">\n\t\t\t<input type="text" id="firstName" name="firstName" placeholder="First Name" class="input-small required" maxlength="14">\n\t\t\t<input type="text" name="lastName" placeholder="Last Name" class="input-small required" maxlength="30">\n\t\t\t<span class="help-block"></span>\n\t\t</div>\n\t</div>\n\t<div class="control-group">\n\t\t<label class="control-label" for="inputPassword">Password</label>\n\t\t<div class="controls two-elements">\n\t\t\t<input id="pass" type="password" name="password" placeholder="Password" class="required" maxlength="20">\n\t\t\t<input type="password" name="confirm_password" placeholder="Repeat Password" class="required">\n\t\t\t<span class="help-block"></span>\n\t\t</div>\n\t</div>\n\t<div class="control-group">\n\t\t<label class="control-label" for="inputEmail">Your email</label>\n\t\t<div class="controls">\n\t\t\t<input id="email" type="email" name="email" placeholder="Your current email address" class="required" maxlength="50">\n\t\t\t<span class="help-block"></span>\n\t\t</div>\n\t</div>\n\t<div class="control-group">\n\t\t<div class="controls">\n\t\t\t<input type="email" name="repeatEmail" placeholder="Repeat your email address" class="required">\n\t\t\t<span class="help-block"></span>\n\t\t</div>\n\t</div>\n\t<div class="control-group">\n\t\t<label class="control-label" for="inputBirthday">Birthday</label>\n\t\t<div class="controls">\n\t\t\t<select id="id_birthday_month" name="birthdayMonth" class="input-small required">\n\t\t\t\t<option value="">Month</option>\n\t\t\t\t{{#each month}}\n\t\t\t\t<option value="{{indexPlusOne}}">{{name}}</option>\n\t\t\t\t{{/each}}\n\t\t\t</select>\n\t\t\t<select id="id_birthday_day" name="birthdayDay" class="input-mini required">\n\t\t\t\t<option value="">Day</option>\n\t\t\t\t{{#range 1 31 1}}\n\t\t\t\t<option value="{{self}}">{{self}}</option>\n\t\t\t\t{{/range}}\n\t\t\t</select>\n\t\t\t<select id="id_birthday_year" name="birthdayYear" class="input-mini required">\n\t\t\t\t<option value="">Year</option>\n\t\t\t\t{{#range 2006 1900 \'-1\'}}\n\t\t\t\t<option value="{{self}}">{{self}}</option>\n\t\t\t\t{{/range}}\n\t\t\t</select>\n\t\t\t<span class="help-block"></span>\n\t</div>\n\t<div class="control-group">\n\t\t<label class="control-label" for="inputGender">Gender</label>\n\t\t<div class="controls">\n\t\t\t<select name="gender" id="id_gender" class="required">\n\t\t\t\t<option value="">I am</option>\n\t\t\t\t<option value="Male">Male</option>\n\t\t\t\t<option value="Female">Female</option>\n\t\t\t</select>\n\t\t\t<span class="help-block"></span>\n\t\t</div>\n\t</div>\n\t<div class="control-group">\n\t\t<div class="controls terms">\n\t\t\t<p>By continuing, you\'re confirming that you\'ve read and agree to our the <a id="terms-link" href="#/help#terms-of-service" target="_blank">Terms and Conditions</a>, <a id="terms-link" href="#/help#privacy-policy" target="_blank">Privacy Policy and Cookie Policy</a>, and that you\'re 18 or older.</p>\n\t\t\t<button type="submit" class="button-peoplewings">Sign up!</button>\n\t\t</div>\n\t</div>\n</form>');});
define('tmpl!templates/lib/responses/register.check-email.html',[ 'core/view' ], function(view) {return view('<h1>Almost there!</h1>\n<h2>Confirm your email address!</h2>\n<p>A confirmation email has been sent to <strong>{{email}}</strong></p>\n<p>Click on the confirmation link in the email to activate your account</p>\n<p class="description">Didn\'t get your email ? Check your email account\'s junk or spam folder, just in case our email landed there. If it\'s in there, please remember to mark it <strong>Not junk/spam</strong></p>');});
define('tmpl!templates/lib/responses/register.underage.html',[ 'core/view' ], function(view) {return view('<h1>OOOOPS!</h1>\n<h2>You are too young to be a superhero...</h2>\n<p>Sorry, we are not able to process your registration</p>\n<p>In order to have an account, you must meet certain age requirements</p>');});
//jshint camelcase:false

define('views/home/register',['require','jquery','backbone','api2','utils','phrases','views/lib/spinner','views/lib/balloon.response','tmpl!templates/home/forms/register.html','tmpl!templates/lib/responses/register.check-email.html','tmpl!templates/lib/responses/register.underage.html'],function(require) {

	var $ = require('jquery');
	var Backbone = require('backbone');
	var api = require('api2');
	var utils = require('utils');
	var phrases = require("phrases");
	var spinner = require('views/lib/spinner');

	var responseView = require('views/lib/balloon.response');

	var registerTpl = require('tmpl!templates/home/forms/register.html');
	var confirmTpl = require('tmpl!templates/lib/responses/register.check-email.html');
	var underageTpl = require('tmpl!templates/lib/responses/register.underage.html');

	var RegisterView = Backbone.View.extend({

		el: "#main",

		events: {
			"submit form#register-form": "submitRegister",
		},

		validation: {
			rules: {
				password: {
					minlength: 8,
					validpassword: true
				},
				confirm_password: {
					minlength: 8,
					equalTo: "#pass",
				},
				/*birthdayYear: {
					max: (new Date()).getFullYear() - 18,
				},*/
				email: {
					email: true
				},
				repeatEmail: {
					email: true,
					equalTo: '#email'
				},
				terms: {
					required: true,
				}
			},
			messages: {
				birthdayYear: {
					max: "You need to be +18 years old to register"
				},
				hasAcceptedTerms: "Please accept our terms"
			},
			errorPlacement: function(error, element) {
				error.appendTo(element.nextAll("span.help-block"));
			},
		},

		render: function() {

			$(this.el).html(registerTpl({
				month: phrases.months,
			}));

			this.$('#register-form').validate(this.validation);

			$("#feedback-btn").hide();

		},

		submitRegister: function(e) {
			e.preventDefault(e);

			var self = this;
			var data = utils.serializeForm(e.target.id);

			data.birthdayYear = +data.birthdayYear;
			data.birthdayMonth = +data.birthdayMonth;
			data.birthdayDay = +data.birthdayDay;

			spinner.show('register');

			api.post(api.getApiVersion() + '/newuser', data)
			.then(function(response){
				spinner.hide('register');
				self.$('#register-form').remove();
				if(response.status === true) {
					responseView.render({
						content: confirmTpl({email: response.data.email})
					});
				} else {
					responseView.render({
						content: underageTpl
					});
				}
			});
		},

	});

	return new RegisterView;
});

define('tmpl!templates/app/header.html',[ 'core/view' ], function(view) {return view('<div class="navbar nav navbar-fixed-top">\n\t<div class="navbar-inner">\n\t\t\t<a class="brand" href="#">Peoplewings</a>\n\t\t\t<input type="text" id="header-search" placeholder="Where do you need wings ?">\n\t\t\t<div class="btn-group pull-right">\n\t\t\t\t<a class="dropdown-toggle" data-toggle="dropdown" href="#">\n\t\t\t\t\t<span class="icon-config"></span>\n\t\t\t\t</a>\n\t\t\t\t<ul class="dropdown-menu">\n\t\t\t\t\t<li><a href="#/settings">Account settings</a></li>\n\t\t\t\t\t<li><a href="#/logout">Log Out</a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div class="nav-menu">\n\t\t\t\t<ul class="nav pull-right">\n\t\t\t\t\t<li><a href="#/messages"><span id="notif-count">{{notifs}}</span>Messages</a></li>\n\t\t\t\t\t<li><a href="#/profiles/{{id}}/wings">My Wings</a></li>\n\t\t\t\t\t<li class="logged"><a href="#/profiles/{{id}}/about">{{firstName}} {{lastName}}<img src="{{avatar}}"></a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div id="mini-spinner"><span style="display: none">loading</span></div>\n\t\t</div>\n\t</div>\n</div>\n');});
//jshint camelcase:false

define('views/app/header',['require','jquery','backbone','api2','utils','tmpl!templates/app/header.html','models/Account'],function(require){

	var $ = require("jquery");
	var Backbone = require("backbone");
	var api = require("api2");
	var utils = require("utils");
	var headerTpl = require("tmpl!templates/app/header.html");
	var UserModel = require("models/Account");

	var AppHeader = Backbone.View.extend({

		el: 'header',

		initialize: function(){
			this.model = new UserModel({id: api.getUserId()});
			this.model.on("change", this.render.bind(this));
			this.model.fetch();
			this.searchVisible = true;
		},

		render: function(){
			$(this.el).html(headerTpl(this.model.toJSON(), {lastName: this.model.get('lastName')[0] + '.'}));

			this.search = new google.maps.places.Autocomplete(document.getElementById("header-search"), { types: ['(cities)'] });
			google.maps.event.addListener(this.search, 'place_changed', this.doSearch.bind(this));
			this.showSearch(this.searchVisible);
		},

		refresh: function(){
			this.model.fetch();
		},

		destroy: function(){
			this.remove();
			this.unbind();
		},

		showSearch: function(state) {
			this.searchVisible = state;
			this.$('#header-search')[ state ? 'show' : 'hide' ]();
			this.$('#header-search').val('');
		},

		doSearch: function(){
			var $header = this.$('#header-search');
			var cc = utils.getCityAndCountry(this.search.getPlace().address_components);

			if (!cc)
				return;

			var filter = $header.val() ? '&wings=' + cc.city : '';
			$header.val('');
			$header.blur();
			document.location.hash = '/search/?capacity=1&language=all&type=Host&gender=Both&page=1&startAge=18&endAge=98' + filter;
		}
	});

	return AppHeader;
});

define('text!templates/home/forms/login.html',[],function () { return '<form id="login-form" class="form-horizontal pull-right">\n\t<legend>Log in</legend>\n\t<span class="signal">register signal</span>\n\t<div class="control-group clear">\n\t\t<label class="control-label" for="inputEmail">Email</label>\n\t\t<div class="controls">\n\t\t\t<input type="email" id="inputEmail" name="username" placeholder="Email" class="span3 required" maxlength="50">\n\t\t</div>\n\t</div>\n\t<div class="control-group">\n\t\t<label class="control-label" for="inputPassword">Password</label>\n\t\t<div class="controls">\n\t\t\t<input type="password" id="inputPassword" name="password" placeholder="Password" class="span3 required"maxlength="20">\n\t\t</div>\n\t</div>\n\t<div class="control-group">\n\t\t<div class="controls terms">\n\t\t\t<label class="checkbox">\n\t\t\t\t<input type="checkbox" name="remember"> Remember me\n\t\t\t</label>\n\t\t\t<a href="#/forgot">Can\'t access your account?</a>\n\t\t\t<button type="submit" class="button-peoplewings">Sign in</button>\n\t\t</div>\n\t</div>\n</form>\n';});

define('views/home/login',['require','jquery','backbone','utils','api2','views/app/header','text!templates/home/forms/login.html','views/lib/spinner'],function(require) {

	var $ = require('jquery');
	var Backbone = require('backbone');
	var utils = require('utils');
	var api = require('api2');
	var Header = require('views/app/header');
	var loginTpl = require('text!templates/home/forms/login.html');

	var spinner = require('views/lib/spinner');

	var LoginView = Backbone.View.extend({

		el: "#main",

		events: {
			"submit form#login-form": "submitLogin"
		},

		render: function() {
			$(this.el).html(loginTpl);
			this.$('form').validate();
			this.$inputEmail = this.$("#inputEmail");
			this.$inputPassword = this.$("#inputPassword");

			$("#feedback-btn").hide();
		},

		submitLogin: function(e) {
			e.preventDefault(e);

			if (this.$inputPassword.val() === '' || this.$inputEmail.val() === '')
				return;

			spinner.show('login');
			var self = this;
			var formData = utils.serializeForm();

			api.post(api.getApiVersion() + '/auth/', formData)
				.prop('data')
				.then(function(data){
					self.loginSuccess(data, formData.remember);
				})
				.fin(function(){
					self.$inputPassword.val('');
					spinner.hide('login');
				});
		},

		loginSuccess: function(data) {
			api.saveAuthToken(JSON.stringify({
				auth: data.xAuthToken,
				uid: data.idAccount
			}));

			this.$inputPassword.val("");
			this.$inputEmail.val("");

			router.header = new Header;
			router.navigate("#/search");

		}
	});

	return new LoginView;
});

define('tmpl!templates/home/help-center.html',[ 'core/view' ], function(view) {return view('<div class="tabs sidebar">\r\n\t<ul>\r\n\t\t<li class="active"><a href="#how-it-works" data-toggle="tab">How it works</a></li>\r\n\t\t<li><a href="#terms-of-service" data-toggle="tab">Terms of service</a></li>\r\n\t\t<li><a href="#privacy-policy" data-toggle="tab">Privacy policy</a></li>\r\n\t</ul>\r\n</div>\r\n<div id="help-center" class="tab-content">\r\n\t<legend>Help center</legend>\r\n\t<div class="help-center-content tab-pane fade active in" id="how-it-works">\r\n\t\t<h1>How to Start</h1>\r\n\t\t<h2>Welcome to our global community!</h2>\r\n\t\t<p>This is a guide that will help you to start, so you can easily share the world.</p>\r\n\r\n\t\t<h1>1 Search</h1>\r\n\t\t<h2>Find the best PEOPLEWINGS can help.</h2>\r\n\t\t<p>On the home page or search page www.peoplewings.com/search, find the ideal PEOPLEWINGS typing where you need to share your WINGS.</p>\r\n\r\n\t\t<h1>2 Request</h1>\r\n\t\t<h2>Send requests to multiple PEOPLEWINGS.</h2>\r\n\t\t<p>Send WINGS requests with the yellow button "request", located to the right PEOPLEWINGS search results.</p>\r\n\t\t<p>We recommend that you make public requests to receive invitations from other PEOPLEWINGS. To make your public applications, you have to select the flag "Let other hosts can send me invitations". It shows in the popup "New Request" that appears when you click the yellow button "request".</p>\r\n\r\n\t\t<h1>3 Receive confirmation</h1>\r\n\t\t<h2>Wait confirmation of PEOPLEWINGS</h2>\r\n\t\t<p>Soon, you will receive confirmation messages of acceptance from PEOPLEWINGS users, who have requested them WINGS, on the message page:  www.peoplewings.com/messages.</p>\r\n\r\n\t\t<h1>4 "Fly"</h1> \r\n\t\t<h2>Enjoy your flight with your new WINGS!</h2>\r\n\t\t<p>The sharing WINGS day is very close. However, before you have to contact the host to confirm the time and place that you will find. </p>\r\n\t</div>\r\n\r\n\t<div class="help-center-content tab-pane fade in" id="terms-of-service">\r\n\t\t<h1>Terms of Service</h1>\r\n\t\t<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Possimus, quam, optio voluptas laudantium unde animi repellendus quas reprehenderit dolorem asperiores aliquid magnam necessitatibus qui quidem provident nisi magni perferendis quos.</p>\r\n\t</div>\r\n\r\n\t<div class="help-center-content tab-pane fade in" id="privacy-policy">\r\n\t\t<h1>Privacy Policy</h1>\r\n\t\t<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Provident, repellat, sunt, recusandae laboriosam vero eveniet officia odio temporibus nemo quo omnis eum ipsum commodi voluptas asperiores in facilis placeat molestiae!</p>\r\n\t</div>\r\n</div>');});
define('views/home/help',['require','jquery','backbone','api2','tmpl!templates/home/help-center.html'],function(require) {

	var $ = require('jquery');
	var Backbone = require('backbone');
	var api = require('api2');

	var helpTpl = require('tmpl!templates/home/help-center.html');

	var HelpCenter = Backbone.View.extend({

		el: "#main",

		render: function(tab) {

			$(this.el).html(helpTpl);

			if (tab) this.selectTab('#' + tab);

			if (!api.userIsLoggedIn())
				$("#feedback-btn").hide();
		},
		selectTab: function(tabId) {
			this.$('.tab-content .tab-pane').removeClass('active');
			$(tabId).addClass('active');

			$(".tabs ul li").removeClass("active");
			$('.tabs ul li a[href=' + tabId + ']')
			.parent()
			.addClass("active");
		},

	});

	return new HelpCenter;
});
define('views/home/activate',['require','api2','backbone','views/lib/alerts'],function(require) {

	var api = require('api2');
	var Backbone = require('backbone');
	var alerts = require('views/lib/alerts');

	var ActivateView = Backbone.View.extend({
		render: function(token){
			var data = { activationKey: token };

			api.post(api.getApiVersion() + '/activation', data).then(function() {
				alerts.success('Account activation complete. You can now login with your credentials');
				router.navigate('#/login');
			});

			$("#feedback-btn").hide();
		},
	});

	return new ActivateView;
});

define('tmpl!templates/lib/responses/password.check-email.html',[ 'core/view' ], function(view) {return view('<h1>Almost there!</h1>\n<h2>Please check your email</h2>\n<p>We\'ve sent you an email to <strong>{{email}}</strong> that will help you to reset your password quickly and easily</p>');});
define('tmpl!templates/lib/responses/password.changed.html',[ 'core/view' ], function(view) {return view('<h1>Perfect!</h1>\n<h2>Password changed</h2>\n<p>You can now log in with your new password</p>');});
define('tmpl!templates/home/forms/forgot-password.html',[ 'core/view' ], function(view) {return view('<form id="forgot-form">\n\t<div class="form-wrapper">\n\t\t<span class="signal">account signal</span>\n\t\t<div class="form-header">\n\t\t\t<h1>Find Your Account</h1>\n\t\t</div>\n\t</div>\n\t<div class="control-group confirm-changes">\n\t\t<p>Please enter the email address you provided when creating your account. A password reset link will be e-mailed to the address.</p>\n\t\t<label class="control-label" for="inputEmail">Email</label>\n\t\t<div class="controls">\n\t\t\t<input type="email" id="inputEmail" name="email" placeholder="Email" class="input-large required" maxlength="50">\n\t\t\t<span class="help-block"></span>\n\t\t</div>\n\t</div>\n\t<div class="footer-content">\n\t\t<div class="button-group">\n\t\t\t<a href="/#/login" class="button">Cancel</a>\n\t\t\t<button type="submit" class="button-highlight" data-loading-text="Sending...">Send</button>\n\t\t</div>\n\t</div>\n</form>');});
define('tmpl!templates/home/forms/change-password.html',[ 'core/view' ], function(view) {return view('\n<form id="password-form">\n\t<div class="balloon-wrapper">\n\t\t<span class="signal">account signal</span>\n\t\t<div class="balloon-header">\n\t\t\t<h1>Reset Password</h1>\n\t\t</div>\n\t\t<div class="balloon-content">\n\t\t\t<p>Please enter a new password for your account</p>\n\t\t\t<div class="control-group">\n\t\t\t\t<label class="control-label" for="inputPassword">New password</label>\n\t\t\t\t<div class="controls">\n\t\t\t\t\t<input type="password" id="inputPassword" name="newPassword" placeholder="Password" class="required" maxlength="20">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="control-group confirm-changes">\n\t\t\t\t<label class="control-label" for="inputPassword2">Retype password</label>\n\t\t\t\t<div class="controls">\n\t\t\t\t\t<input type="password" id="inputPassword2" name="newPassword2" placeholder="Password" class="required" maxlength="20">\n\t\t\t\t\t<input type="hidden" id="forgotToken" name="forgotToken" value="{{token}}">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="balloon-footer">\n\t\t\t<div class="button-group">\n\t\t\t\t\t<a href="/#/login" class="button">Cancel</a>\n\t\t\t\t\t<button type="submit" class="button-highlight" data-loading-text="Sending...">Send</button>\n\t\t\t</div>\n\t\t</div>\n\t</div><!-- EOF static-balloon -->\n</form>');});
define('views/home/password',['require','jquery','backbone','utils','api2','views/lib/balloon.response','tmpl!templates/lib/responses/password.check-email.html','tmpl!templates/lib/responses/password.changed.html','tmpl!templates/home/forms/forgot-password.html','tmpl!templates/home/forms/change-password.html','views/lib/spinner'],function(require) {

	var $ = require('jquery');
	var Backbone = require('backbone');
	var utils = require('utils');
	var api = require('api2');

	var responseView = require('views/lib/balloon.response');
	var confirmTpl = require('tmpl!templates/lib/responses/password.check-email.html');

	var pwdTpl = require('tmpl!templates/lib/responses/password.changed.html');
	var mailTpl = require('tmpl!templates/home/forms/forgot-password.html');
	var passTpl = require('tmpl!templates/home/forms/change-password.html');

	var spinner = require('views/lib/spinner');


	var PasswordView = Backbone.View.extend({
		el: "#main",

		events:{
			"submit form#forgot-form": "submitForgot",
			"submit form#password-form": "submitNewPwd"
		},

		validation: {
			rules: {
				newPassword: {
					minlength: 8,
					validpassword: true,
				},
				newPassword2: {
					minlength: 8,
					equalTo: "#inputPassword"
				}
			},
		},

		errorPlacement: function(error, element){
			error.appendTo(element.nextAll("span.help-block"));
		},

		initialize: function(){
		},

		render: function(token){
			var tpl = token ? passTpl({token: token}) : mailTpl;
			$(this.el).html(tpl);

			if (!token){
				$('#forgot-form').validate({
					errorPlacement: this.errorPlacement
				});
			}
			else {
				$('#password-form')
				.validate(_.extend(this.validation, this.errorPlacement));
			}

			$("#feedback-btn").hide();
		},

		submitForgot: function(e){
			e.preventDefault(e);
			spinner.show('password');
			$(e.target).find('button[type=submit]').button('loading');
			var data = utils.serializeForm(e.target.id);

			var self = this;
			api.post(api.getApiVersion() + '/forgot', data)
			.then(function(){
				$(e.target).find('button[type=submit]').button('reset');
				spinner.hide('password');
				self.$('#forgot-form').remove();
				responseView.render({
					content: confirmTpl({
						email: data.email
					})
				});
			});
		},

		submitNewPwd: function(e){
			e.preventDefault(e);
			spinner.show('password');
			$(e.target).find('button[type=submit]').button('loading');
			var data = utils.serializeForm(e.target.id);

			var self = this;
			api.post(api.getApiVersion() + '/forgot', {forgotToken: data.forgotToken, newPassword: data.newPassword})
			.then(function(){
				$(e.target).find('button[type=submit]').button('reset');
				spinner.hide('password');
				self.$('#password-form').remove();
				responseView.render({
					content: pwdTpl
				});
			});
		}
	});

return new PasswordView;
});

define('models/ProfileModel',['require','backbone','api2','utils','promise','phrases','core/factory'],function(require) {

	var Backbone = require('backbone');
	var api = require('api2');
	var utils = require('utils');
	var Promise = require('promise');
	var phrases = require('phrases');
	var factory = require('core/factory');

	var Preview = Backbone.Model.extend({

		me: function(){
			return api.getUserId() === this.id;
		},

		urlRoot: api.getApiVersion() + "/profiles/",

		url: function(){
			return this.me() ? this.urlRoot + this.id : this.urlRoot + this.id + "/preview";
		},

		urlWings: function(){
			return  this.me() ? this.urlRoot + this.id + "/accomodations" : this.urlRoot + this.id + "/accomodations/preview";
		},

		fetch: function(options) {
			var self = this;
			Promise.parallel(
				api.get(this.url()),
				api.get(this.urlWings())
				).spread(function(profile, wings) {
					self.parse(profile.data, wings.data);

					if (options && options.success)
						options.success();
				});
		},

		fetchWing: function(options){
			if (!options)
				return;

			var self = this;
			api.get(this.urlWings() + "/" + options.wingId)
			.then(function(resp){
				self.setWing(options.wingId, self.parseWing(resp.data));
				if (options.success)
					options.success();
			});
		},

		fetchWings: function(options){
			var self = this;
			api.get(this.urlWings())
			.then(function(resp){
				self.set("wingsCollection", resp.data.map(self.parseWing.bind(self)));
				self.trigger("change:wingsCollection");
				if (options.success)
					options.success();
			});
		},

		parse: function(profile, wings){

			profile.civilStateVerbose = phrases.choices.civilState[profile.civilState];
			profile.replyTimeVerbose = utils.formatReplyTime(profile.replyTime);

			profile.birthdayVerbose = this.parseBirthday({
				day: profile.birthDay,
				month: profile.birthMonth,
				year: profile.birthYear,
				privacy: profile.showBirthday,
			});

			this.attributes = profile;

			this.set("wingsCollection", wings.map(this.parseWing.bind(this)));
		},

		parseWing: function(wing){
			wing.bestDaysVerbose = phrases.choices.wingDaysChoices[wing.bestDays];
			wing.smokingVerbose = phrases.choices.smoking[wing.smoking];
			wing.whereSleepingTypeVerbose = phrases.choices.whereSleepingType[wing.whereSleepingType];
			wing.statusVerbose = phrases.choices.wingStatus[wing.status];
			wing.myProfile = this.me();
			return wing;
		},

		parseBirthday: function(options){
			switch (options.privacy){
				case "F":
				return options.month + "-" + options.day + "-" + options.year;
				case "P":
				return options.month + "-" + options.day;
				case "N":
				return "";
			}
		},

		save: function(data){
			var self = this;

			_.each(data, function(value, attr){
				self.set(attr, value);
				if (attr === "interestedIn")
					self.set(attr, [{gender: value}]);
			});

			var copy = _.omit(this.attributes, ["replyTimeVerbose","civilStateVerbose", "wingsCollection"]);

			return api.put(this.urlRoot + this.id, copy);
		},

		setWing: function(id, update){
			var index = this.findIndexByWingId(id);
			this.attributes.wingsCollection[index] = update;
			this.trigger("change:wingsCollection");
		},

		findWingById: function(id){
			return _.find(this.get("wingsCollection"), function(wing){
				return wing.id === id;
			});
		},

		findIndexByWingId: function(id){
			var index = null;
			_.find(this.get("wingsCollection"), function(wing, idx){
				if (wing.id === id){
					index = idx;
				}
				return wing.id === id;
			});

			return index;
		},
	});

	// Returns the Model singleton instance
	return factory(Preview);
});

define('views/app/logout',['require','backbone','api2','models/Account','models/ProfileModel'],function(require) {

	var Backbone = require('backbone');
	var api = require('api2');
	var UserModel = require('models/Account');
	var ProfileModel = require('models/ProfileModel');

	var LogoutView = Backbone.View.extend({

		logout: function() {
			var self = this;

			api.post(api.getApiVersion() + '/noauth/', {})
				.then(function(){
					self.goodbye();
				});
		},

		goodbye: function() {
			api.clearAuthToken();
			new ProfileModel({ id: api.getUserId() }).clear();
			new UserModel({ id: api.getUserId() }).clear();
			router.navigate("/#/");
			location.reload();
		}
	});

	return new LogoutView;
});

define('tmpl!templates/app/account/settings.html',[ 'core/view' ], function(view) {return view('<form id="settings-form">\n\t<div class="form-wrapper">\n\t\t<span class="signal">account signal</span>\n\t\t<legend>Account settings</legend>\n\t\t<div class="control-group clear">\n\t\t\t<label class="control-label" for="inputName">Name</label>\n\t\t\t<div class="controls">\n\t\t\t\t<input type="text" id="firstName" name="firstName" placeholder="First Name" class="input-small required" value="{{firstName}}" maxlength="14">\n\t\t\t\t<input type="text" id="lastName" name="lastName" placeholder="Last Name" class="input-small required" value="{{lastName}}" maxlength="30">\n\t\t\t\t<span class="help-block"></span>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="control-group">\n\t\t\t<label class="control-label" for="inputEmail">Current email</label>\n\t\t\t<div class="controls">\n\t\t\t\t<h1>{{email}}</h1>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="control-group">\n\t\t\t<label class="control-label" for="inputEmail">Change email</label>\n\t\t\t<div class="controls">\n\t\t\t\t<input type="email" name="email" id="inputEmail" placeholder="You new email address" class="input-margin" maxlength="50">\n\t\t\t\t<span class="help-block"></span>\n\t\t\t\t<input type="email" name="repeatEmail" id="repeatEmail" placeholder="Rewrite your email address" class="" maxlength="50">\n\t\t\t\t<span class="help-block"></span>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="control-group">\n\t\t\t<label class="control-label" for="inputEmail">Change your password</label>\n\t\t\t<div class="controls">\n\t\t\t\t<input type="password" name="password" id="pass" placeholder="You new password" class="input-margin password-line" maxlength="20">\n\t\t\t\t<span class="help-block"></span>\n\t\t\t\t<input type="password" name="repeatPassword" id="pass2" placeholder="Rewrite your new password" class="password-line" maxlength="20">\n\t\t\t\t<span class="help-block"></span>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="control-group">\n\t\t\t<label class="control-label"for="inputDelete">Delete entire account</label>\n\t\t\t<div class="controls terms">\n\t\t\t\t<p>If you want to delete your account and all services and info associated witht it, click <a href="#/settings/delete">here</a></p>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class="control-group confirm-changes">\n\t\t<p>To save these settings, please enter your PEOPLEWINGS password</p>\n\t\t<label class="control-label"for="inputPassWrite">Current password</label>\n\t\t<div class="controls">\n\t\t\t<input type="password" id="inputPasword" name="current_password" class="required password-line" maxlength="20">\n\t\t\t<span class="help-block"></span>\n\t\t</div>\n\t</div><!-- EOF control-group terms -->\n\n\t<div class="footer-content">\n\t\t<div class="button-group">\n\t\t\t<a href="/#/login" class="button">Cancel</a>\n\t\t\t<button type="submit" id="save-settings-btn" class="button-highlight" data-loading-text="Saving...">Save</button>\n\t\t</div>\n\t</div>\n</form>');});
//jshint camelcase:false

define('views/app/settings',['require','jquery','backbone','api2','utils','tmpl!templates/app/account/settings.html','views/lib/alerts','models/Account'],function(require) {

	var $ = require("jquery");
	var Backbone = require("backbone");
	var api = require("api2");
	var utils = require("utils");
	var settingsTpl = require("tmpl!templates/app/account/settings.html");
	var alerts = require('views/lib/alerts');
	var AccountModel = require("models/Account");

	var settingsView = Backbone.View.extend({

		el: "#main",

		events: {
			"submit form#settings-form": "submitSettings",
		},

		validation: {
			rules: {
				password: {
					minlength: 8,
					validpassword: true
				},
				repeatPassword: {
					minlength: 8,
					equalTo: '#pass'
				},
				email: {
					email: true
				},
				repeatEmail: {
					email: true,
					equalTo: '#inputEmail'
				},
			},
			errorPlacement: function(error, element) {
				error.appendTo(element.nextAll("span.help-block"));
			},
		},

		initialize: function() {
			this.model = new AccountModel({
				id: api.getUserId()
			});
			this.model.on("change", this.render.bind(this));
		},

		render: function() {
			$(this.el).html(settingsTpl(this.model.toJSON()));
			this.$('#settings-form').validate(this.validation);
		},

		submitSettings: function(e) {
			e.preventDefault();
			this.$("#save-settings-btn").button('loading');
			var data = utils.serializeForm('settings-form');
			var values = {};

			_.each(data, function(value, key) {
				if (key !== "repeatPassword" && key !== "repeatEmail" && key !== "current_password")
					values[key] = value;
			});

			var self = this;
			this.model.save(values, data.current_password)
			.then(function() {
				alerts.success('Account updated');
			}, function(errors) {
				var l = errors.length;
				for (var i = 0; i < l; i++){
					if (errors[i].type === 'INCORRECT_PASSWORD')
						self.$('#inputPassword').val();
					else
						alerts.defaultError();
				}
			})
			.fin(function() {
				self.$('#settings-form')[0].reset();
				self.$("#save-settings-btn").button('reset');
			});
		},
	});

return settingsView;

});

define('tmpl!templates/app/account/delete-account.html',[ 'core/view' ], function(view) {return view('<form id="delete-account-form" cnovalidate="novalidate">\n\t<div class="balloon-wrapper">\n\t\t<span class="signal">account signal</span>\n\t\t<div class="balloon-header">\n\t\t\t<h1>Delete your Peoplewings account !!</h1>\n\t\t</div>\n\t\t<div class="balloon-content">\n\t\t\t<p>Please provide your password to confirm you fully understand that you\'ll no longer be able to use of this product and all information associated with them, and that your account will be lost</p>\n\t\t\t<div class="control-group">\n\t\t\t\t<label class="control-label" for="inputCurrentPassword">Password</label>\n\t\t\t\t<div class="controls">\n\t\t\t\t\t<input type="password" id="currentPassword" name="currentPassword" maxlength="20" placeholder="Your password" class="required" maxlength="20">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="balloon-footer">\n\t\t\t<div class="control-group">\n\t\t\t\t<div class="controls">\n\t\t\t \t\t<a href="/#/login" class="button">Cancel</a>\n\t\t\t\t\t<button id="delete-account-btn" type="submit" class="button-highlight" data-loading-text="Deleting..." role="button">Delete account</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div><!-- EOF static-balloon -->\n</form>\n');});
define('tmpl!templates/lib/responses/account.deleted.html',[ 'core/view' ], function(view) {return view('<h1>See you soon!</h1>\n<h2>Delete account</h2>\n<p>Your account has been deleted successfully</p>');});
define('views/app/deleteAccount',['require','backbone','api2','utils','views/app/logout','tmpl!templates/app/account/delete-account.html','tmpl!templates/lib/responses/account.deleted.html','models/Account','views/lib/balloon.response'],function(require) {

	var Backbone = require('backbone');
	var api = require('api2');
	var utils = require('utils');
	var logoutView = require("views/app/logout");
	var deleteTpl = require('tmpl!templates/app/account/delete-account.html');
	var responseTpl = require('tmpl!templates/lib/responses/account.deleted.html');
	var AccountModel = require("models/Account");
	var responseView = require('views/lib/balloon.response');

	var DeleteAccount = Backbone.View.extend({

		el: '#main',

		events: {
			"submit form#delete-account-form" : "deleteAccount"
		},

		initialize: function() {
			this.model = new AccountModel({
				id: api.getUserId()
			});
		},

		render: function() {
			$(this.el).html(deleteTpl);
			this.$('#delete-account-form').validate();
		},

		deleteAccount: function(evt){
			evt.preventDefault();
			if (!this.$('#' + evt.target.id).valid())
				return;

			this.$("#delete-account-btn").button('loading');

			var data = utils.serializeForm(evt.target.id);
			var self = this;

			this.model.destroy(data)
			.then(function() {
				responseView.render({
						content: responseTpl
				});
				setTimeout(logoutView.goodbye, 5000);
			}, function(){
				self.$("#delete-account-btn").button('reset');
				self.$('#' + evt.target.id)[0].reset();
			});

		},
	});

	return new DeleteAccount;
});

define('views/app/map',['require','jquery','backbone'],function(require){

	var $ = require("jquery");
	var Backbone = require("backbone");

	var mapView = Backbone.View.extend({

		markers: {

		},

		initialize: function(options) {
			this.el = options.el;
			this.id = options.id;
			this.css = options.css;
			this.styles = _.extend(options.styles || {}, {height: "300px"});
			this.mapOptions = options.mapOptions ||
			{
				zoom: 1,
				scrollwheel: false,
				center: new google.maps.LatLng(0, 0),
				mapTypeControl: false,
				streetViewControl: false,
				navigationControlOptions: {
					style: google.maps.NavigationControlStyle.SMALL
				},
				mapTypeId: google.maps.MapTypeId.ROADMAP
			};

			this.mapcanvas = $(document.createElement('div'));
			this.mapcanvas.attr({ id: this.id});
			this.mapcanvas.css(this.styles);

			if (this.css)
				this.mapcanvas.addClass(this.css);

		},

		render: function(){
			$(this.el).html(this.mapcanvas);
			this.map = new google.maps.Map(document.getElementById(this.id), this.mapOptions);
			this.renderMarkers();
		},

		setCenter: function (location) {
			this.map.setCenter(location);
		},

		addMarker: function(options) {
			if (!this.markers[options.id]) {

				var marker = new google.maps.Marker({
					map: this.map,
					position: options.location,
					title: options.title,
					icon: options.icon || null
				});

				this.markers[options.id] = marker;

			} else {

				this.markers[options.id].setPosition(options.location);
				this.markers[options.id].setTitle(options.title);

			}

			return true;
		},

		deleteMarker: function(id) {
			if (!this.markers[id])
				return false;

			this.markers[id].setMap(null);
			delete this.markers[id];
			return true;
		},

		renderMarkers: function() {
			var map = this.map;
			_.each(this.markers, function(marker){
				marker.setMap(map);
			});

		},

		clearMarkers: function(){
			_.each(this.markers, function(marker){
				marker.setMap(null);
			});
		}
	});

	return mapView;
});

define('tmpl!templates/app/profile/form.basic.html',[ 'core/view' ], function(view) {return view('\t\t\t\t<div id="upload-avatar" class="avatar">\n\t\t\t\t\t<img id="avatar" src="{{avatar}}" alt="avatar">\n\t\t\t\t\t<div class="edit-click">Change picture</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="box basic-info">\n\t\t\t\t\t<form id="basic-info-form" data-rel="basic-box">\n\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t<label class="control-label" for="inputGender">I am</label>\n\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t<select name="gender" id="inputGender" class="size-large">\n\t\t\t\t\t\t\t\t\t<option value="Male" {{selected gender \'Male\'}}>Male</option>\n\t\t\t\t\t\t\t\t\t<option value="Female" {{selected gender \'Female\'}}>Female</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t<label class="control-label" for="inputBirthday">Birthday</label>\n\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t<select id="id_birthday_month" name="birthMonth" class="size-large required">\n\t\t\t\t\t\t\t\t\t<option value="">Month</option>\n\t\t\t\t\t\t\t\t\t{{#each months}}\n\t\t\t\t\t\t\t\t\t<option value="{{indexPlusOne}}" {{selected ../birthMonth indexPlusOne}}>{{name}}</option>\n\t\t\t\t\t\t\t\t\t{{/each}}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t<select id="id_birthday_day" name="birthDay" class="size-small required">\n\t\t\t\t\t\t\t\t\t<option value="">Day</option>\n\t\t\t\t\t\t\t\t\t{{#range 1 31 1}}\n\t\t\t\t\t\t\t\t\t<option value="{{self}}" {{selected ../birthDay self}}>{{self}}</option>\n\t\t\t\t\t\t\t\t\t{{/range}}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t<select id="id_birthday_year" name="birthYear" class="size-medium required">\n\t\t\t\t\t\t\t\t\t<option value="">Year</option>\n\t\t\t\t\t\t\t\t\t{{#range 2006 1900 \'-1\'}}\n\t\t\t\t\t\t\t\t\t<option value="{{self}}" {{selected ../birthYear self}}>{{self}}</option>\n\t\t\t\t\t\t\t\t\t{{/range}}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t<!--<span class="icon lock-icon"></span>-->\n\t\t\t\t\t\t\t\t<select name="showBirthday" class="size-large lock-info">\n\t\t\t\t\t\t\t\t\t<option value="F" {{selected showBirthday \'F\'}}>Show full</option>\n\t\t\t\t\t\t\t\t\t<option value="P" {{selected showBirthday \'P\'}}>Show mm/dd</option>\n\t\t\t\t\t\t\t\t\t<option value="N" {{selected showBirthday \'N\'}}>Dont show</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id="" class="control-group">\n\t\t\t\t\t\t\t<label class="control-label">Interested in</label>\n\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t<select name="interestedIn" class="size-large">\n\t\t\t\t\t\t\t\t\t<option value="Both" {{selected interestedIn.0.gender \'Both\'}}>Both</option>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<option value="Female" {{selected interestedIn.0.gender \'Female\'}}>Female</option>\n\t\t\t\t\t\t\t\t\t<option value="Male" {{selected interestedIn.0.gender \'Male\'}}>Male</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id="" class="control-group">\n\t\t\t\t\t\t\t<label class="control-label" for="inputCivilState">Relationship status</label>\n\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t<select name="civilState" class="size-large">\n\t\t\t\t\t\t\t\t\t<option value="">---------</option>\n\t\t\t\t\t\t\t\t\t<option value="SI" {{selected civilState \'SI\'}}>Single</option>\n\t\t\t\t\t\t\t\t\t<option value="EN" {{selected civilState \'EN\'}}>Engaged</option>\n\t\t\t\t\t\t\t\t\t<option value="MA" {{selected civilState \'MA\'}}>Married</option>\n\t\t\t\t\t\t\t\t\t<option value="WI" {{selected civilState \'WI\'}}>Widowed</option>\n\t\t\t\t\t\t\t\t\t<option value="IR" {{selected civilState \'IR\'}}>In a relationship</option>\n\t\t\t\t\t\t\t\t\t<option value="IO" {{selected civilState \'IO\'}}>Open relationship</option>\n\t\t\t\t\t\t\t\t\t<option value="IC" {{selected civilState \'IC\'}}>Its complicated</option>\n\t\t\t\t\t\t\t\t\t<option value="DI" {{selected civilState \'DI\'}}>Divorced</option>\n\t\t\t\t\t\t\t\t\t<option value="SE" {{selected civilState \'SE\'}}>Separated</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id="" class="control-group">\n\t\t\t\t\t\t\t<label class="control-label" for="inputLanguage">Languages</label>\n\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t<div id="languages-list">\n\t\t\t\t\t\t\t\t\t{{#each languages}}\n\t\t\t\t\t\t\t\t\t<div id="language-{{@index}}">\n\t\t\t\t\t\t\t\t\t\t<select name="languages" id="language-field-{{@index}}" class="size-large">\n\t\t\t\t\t\t\t\t\t\t\t<option value="" selected="selected">Select Language</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Abkhazian" {{selected name \'Abkhazian\'}}>Abkhazian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Acholi" {{selected name \'Acholi\'}}>Acholi</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Afar" {{selected name \'Afar\'}}>Afar</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Afrikaans" {{selected name \'Afrikaans\'}}>Afrikaans</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Ainu" {{selected name \'Ainu\'}}>Ainu</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Albanian" {{selected name \'Albanian\'}}>Albanian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Algonquin" {{selected name \'Algonquin\'}}>Algonquin</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Alsatian" {{selected name \'Alsatian\'}}>Alsatian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Amharic" {{selected name \'Amharic\'}}>Amharic</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Ancient Greek" {{selected name \'Ancient Greek\'}}>Ancient Greek</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Arabic" {{selected name \'Arabic\'}}>Arabic</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Arabic (Baharna)" {{selected name \'Arabic (Baharna)\'}}>Arabic (Baharna)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Arabic (Egypt)" {{selected name \'Arabic (Egypt)\'}}>Arabic (Egypt)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Arabic (Gulf)" {{selected name \'Arabic (Gulf)\'}}>Arabic (Gulf)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Arabic (Levantine / Shami)" {{selected name \'Arabic (Levantine / Shami)\'}}>Arabic (Levantine / Shami)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Arabic (Morocco)" {{selected name \'Arabic (Morocco)\'}}>Arabic (Morocco)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Arabic (Tunisia)" {{selected name \'Arabic (Tunisia)\'}}>Arabic (Tunisia)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Aragonese" {{selected name \'Aragonese\'}}>Aragonese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Aramaic" {{selected name \'Aramaic\'}}>Aramaic</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Armenian" {{selected name \'Armenian\'}}>Armenian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Arpitan" {{selected name \'Arpitan\'}}>Arpitan</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Assamese" {{selected name \'Assamese\'}}>Assamese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Asturian" {{selected name \'Asturian\'}}>Asturian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Aymara" {{selected name \'Aymara\'}}>Aymara</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Azerbaijani" {{selected name \'Azerbaijani\'}}>Azerbaijani</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Bambara" {{selected name \'Bambara\'}}>Bambara</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Bashkir" {{selected name \'Bashkir\'}}>Bashkir</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Basque" {{selected name \'Basque\'}}>Basque</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Belarusian" {{selected name \'Belarusian\'}}>Belarusian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Bengali" {{selected name \'Bengali\'}}>Bengali</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Berber" {{selected name \'Berber\'}}>Berber</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Bihari" {{selected name \'Bihari\'}}>Bihari</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Bislama" {{selected name \'Bislama\'}}>Bislama</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Bosnian" {{selected name \'Bosnian\'}}>Bosnian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Breton" {{selected name \'Breton\'}}>Breton</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Bulgarian" {{selected name \'Bulgarian\'}}>Bulgarian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Bunun" {{selected name \'Bunun\'}}>Bunun</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Burmese" {{selected name \'Burmese\'}}>Burmese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Calabrian" {{selected name \'Calabrian\'}}>Calabrian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Catalan" {{selected name \'Catalan\'}}>Catalan</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Chichewa" {{selected name \'Chichewa\'}}>Chichewa</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Chilean Sign Language" {{selected name \'Chilean Sign Language\'}}>Chilean Sign Language</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Chinese (Mandarin)" {{selected name \'Chinese (Mandarin)\'}}>Chinese (Mandarin)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Chinese (Simplified)" {{selected name \'Chinese (Simplified)\'}}>Chinese (Simplified)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Chinese (Traditional)" {{selected name \'Chinese (Traditional)\'}}>Chinese (Traditional)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Chinuk Wawa" {{selected name \'Chinuk Wawa\'}}>Chinuk Wawa</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Chuukese" {{selected name \'Chuukese\'}}>Chuukese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Chuvash" {{selected name \'Chuvash\'}}>Chuvash</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Cornish" {{selected name \'Cornish\'}}>Cornish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Corsican" {{selected name \'Corsican\'}}>Corsican</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Cree" {{selected name \'Cree\'}}>Cree</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Creole" {{selected name \'Creole\'}}>Creole</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Creole (Guyana)" {{selected name \'Creole (Guyana)\'}}>Creole (Guyana)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Creole (Haiti)" {{selected name \'Creole (Haiti)\'}}>Creole (Haiti)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Creole (Jamaica)" {{selected name \'Creole (Jamaica)\'}}>Creole (Jamaica)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Creole (Louisiana)" {{selected name \'Creole (Louisiana)\'}}>Creole (Louisiana)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Croatian" {{selected name \'Croatian\'}}>Croatian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Czech" {{selected name \'Czech\'}}>Czech</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Danish" {{selected name \'Danish\'}}>Danish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Dari" {{selected name \'Dari\'}}>Dari</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Dhivehi" {{selected name \'Dhivehi\'}}>Dhivehi</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Dutch" {{selected name \'Dutch\'}}>Dutch</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Dutch (Belgium)" {{selected name \'Dutch (Belgium)\'}}>Dutch (Belgium)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Dutch (Netherlands)" {{selected name \'Dutch (Netherlands)\'}}>Dutch (Netherlands)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Dzongkha" {{selected name \'Dzongkha\'}}>Dzongkha</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="English" {{selected name \'English\'}}>English</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="English (Australia)" {{selected name \'English (Australia)\'}}>English (Australia)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="English (Belize)" {{selected name \'English (Belize)\'}}>English (Belize)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="English (Canada)" {{selected name \'English (Canada)\'}}>English (Canada)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="English (Caribbean)" {{selected name \'English (Caribbean)\'}}>English (Caribbean)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="English (Guyana)" {{selected name \'English (Guyana)\'}}>English (Guyana)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="English (Ireland)" {{selected name \'English (Ireland)\'}}>English (Ireland)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="English (Jamaica)" {{selected name \'English (Jamaica)\'}}>English (Jamaica)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="English (New Zealand)" {{selected name \'English (New Zealand)\'}}>English (New Zealand)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="English (Philippines)" {{selected name \'English (Philippines)\'}}>English (Philippines)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="English (South Africa)" {{selected name \'English (South Africa)\'}}>English (South Africa)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="English (Trinidad)" {{selected name \'English (Trinidad)\'}}>English (Trinidad)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="English (United Kingdom)" {{selected name \'English (United Kingdom)\'}}>English (United Kingdom)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="English (United States)" {{selected name \'English (United States)\'}}>English (United States)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="English (Zimbabwe)" {{selected name \'English (Zimbabwe)\'}}>English (Zimbabwe)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Erzya" {{selected name \'Erzya\'}}>Erzya</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Esperanto" {{selected name \'Esperanto\'}}>Esperanto</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Estonian" {{selected name \'Estonian\'}}>Estonian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Fang" {{selected name \'Fang\'}}>Fang</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Faroese" {{selected name \'Faroese\'}}>Faroese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Fijian" {{selected name \'Fijian\'}}>Fijian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Finnish" {{selected name \'Finnish\'}}>Finnish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="French" {{selected name \'French\'}}>French</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="French (Acadian)" {{selected name \'French (Acadian)\'}}>French (Acadian)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="French (Belgium)" {{selected name \'French (Belgium)\'}}>French (Belgium)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="French (Cajun)" {{selected name \'French (Cajun)\'}}>French (Cajun)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="French (Canada)" {{selected name \'French (Canada)\'}}>French (Canada)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="French (France)" {{selected name \'French (France)\'}}>French (France)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="French (Luxembourg)" {{selected name \'French (Luxembourg)\'}}>French (Luxembourg)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="French (Monaco)" {{selected name \'French (Monaco)\'}}>French (Monaco)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="French (Quebec)" {{selected name \'French (Quebec)\'}}>French (Quebec)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="French (Switzerland)" {{selected name \'French (Switzerland)\'}}>French (Switzerland)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Frisian" {{selected name \'Frisian\'}}>Frisian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Fulah" {{selected name \'Fulah\'}}>Fulah</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Gaelic" {{selected name \'Gaelic\'}}>Gaelic</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Galician" {{selected name \'Galician\'}}>Galician</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Ganda" {{selected name \'Ganda\'}}>Ganda</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Georgian" {{selected name \'Georgian\'}}>Georgian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="German" {{selected name \'German\'}}>German</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="German (Austria)" {{selected name \'German (Austria)\'}}>German (Austria)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="German (Germany)" {{selected name \'German (Germany)\'}}>German (Germany)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="German (Liechtenstein)" {{selected name \'German (Liechtenstein)\'}}>German (Liechtenstein)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="German (Luxembourg)" {{selected name \'German (Luxembourg)\'}}>German (Luxembourg)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="German (Switzerland)" {{selected name \'German (Switzerland)\'}}>German (Switzerland)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Greek" {{selected name \'Greek\'}}>Greek</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Greenlandic" {{selected name \'Greenlandic\'}}>Greenlandic</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Guahibo" {{selected name \'Guahibo\'}}>Guahibo</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Guarani" {{selected name \'Guarani\'}}>Guarani</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Gujarati" {{selected name \'Gujarati\'}}>Gujarati</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Hakka" {{selected name \'Hakka\'}}>Hakka</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Hausa" {{selected name \'Hausa\'}}>Hausa</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Hawaiian" {{selected name \'Hawaiian\'}}>Hawaiian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Hebrew" {{selected name \'Hebrew\'}}>Hebrew</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Hiligaynon" {{selected name \'Hiligaynon\'}}>Hiligaynon</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Hindi" {{selected name \'Hindi\'}}>Hindi</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Hindko" {{selected name \'Hindko\'}}>Hindko</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Hmong" {{selected name \'Hmong\'}}>Hmong</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Hungarian" {{selected name \'Hungarian\'}}>Hungarian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Icelandic" {{selected name \'Icelandic\'}}>Icelandic</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Igbo" {{selected name \'Igbo\'}}>Igbo</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Indonesian" {{selected name \'Indonesian\'}}>Indonesian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Ingush" {{selected name \'Ingush\'}}>Ingush</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Interlingua" {{selected name \'Interlingua\'}}>Interlingua</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Interlingue" {{selected name \'Interlingue\'}}>Interlingue</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Inuktitut" {{selected name \'Inuktitut\'}}>Inuktitut</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Inupiaq" {{selected name \'Inupiaq\'}}>Inupiaq</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Irish" {{selected name \'Irish\'}}>Irish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Irish Gaelic" {{selected name \'Irish Gaelic\'}}>Irish Gaelic</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Italian" {{selected name \'Italian\'}}>Italian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Italian (Italy)" {{selected name \'Italian (Italy)\'}}>Italian (Italy)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Italian (Switzerland)" {{selected name \'Italian (Switzerland)\'}}>Italian (Switzerland)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Japanese" {{selected name \'Japanese\'}}>Japanese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Javanese" {{selected name \'Javanese\'}}>Javanese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Kannada" {{selected name \'Kannada\'}}>Kannada</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Kaqchikel" {{selected name \'Kaqchikel\'}}>Kaqchikel</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Karelian" {{selected name \'Karelian\'}}>Karelian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Kashmiri" {{selected name \'Kashmiri\'}}>Kashmiri</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Kashubian" {{selected name \'Kashubian\'}}>Kashubian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Kazakh" {{selected name \'Kazakh\'}}>Kazakh</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Khmer" {{selected name \'Khmer\'}}>Khmer</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Kichwa" {{selected name \'Kichwa\'}}>Kichwa</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Kinyarwanda" {{selected name \'Kinyarwanda\'}}>Kinyarwanda</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Klingon" {{selected name \'Klingon\'}}>Klingon</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Komi" {{selected name \'Komi\'}}>Komi</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Konkani" {{selected name \'Konkani\'}}>Konkani</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Korean" {{selected name \'Korean\'}}>Korean</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Kosraean" {{selected name \'Kosraean\'}}>Kosraean</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Kurdish" {{selected name \'Kurdish\'}}>Kurdish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Kurmanji" {{selected name \'Kurmanji\'}}>Kurmanji</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Kyrgyz" {{selected name \'Kyrgyz\'}}>Kyrgyz</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Láadan" {{selected name \'Láadan\'}}>Láadan</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Ladakhi" {{selected name \'Ladakhi\'}}>Ladakhi</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Ladin" {{selected name \'Ladin\'}}>Ladin</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Lao" {{selected name \'Lao\'}}>Lao</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Latin" {{selected name \'Latin\'}}>Latin</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Latvian" {{selected name \'Latvian\'}}>Latvian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Ligurian" {{selected name \'Ligurian\'}}>Ligurian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Limburgish" {{selected name \'Limburgish\'}}>Limburgish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Lingala" {{selected name \'Lingala\'}}>Lingala</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Lithuanian" {{selected name \'Lithuanian\'}}>Lithuanian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Lojban" {{selected name \'Lojban\'}}>Lojban</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Lombard" {{selected name \'Lombard\'}}>Lombard</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Lower Sorbian" {{selected name \'Lower Sorbian\'}}>Lower Sorbian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Low German" {{selected name \'Low German\'}}>Low German</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Luganda" {{selected name \'Luganda\'}}>Luganda</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Luxembourgish" {{selected name \'Luxembourgish\'}}>Luxembourgish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Macedonian" {{selected name \'Macedonian\'}}>Macedonian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Maithili" {{selected name \'Maithili\'}}>Maithili</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Malagasy" {{selected name \'Malagasy\'}}>Malagasy</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Malay" {{selected name \'Malay\'}}>Malay</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Malayalam" {{selected name \'Malayalam\'}}>Malayalam</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Maltese" {{selected name \'Maltese\'}}>Maltese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Manchu" {{selected name \'Manchu\'}}>Manchu</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Manx" {{selected name \'Manx\'}}>Manx</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Maori" {{selected name \'Maori\'}}>Maori</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Mapudungun" {{selected name \'Mapudungun\'}}>Mapudungun</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Marathi" {{selected name \'Marathi\'}}>Marathi</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Mari" {{selected name \'Mari\'}}>Mari</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Marshallese" {{selected name \'Marshallese\'}}>Marshallese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Min Nan" {{selected name \'Min Nan\'}}>Min Nan</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Moksha" {{selected name \'Moksha\'}}>Moksha</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Moldovan" {{selected name \'Moldovan\'}}>Moldovan</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Mongolian" {{selected name \'Mongolian\'}}>Mongolian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Montenegrin" {{selected name \'Montenegrin\'}}>Montenegrin</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="More" {{selected name \'More\'}}>More</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Mortlockese" {{selected name \'Mortlockese\'}}>Mortlockese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Nahuatl" {{selected name \'Nahuatl\'}}>Nahuatl</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Nauruan" {{selected name \'Nauruan\'}}>Nauruan</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Navajo" {{selected name \'Navajo\'}}>Navajo</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Neapolitan" {{selected name \'Neapolitan\'}}>Neapolitan</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Nepal Bhasa" {{selected name \'Nepal Bhasa\'}}>Nepal Bhasa</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Nepali" {{selected name \'Nepali\'}}>Nepali</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Norwegian" {{selected name \'Norwegian\'}}>Norwegian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Norwegian (Bokmål)" {{selected name \'Norwegian (Bokmål)\'}}>Norwegian (Bokmål)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Norwegian (Nynorsk)" {{selected name \'Norwegian (Nynorsk)\'}}>Norwegian (Nynorsk)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Occitan" {{selected name \'Occitan\'}}>Occitan</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Ojibwe" {{selected name \'Ojibwe\'}}>Ojibwe</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Okinawan" {{selected name \'Okinawan\'}}>Okinawan</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Oriya" {{selected name \'Oriya\'}}>Oriya</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Oromo" {{selected name \'Oromo\'}}>Oromo</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Ossetian" {{selected name \'Ossetian\'}}>Ossetian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Palauan" {{selected name \'Palauan\'}}>Palauan</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Papiamento" {{selected name \'Papiamento\'}}>Papiamento</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Pashto" {{selected name \'Pashto\'}}>Pashto</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Pemon" {{selected name \'Pemon\'}}>Pemon</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Persian" {{selected name \'Persian\'}}>Persian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Pidgin" {{selected name \'Pidgin\'}}>Pidgin</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Piedmontese" {{selected name \'Piedmontese\'}}>Piedmontese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Pohnpeian" {{selected name \'Pohnpeian\'}}>Pohnpeian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Polish" {{selected name \'Polish\'}}>Polish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Portuguese" {{selected name \'Portuguese\'}}>Portuguese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Portuguese (Brazil)" {{selected name \'Portuguese (Brazil)\'}}>Portuguese (Brazil)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Portuguese (Portugal)" {{selected name \'Portuguese (Portugal)\'}}>Portuguese (Portugal)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Punjabi" {{selected name \'Punjabi\'}}>Punjabi</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Quechua" {{selected name \'Quechua\'}}>Quechua</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Quenya" {{selected name \'Quenya\'}}>Quenya</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Quiche" {{selected name \'Quiche\'}}>Quiche</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Rapa Nui" {{selected name \'Rapa Nui\'}}>Rapa Nui</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Romani" {{selected name \'Romani\'}}>Romani</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Romanian" {{selected name \'Romanian\'}}>Romanian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Romanian (Moldova)" {{selected name \'Romanian (Moldova)\'}}>Romanian (Moldova)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Romanian (Romania)" {{selected name \'Romanian (Romania)\'}}>Romanian (Romania)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Romansh" {{selected name \'Romansh\'}}>Romansh</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Rundi" {{selected name \'Rundi\'}}>Rundi</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Russian" {{selected name \'Russian\'}}>Russian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Russian (Moldova)" {{selected name \'Russian (Moldova)\'}}>Russian (Moldova)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Russian (Russia)" {{selected name \'Russian (Russia)\'}}>Russian (Russia)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sakha" {{selected name \'Sakha\'}}>Sakha</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sami" {{selected name \'Sami\'}}>Sami</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Samoan" {{selected name \'Samoan\'}}>Samoan</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sango" {{selected name \'Sango\'}}>Sango</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sanskrit" {{selected name \'Sanskrit\'}}>Sanskrit</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Saramaccan" {{selected name \'Saramaccan\'}}>Saramaccan</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sardinian" {{selected name \'Sardinian\'}}>Sardinian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Scots" {{selected name \'Scots\'}}>Scots</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Scottish Gaelic" {{selected name \'Scottish Gaelic\'}}>Scottish Gaelic</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Serbian (Cyrillic)" {{selected name \'Serbian (Cyrillic)\'}}>Serbian (Cyrillic)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Serbian (Latin)" {{selected name \'Serbian (Latin)\'}}>Serbian (Latin)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Serbo-Croatian" {{selected name \'Serbo-Croatian\'}}>Serbo-Croatian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Shona" {{selected name \'Shona\'}}>Shona</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sibe" {{selected name \'Sibe\'}}>Sibe</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sicilian" {{selected name \'Sicilian\'}}>Sicilian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - American" {{selected name \'Sign Language - American\'}}>Sign Language - American</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Austrian" {{selected name \'Sign Language - Austrian\'}}>Sign Language - Austrian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Brazilian" {{selected name \'Sign Language - Brazilian\'}}>Sign Language - Brazilian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - British" {{selected name \'Sign Language - British\'}}>Sign Language - British</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - BSL, AUSLAN, NZS" {{selected name \'Sign Language - BSL, AUSLAN, NZS\'}}>Sign Language - BSL, AUSLAN, NZS</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Catalan" {{selected name \'Sign Language - Catalan\'}}>Sign Language - Catalan</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Chinese" {{selected name \'Sign Language - Chinese\'}}>Sign Language - Chinese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Danish" {{selected name \'Sign Language - Danish\'}}>Sign Language - Danish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Dutch (NGT)" {{selected name \'Sign Language - Dutch (NGT)\'}}>Sign Language - Dutch (NGT)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Finnish" {{selected name \'Sign Language - Finnish\'}}>Sign Language - Finnish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Flemish" {{selected name \'Sign Language - Flemish\'}}>Sign Language - Flemish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - French" {{selected name \'Sign Language - French\'}}>Sign Language - French</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - German" {{selected name \'Sign Language - German\'}}>Sign Language - German</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Greek" {{selected name \'Sign Language - Greek\'}}>Sign Language - Greek</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Honduran" {{selected name \'Sign Language - Honduran\'}}>Sign Language - Honduran</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Honduras" {{selected name \'Sign Language - Honduras\'}}>Sign Language - Honduras</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Hungarian" {{selected name \'Sign Language - Hungarian\'}}>Sign Language - Hungarian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Indian" {{selected name \'Sign Language - Indian\'}}>Sign Language - Indian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - International" {{selected name \'Sign Language - International\'}}>Sign Language - International</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Irish" {{selected name \'Sign Language - Irish\'}}>Sign Language - Irish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Israeli" {{selected name \'Sign Language - Israeli\'}}>Sign Language - Israeli</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Italian" {{selected name \'Sign Language - Italian\'}}>Sign Language - Italian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Japanese" {{selected name \'Sign Language - Japanese\'}}>Sign Language - Japanese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Kenyan" {{selected name \'Sign Language - Kenyan\'}}>Sign Language - Kenyan</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Korean" {{selected name \'Sign Language - Korean\'}}>Sign Language - Korean</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Mexican" {{selected name \'Sign Language - Mexican\'}}>Sign Language - Mexican</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - New Zealand" {{selected name \'Sign Language - New Zealand\'}}>Sign Language - New Zealand</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Nicaragua" {{selected name \'Sign Language - Nicaragua\'}}>Sign Language - Nicaragua</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Norwegian" {{selected name \'Sign Language - Norwegian\'}}>Sign Language - Norwegian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Poland" {{selected name \'Sign Language - Poland\'}}>Sign Language - Poland</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Quebec" {{selected name \'Sign Language - Quebec\'}}>Sign Language - Quebec</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Russian" {{selected name \'Sign Language - Russian\'}}>Sign Language - Russian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Spanish" {{selected name \'Sign Language - Spanish\'}}>Sign Language - Spanish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Swedish" {{selected name \'Sign Language - Swedish\'}}>Sign Language - Swedish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Switzerland" {{selected name \'Sign Language - Switzerland\'}}>Sign Language - Switzerland</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Taiwanese" {{selected name \'Sign Language - Taiwanese\'}}>Sign Language - Taiwanese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Trinidad and Tob" {{selected name \'Sign Language - Trinidad and Tob\'}}>Sign Language - Trinidad and Tob</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Turkish" {{selected name \'Sign Language - Turkish\'}}>Sign Language - Turkish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Yugoslavian" {{selected name \'Sign Language - Yugoslavian\'}}>Sign Language - Yugoslavian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Silesian" {{selected name \'Silesian\'}}>Silesian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sindhi" {{selected name \'Sindhi\'}}>Sindhi</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sinhala" {{selected name \'Sinhala\'}}>Sinhala</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Slavic Languages" {{selected name \'Slavic Languages\'}}>Slavic Languages</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Slovak" {{selected name \'Slovak\'}}>Slovak</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Slovenian" {{selected name \'Slovenian\'}}>Slovenian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Slovio" {{selected name \'Slovio\'}}>Slovio</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Somali" {{selected name \'Somali\'}}>Somali</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Soranî" {{selected name \'Soranî\'}}>Soranî</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sotho" {{selected name \'Sotho\'}}>Sotho</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish" {{selected name \'Spanish\'}}>Spanish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Argentina)" {{selected name \'Spanish (Argentina)\'}}>Spanish (Argentina)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Bolivia)" {{selected name \'Spanish (Bolivia)\'}}>Spanish (Bolivia)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Chile)" {{selected name \'Spanish (Chile)\'}}>Spanish (Chile)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Colombia)" {{selected name \'Spanish (Colombia)\'}}>Spanish (Colombia)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Costa Rica)" {{selected name \'Spanish (Costa Rica)\'}}>Spanish (Costa Rica)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Dominican Republic)" {{selected name \'Spanish (Dominican Republic)\'}}>Spanish (Dominican Republic)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Ecuador)" {{selected name \'Spanish (Ecuador)\'}}>Spanish (Ecuador)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (El Salvador)" {{selected name \'Spanish (El Salvador)\'}}>Spanish (El Salvador)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Guatemala)" {{selected name \'Spanish (Guatemala)\'}}>Spanish (Guatemala)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Honduras)" {{selected name \'Spanish (Honduras)\'}}>Spanish (Honduras)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Mexico)" {{selected name \'Spanish (Mexico)\'}}>Spanish (Mexico)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Nicaragua)" {{selected name \'Spanish (Nicaragua)\'}}>Spanish (Nicaragua)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Panama)" {{selected name \'Spanish (Panama)\'}}>Spanish (Panama)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Paraguay)" {{selected name \'Spanish (Paraguay)\'}}>Spanish (Paraguay)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Peru)" {{selected name \'Spanish (Peru)\'}}>Spanish (Peru)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Puerto Rico)" {{selected name \'Spanish (Puerto Rico)\'}}>Spanish (Puerto Rico)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Spain)" {{selected name \'Spanish (Spain)\'}}>Spanish (Spain)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Uruguay)" {{selected name \'Spanish (Uruguay)\'}}>Spanish (Uruguay)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Venezuela)" {{selected name \'Spanish (Venezuela)\'}}>Spanish (Venezuela)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sranan Tongo" {{selected name \'Sranan Tongo\'}}>Sranan Tongo</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Sundanese" {{selected name \'Sundanese\'}}>Sundanese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Swahili" {{selected name \'Swahili\'}}>Swahili</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Swati" {{selected name \'Swati\'}}>Swati</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Swedish" {{selected name \'Swedish\'}}>Swedish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Swedish (Finland)" {{selected name \'Swedish (Finland)\'}}>Swedish (Finland)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Swedish (Sweden)" {{selected name \'Swedish (Sweden)\'}}>Swedish (Sweden)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Tagalog" {{selected name \'Tagalog\'}}>Tagalog</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Tahitian" {{selected name \'Tahitian\'}}>Tahitian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Taiwanese" {{selected name \'Taiwanese\'}}>Taiwanese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Tajik" {{selected name \'Tajik\'}}>Tajik</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Tamil" {{selected name \'Tamil\'}}>Tamil</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Tatar" {{selected name \'Tatar\'}}>Tatar</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Telugu" {{selected name \'Telugu\'}}>Telugu</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Tetum" {{selected name \'Tetum\'}}>Tetum</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Thai" {{selected name \'Thai\'}}>Thai</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Tibetan" {{selected name \'Tibetan\'}}>Tibetan</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Tigrinya" {{selected name \'Tigrinya\'}}>Tigrinya</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Tongan" {{selected name \'Tongan\'}}>Tongan</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Tsonga" {{selected name \'Tsonga\'}}>Tsonga</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Tswana" {{selected name \'Tswana\'}}>Tswana</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Turkish" {{selected name \'Turkish\'}}>Turkish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Turkmen" {{selected name \'Turkmen\'}}>Turkmen</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Twi" {{selected name \'Twi\'}}>Twi</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Udmurt" {{selected name \'Udmurt\'}}>Udmurt</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Ukrainian" {{selected name \'Ukrainian\'}}>Ukrainian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Ulster Scots" {{selected name \'Ulster Scots\'}}>Ulster Scots</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Upper Sorbian" {{selected name \'Upper Sorbian\'}}>Upper Sorbian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Urdu" {{selected name \'Urdu\'}}>Urdu</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Uyghur" {{selected name \'Uyghur\'}}>Uyghur</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Uzbek" {{selected name \'Uzbek\'}}>Uzbek</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Venetian" {{selected name \'Venetian\'}}>Venetian</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Vietnamese" {{selected name \'Vietnamese\'}}>Vietnamese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Volapük" {{selected name \'Volapük\'}}>Volapük</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Waray Waray" {{selected name \'Waray Waray\'}}>Waray Waray</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Wayuu" {{selected name \'Wayuu\'}}>Wayuu</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Welsh" {{selected name \'Welsh\'}}>Welsh</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Wolof" {{selected name \'Wolof\'}}>Wolof</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Wu" {{selected name \'Wu\'}}>Wu</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Xhosa" {{selected name \'Xhosa\'}}>Xhosa</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Yapese" {{selected name \'Yapese\'}}>Yapese</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Yiddish" {{selected name \'Yiddish\'}}>Yiddish</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Yoruba" {{selected name \'Yoruba\'}}>Yoruba</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Yucatec Maya" {{selected name \'Yucatec Maya\'}}>Yucatec Maya</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Yue (Cantonese)" {{selected name \'Yue (Cantonese)\'}}>Yue (Cantonese)</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Yupik" {{selected name \'Yupik\'}}>Yupik</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="Zulu" {{selected name \'Zulu\'}}>Zulu</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t<select name="levels" id="level-field-{{@index}}" class="size-large">\n\t\t\t\t\t\t\t\t\t\t\t<option value="" selected="selected">Select Level</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="expert" {{selected level \'expert\'}}>Expert</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="intermediate" {{selected level \'intermediate\'}}>Intermediate</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value="beginner" {{selected level \'beginner\'}}>Beginner</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{{/each}}\n\t \t\t\t\t\t\t\t\t<div id="language-tpl">\n\t\t\t\t\t\t\t\t\t<select name="languages" class="size-large">\n\t\t\t\t\t\t\t\t\t\t<option value="" selected="selected">Select Language</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Abkhazian" >Abkhazian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Acholi" >Acholi</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Afar" >Afar</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Afrikaans" >Afrikaans</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Ainu" >Ainu</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Albanian" >Albanian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Algonquin" >Algonquin</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Alsatian" >Alsatian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Amharic" >Amharic</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Ancient Greek" >Ancient Greek</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Arabic" >Arabic</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Arabic (Baharna)" >Arabic (Baharna)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Arabic (Egypt)" >Arabic (Egypt)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Arabic (Gulf)" >Arabic (Gulf)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Arabic (Levantine / Shami)" >Arabic (Levantine / Shami)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Arabic (Morocco)" >Arabic (Morocco)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Arabic (Tunisia)" >Arabic (Tunisia)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Aragonese" >Aragonese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Aramaic" >Aramaic</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Armenian" >Armenian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Arpitan" >Arpitan</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Assamese" >Assamese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Asturian" >Asturian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Aymara" >Aymara</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Azerbaijani" >Azerbaijani</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Bambara" >Bambara</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Bashkir" >Bashkir</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Basque" >Basque</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Belarusian" >Belarusian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Bengali" >Bengali</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Berber" >Berber</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Bihari" >Bihari</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Bislama" >Bislama</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Bosnian" >Bosnian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Breton" >Breton</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Bulgarian" >Bulgarian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Bunun" >Bunun</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Burmese" >Burmese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Calabrian" >Calabrian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Catalan" >Catalan</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Chichewa" >Chichewa</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Chilean Sign Language" >Chilean Sign Language</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Chinese (Mandarin)" >Chinese (Mandarin)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Chinese (Simplified)" >Chinese (Simplified)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Chinese (Traditional)" >Chinese (Traditional)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Chinuk Wawa" >Chinuk Wawa</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Chuukese" >Chuukese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Chuvash" >Chuvash</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Cornish" >Cornish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Corsican" >Corsican</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Cree" >Cree</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Creole" >Creole</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Creole (Guyana)" >Creole (Guyana)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Creole (Haiti)" >Creole (Haiti)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Creole (Jamaica)" >Creole (Jamaica)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Creole (Louisiana)" >Creole (Louisiana)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Croatian" >Croatian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Czech" >Czech</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Danish" >Danish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Dari" >Dari</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Dhivehi" >Dhivehi</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Dutch" >Dutch</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Dutch (Belgium)" >Dutch (Belgium)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Dutch (Netherlands)" >Dutch (Netherlands)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Dzongkha" >Dzongkha</option>\n\t\t\t\t\t\t\t\t\t\t<option value="English" >English</option>\n\t\t\t\t\t\t\t\t\t\t<option value="English (Australia)" >English (Australia)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="English (Belize)" >English (Belize)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="English (Canada)" >English (Canada)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="English (Caribbean)" >English (Caribbean)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="English (Guyana)" >English (Guyana)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="English (Ireland)" >English (Ireland)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="English (Jamaica)" >English (Jamaica)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="English (New Zealand)" >English (New Zealand)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="English (Philippines)" >English (Philippines)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="English (South Africa)" >English (South Africa)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="English (Trinidad)" >English (Trinidad)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="English (United Kingdom)" >English (United Kingdom)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="English (United States)" >English (United States)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="English (Zimbabwe)" >English (Zimbabwe)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Erzya" >Erzya</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Esperanto" >Esperanto</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Estonian" >Estonian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Fang" >Fang</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Faroese" >Faroese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Fijian" >Fijian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Finnish" >Finnish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="French" >French</option>\n\t\t\t\t\t\t\t\t\t\t<option value="French (Acadian)" >French (Acadian)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="French (Belgium)" >French (Belgium)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="French (Cajun)" >French (Cajun)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="French (Canada)" >French (Canada)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="French (France)" >French (France)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="French (Luxembourg)" >French (Luxembourg)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="French (Monaco)" >French (Monaco)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="French (Quebec)" >French (Quebec)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="French (Switzerland)" >French (Switzerland)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Frisian" >Frisian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Fulah" >Fulah</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Gaelic" >Gaelic</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Galician" >Galician</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Ganda" >Ganda</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Georgian" >Georgian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="German" >German</option>\n\t\t\t\t\t\t\t\t\t\t<option value="German (Austria)" >German (Austria)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="German (Germany)" >German (Germany)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="German (Liechtenstein)" >German (Liechtenstein)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="German (Luxembourg)" >German (Luxembourg)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="German (Switzerland)" >German (Switzerland)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Greek" >Greek</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Greenlandic" >Greenlandic</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Guahibo" >Guahibo</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Guarani" >Guarani</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Gujarati" >Gujarati</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Hakka" >Hakka</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Hausa" >Hausa</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Hawaiian" >Hawaiian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Hebrew" >Hebrew</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Hiligaynon" >Hiligaynon</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Hindi" >Hindi</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Hindko" >Hindko</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Hmong" >Hmong</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Hungarian" >Hungarian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Icelandic" >Icelandic</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Igbo" >Igbo</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Indonesian" >Indonesian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Ingush" >Ingush</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Interlingua" >Interlingua</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Interlingue" >Interlingue</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Inuktitut" >Inuktitut</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Inupiaq" >Inupiaq</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Irish" >Irish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Irish Gaelic" >Irish Gaelic</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Italian" >Italian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Italian (Italy)" >Italian (Italy)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Italian (Switzerland)" >Italian (Switzerland)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Japanese" >Japanese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Javanese" >Javanese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Kannada" >Kannada</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Kaqchikel" >Kaqchikel</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Karelian" >Karelian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Kashmiri" >Kashmiri</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Kashubian" >Kashubian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Kazakh" >Kazakh</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Khmer" >Khmer</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Kichwa" >Kichwa</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Kinyarwanda" >Kinyarwanda</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Klingon" >Klingon</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Komi" >Komi</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Konkani" >Konkani</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Korean" >Korean</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Kosraean" >Kosraean</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Kurdish" >Kurdish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Kurmanji" >Kurmanji</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Kyrgyz" >Kyrgyz</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Láadan" >Láadan</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Ladakhi" >Ladakhi</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Ladin" >Ladin</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Lao" >Lao</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Latin" >Latin</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Latvian" >Latvian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Ligurian" >Ligurian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Limburgish" >Limburgish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Lingala" >Lingala</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Lithuanian" >Lithuanian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Lojban" >Lojban</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Lombard" >Lombard</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Lower Sorbian" >Lower Sorbian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Low German" >Low German</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Luganda" >Luganda</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Luxembourgish" >Luxembourgish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Macedonian" >Macedonian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Maithili" >Maithili</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Malagasy" >Malagasy</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Malay" >Malay</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Malayalam" >Malayalam</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Maltese" >Maltese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Manchu" >Manchu</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Manx" >Manx</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Maori" >Maori</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Mapudungun" >Mapudungun</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Marathi" >Marathi</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Mari" >Mari</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Marshallese" >Marshallese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Min Nan" >Min Nan</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Moksha" >Moksha</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Moldovan" >Moldovan</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Mongolian" >Mongolian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Montenegrin" >Montenegrin</option>\n\t\t\t\t\t\t\t\t\t\t<option value="More" >More</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Mortlockese" >Mortlockese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Nahuatl" >Nahuatl</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Nauruan" >Nauruan</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Navajo" >Navajo</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Neapolitan" >Neapolitan</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Nepal Bhasa" >Nepal Bhasa</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Nepali" >Nepali</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Norwegian" >Norwegian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Norwegian (Bokmål)" >Norwegian (Bokmål)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Norwegian (Nynorsk)" >Norwegian (Nynorsk)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Occitan" >Occitan</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Ojibwe" >Ojibwe</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Okinawan" >Okinawan</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Oriya" >Oriya</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Oromo" >Oromo</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Ossetian" >Ossetian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Palauan" >Palauan</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Papiamento" >Papiamento</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Pashto" >Pashto</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Pemon" >Pemon</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Persian" >Persian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Pidgin" >Pidgin</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Piedmontese" >Piedmontese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Pohnpeian" >Pohnpeian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Polish" >Polish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Portuguese" >Portuguese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Portuguese (Brazil)" >Portuguese (Brazil)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Portuguese (Portugal)" >Portuguese (Portugal)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Punjabi" >Punjabi</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Quechua" >Quechua</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Quenya" >Quenya</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Quiche" >Quiche</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Rapa Nui" >Rapa Nui</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Romani" >Romani</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Romanian" >Romanian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Romanian (Moldova)" >Romanian (Moldova)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Romanian (Romania)" >Romanian (Romania)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Romansh" >Romansh</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Rundi" >Rundi</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Russian" >Russian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Russian (Moldova)" >Russian (Moldova)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Russian (Russia)" >Russian (Russia)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sakha" >Sakha</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sami" >Sami</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Samoan" >Samoan</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sango" >Sango</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sanskrit" >Sanskrit</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Saramaccan" >Saramaccan</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sardinian" >Sardinian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Scots" >Scots</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Scottish Gaelic" >Scottish Gaelic</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Serbian (Cyrillic)" >Serbian (Cyrillic)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Serbian (Latin)" >Serbian (Latin)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Serbo-Croatian" >Serbo-Croatian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Shona" >Shona</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sibe" >Sibe</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sicilian" >Sicilian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - American" >Sign Language - American</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Austrian" >Sign Language - Austrian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Brazilian" >Sign Language - Brazilian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - British" >Sign Language - British</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - BSL, AUSLAN, NZS" >Sign Language - BSL, AUSLAN, NZS</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Catalan" >Sign Language - Catalan</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Chinese" >Sign Language - Chinese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Danish" >Sign Language - Danish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Dutch (NGT)" >Sign Language - Dutch (NGT)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Finnish" >Sign Language - Finnish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Flemish" >Sign Language - Flemish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - French" >Sign Language - French</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - German" >Sign Language - German</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Greek" >Sign Language - Greek</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Honduran" >Sign Language - Honduran</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Honduras" >Sign Language - Honduras</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Hungarian" >Sign Language - Hungarian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Indian" >Sign Language - Indian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - International" >Sign Language - International</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Irish" >Sign Language - Irish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Israeli" >Sign Language - Israeli</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Italian" >Sign Language - Italian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Japanese" >Sign Language - Japanese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Kenyan" >Sign Language - Kenyan</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Korean" >Sign Language - Korean</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Mexican" >Sign Language - Mexican</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - New Zealand" >Sign Language - New Zealand</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Nicaragua" >Sign Language - Nicaragua</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Norwegian" >Sign Language - Norwegian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Poland" >Sign Language - Poland</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Quebec" >Sign Language - Quebec</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Russian" >Sign Language - Russian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Spanish" >Sign Language - Spanish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Swedish" >Sign Language - Swedish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Switzerland" >Sign Language - Switzerland</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Taiwanese" >Sign Language - Taiwanese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Trinidad and Tob" >Sign Language - Trinidad and Tob</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Turkish" >Sign Language - Turkish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sign Language - Yugoslavian" >Sign Language - Yugoslavian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Silesian" >Silesian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sindhi" >Sindhi</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sinhala" >Sinhala</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Slavic Languages" >Slavic Languages</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Slovak" >Slovak</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Slovenian" >Slovenian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Slovio" >Slovio</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Somali" >Somali</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Soranî" >Soranî</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sotho" >Sotho</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish" >Spanish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Argentina)" >Spanish (Argentina)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Bolivia)" >Spanish (Bolivia)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Chile)" >Spanish (Chile)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Colombia)" >Spanish (Colombia)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Costa Rica)" >Spanish (Costa Rica)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Dominican Republic)" >Spanish (Dominican Republic)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Ecuador)" >Spanish (Ecuador)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (El Salvador)" >Spanish (El Salvador)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Guatemala)" >Spanish (Guatemala)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Honduras)" >Spanish (Honduras)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Mexico)" >Spanish (Mexico)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Nicaragua)" >Spanish (Nicaragua)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Panama)" >Spanish (Panama)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Paraguay)" >Spanish (Paraguay)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Peru)" >Spanish (Peru)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Puerto Rico)" >Spanish (Puerto Rico)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Spain)" >Spanish (Spain)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Uruguay)" >Spanish (Uruguay)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Spanish (Venezuela)" >Spanish (Venezuela)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sranan Tongo" >Sranan Tongo</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Sundanese" >Sundanese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Swahili" >Swahili</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Swati" >Swati</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Swedish" >Swedish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Swedish (Finland)" >Swedish (Finland)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Swedish (Sweden)" >Swedish (Sweden)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Tagalog" >Tagalog</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Tahitian" >Tahitian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Taiwanese" >Taiwanese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Tajik" >Tajik</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Tamil" >Tamil</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Tatar" >Tatar</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Telugu" >Telugu</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Tetum" >Tetum</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Thai" >Thai</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Tibetan" >Tibetan</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Tigrinya" >Tigrinya</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Tongan" >Tongan</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Tsonga" >Tsonga</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Tswana" >Tswana</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Turkish" >Turkish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Turkmen" >Turkmen</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Twi" >Twi</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Udmurt" >Udmurt</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Ukrainian" >Ukrainian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Ulster Scots" >Ulster Scots</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Upper Sorbian" >Upper Sorbian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Urdu" >Urdu</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Uyghur" >Uyghur</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Uzbek" >Uzbek</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Venetian" >Venetian</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Vietnamese" >Vietnamese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Volapük" >Volapük</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Waray Waray" >Waray Waray</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Wayuu" >Wayuu</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Welsh" >Welsh</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Wolof" >Wolof</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Wu" >Wu</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Xhosa" >Xhosa</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Yapese" >Yapese</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Yiddish" >Yiddish</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Yoruba" >Yoruba</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Yucatec Maya" >Yucatec Maya</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Yue (Cantonese)" >Yue (Cantonese)</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Yupik" >Yupik</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Zulu" >Zulu</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t<select name="levels" class="size-large">\n\t\t\t\t\t\t\t\t\t\t<option value="" selected="selected">Select Level</option>\n\t\t\t\t\t\t\t\t\t\t<option value="expert">Expert</option>\n\t\t\t\t\t\t\t\t\t\t<option value="intermediate">Intermediate</option>\n\t\t\t\t\t\t\t\t\t\t<option value="beginner">Beginner</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div><!-- EOF control-group -->\n\t\t\t\t</div><!-- EOF basic-info -->\n\t\t\t\t<div class="basic-info-footer">\n\t\t\t\t\t<button form="basic-info-form" id="save-profile-btn" type="submit" class="button2 yellow" data-loading-text="Saving...">Save</button>\n\t\t\t\t\t<button class="button2 cancel-edition-btn" data-rel="basic-box">Cancel</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t<form id="file-form" style="display: none" method="post" action="" enctype="multipart/form-data">\n\t\t\t<input id="upload" type="file" name="files[]" />\n\t\t</form>\n\n\t\t<div class="modal" id="crop-modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display:none">\n\t\t\t<div class="modal-header">\n\t\t\t\t<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>\n\t\t\t\t<h3 id="myModalLabel">Crop image</h3>\n\t\t\t</div>\n\t\t\t<div class="modal-body" style="max-height: 500px">\n\t\t\t\t<p>Crop the image you uploaded for your avatar</p>\n\n\t\t\t\t<center>\n\t\t\t\t\t<img id="cropbox" src="" alt="">\n\t\t\t\t\t<div class="progress progress-striped" style="margin-top:10px;display:none;">\n\t\t\t\t\t\t<div class="bar" style="width: 0%;"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</center>\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<button id="cancel-crop" class="btn" data-dismiss="modal" aria-hidden="true">Dismiss</button>\n\t\t\t\t<button type="submit" id="submit-avatar" class="btn btn-primary" data-loading-text="Processing...">Crop it</button>\n\t\t\t</div>\n\t\t</div>\n');});
define('tmpl!templates/app/profile/form.about.html',[ 'core/view' ], function(view) {return view('<div class="box-standard">\n\t<form id="about-me-form" data-rel="about-box">\n\t\t<div class="box-header">\n\t\t\t<i class="icon-about">About icon</i>\n\t\t\t<h2>About me</h2>\n\t\t</div>\n\t\t<div class="box-content">\n\t\t\t<div class="control-group">\n\t\t\t\t<label class="control-label" for="inputAllAboutYou">All about you</label>\n\t\t\t\t<div class="controls">\n\t\t\t\t\t<textarea name="allAboutYou" rows="5" class="span6" placeholder="A description about you, can be anything" maxlength="500">{{allAboutYou}}</textarea>\n\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="control-group">\n\t\t\t\t<label class="control-label" for="inputMainMission">Current mission</label>\n\t\t\t\t<div class="controls">\n\t\t\t\t\t<textarea name="mainMission" rows="5" class="span6" placeholder="What is your current mission objective. Be creative, imaginative, wacky if you need to be" maxlength="100">{{mainMission}}</textarea>\n\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="control-group">\n\t\t\t\t<label class="control-label" for="inputOccupation">Occupation</label>\n\t\t\t\t<div class="controls">\n\t\t\t\t\t<input name="occupation" type="text" value="{{occupation}}" maxlength="100" placeholder="Current occupation" id="inputOccupation" size="20">\n\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="control-group">\n\t\t\t\t<label class="control-label" for="inputCompany">Company</label>\n\t\t\t\t<div class="controls">\n\t\t\t\t\t<input name="company" type="text" value="{{company}}" maxlength="100" placeholder="Where have you worked?" id="id_form-0-company" size="20">\n\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="control-group">\n\t\t\t\t<label class="control-label category-another" for="inputEducation">Education</label>\n\t\t\t\t<div class="controls">\n\t\t\t\t\t<div id="education-list">\n\t\t\t\t\t\t{{#each education}}\n\t\t\t\t\t\t<div id="education-{{@index}}">\n\t\t\t\t\t\t\t<input type="text" name="education" value="{{institution}}" id="institution-field-{{@index}}" class="span4 autocompleteStudy" data-provide="typeahead" autocomplete="off"maxlength="100">\n\t\t\t\t\t\t\t<input type="text" name="degree" value="{{degree}}" id="degree-field-{{@index}}" class="span2" maxlength="100">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{{/each}}\n\t\t\t\t\t\t<div id="education-tpl">\n\t\t\t\t\t\t\t<input type="text"  name="education" class="span4 autocompleteStudy" data-provide="typeahead" autocomplete="off" maxlength="100">\n\t\t\t\t\t\t\t<input type="text" name="degree" class="span2" maxlength="100">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="control-group">\n\t\t\t\t<label class="control-label" for="inputPersonalPhilosophy">Personal philosophy</label>\n\t\t\t\t<div class="controls">\n\t\t\t\t\t<textarea name="personalPhilosophy" rows="8" class="span6" placeholder="What is your personal phylosophy? Why live your life? Feelings? Thoughts?" maxlength="1000">{{personalPhilosophy}}</textarea>\n\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="control-group">\n\t\t\t\t<label class="control-label" for="inputPoliticalOpinion">Political views</label>\n\t\t\t\t<div class="controls">\n\t\t\t\t\t<input name="politicalOpinion" type="text" value="{{politicalOpinion}}" maxlength="500" placeholder="What are your politics?" id="id_f2-0-political_opinion" size="500">\n\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id="religion-input" class="control-group">\n\t\t\t\t<label class="control-label" for="inputReligion">Religion</label>\n\t\t\t\t<div class="controls">\n\t\t\t\t\t<input name="religion" type="text" value="{{religion}}" maxlength="500" placeholder="What are your religious beliefs" id="id_f2-0-religion" size="20">\n\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div><!-- EOF box-content -->\n\t\t<div class="box-footer accordion-heading">\n\t\t\t<div class="button-group">\n\t\t\t\t<button class="button cancel-edition-btn" data-rel="about-box">Cancel</button>\n\t\t\t\t<button id="save-profile-btn" type="submit" class="button-highlight" data-loading-text="Saving...">Save</button>\n\t\t\t</div>\n\t\t</div><!-- EOF box-footer -->\n\t</form>\n</div><!-- EOF box-standard -->');});
define('tmpl!templates/app/profile/form.likes.html',[ 'core/view' ], function(view) {return view('\t\t\t\t\t<div class="box-standard">\n\t\t\t\t\t\t<form id="likes-form" data-rel="likes-box">\n\t\t\t\t\t\t\t<div class="box-header">\n\t\t\t\t\t\t\t\t<i class="icon-like">About icon</i>\n\t\t\t\t\t\t\t\t<h2>Likes</h2>\n\t\t\t\t\t\t\t</div><!-- EOF box-header -->\n\t\t\t\t\t\t\t<div class="box-content">\n\t\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t\t<label class="control-label" for="id_enjoy_people">People I enjoy</label>\n\t\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t\t<input name="enjoyPeople" id="id_enjoy_people" placeholder="What kind of people you like to know and learn from them" type="text" size="500" value="{{ enjoyPeople }}" maxlength="500">\n\t\t\t\t\t\t\t\t\t\t<span class="help-inline"></span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t\t<label class="control-label" for="id_movies">Movies, series, books, games...</label>\n\t\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t\t<input name="movies" value="{{movies}}" id="id_movies" type="text" size="550" maxlength="500">\n\t\t\t\t\t\t\t\t\t\t<span class="help-inline"></span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t\t<label class="control-label" for="id_sports">Sports</label>\n\t\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t\t<input name="sports" value="{{sports}}" id="id_sports" type="text" size="500" maxlength="500">\n\t\t\t\t\t\t\t\t\t\t<span class="help-inline"></span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t\t<label class="control-label" for="id_other_pages">Other webpages</label>\n\t\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t\t<input name="otherPages" value="{{otherPages}}" id="id_other_pages" placeholder="Other webpages and applications you like" type="text" size="500" maxlength="500">\n\t\t\t\t\t\t\t\t\t\t<span class="help-inline"></span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t\t<label class="control-label" for="id_sharing">Show, learn, share...</label>\n\t\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t\t<input name="sharing" value="{{sharing}}" id="id_sharing" placeholder="What do you like to teach, learn or share?" type="text" size="1000" maxlength="1000">\n\t\t\t\t\t\t\t\t\t\t<span class="help-inline"></span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t\t<label class="control-label" for="id_incredible">Amazing things done/seen</label>\n\t\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t\t<input name="incredible" value="{{incredible}}" id="id_incredible" placeholder="Any amazing thing you\'ve seen or done in your life" type="text"  maxlength="1000" size="1000">\n\t\t\t\t\t\t\t\t\t\t<span class="help-inline"></span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t\t<label class="control-label" for="id_inspired_by">People who inspires you</label>\n\t\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t\t<input name="inspiredBy" value="{{inspiredBy}}" id="id_inspired_by" type="text" size="500" maxlength="500">\n\t\t\t\t\t\t\t\t\t\t<span class="help-inline"></span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t\t<label class="control-label" for="id_quotes">Favorite quotations</label>\n\t\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t\t<textarea name="quotes" rows="4" id="id_quotes" size="500" cols="40" style="width:90%" maxlength="500">{{quotes}}</textarea>\n\t\t\t\t\t\t\t\t\t\t<span class="help-inline"></span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t\t<label class="control-label" for="id_pw_opinion">Your opinion please</label>\n\t\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t\t<input name="pwOpinion" value="{{pwOpinion}}" id="id_pw_opinion" placeholder="Your opinion about PEOPLEWINGS" type="text" size="500" maxlength="500">\n\t\t\t\t\t\t\t\t\t\t<span class="help-inline"></span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div><!-- EOF box-content -->\n\t\t\t\t\t\t\t<div class="box-footer accordion-heading">\n\t\t\t\t\t\t\t\t<div class="button-group">\n\t\t\t\t\t\t\t\t\t<button class="button cancel-edition-btn" data-rel="likes-box">Cancel</button>\n\t\t\t\t\t\t\t\t\t<button id="save-profile-btn" type="submit" class="button-highlight" data-loading-text="Saving...">Save</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div><!-- EOF box-footer -->\n\t\t\t\t\t\t</form>\n\t\t\t\t</div><!-- EOF box-standard -->');});
define('tmpl!templates/app/profile/form.contact.html',[ 'core/view' ], function(view) {return view('<div class="box-standard">\n\t<form id="contact-form" data-rel="contact-box">\n\t\t<div class="box-header">\n\t\t\t<i class="icon-about">Contact icon</i>\n\t\t\t<h2>Contact info</h2>\n\t\t</div>\n\t\t<div class="guest-message">\n\t\t\t<h2 class="lock-icon">Shown only to Confirmed Guests</h2>\n\t\t\t<p>To protect your privacy, we hide your address, phone number, and contact information from users that have not confirmed a reservation with you</p>\n\t\t</div><!-- EOF guest-message -->\n\t\t<div class="box-content contact-info">\n\t\t\t<div class="control-group">\n\t\t\t\t<label class="control-label" for="textarea"><label for="id_form-0-emails">Email</label></label>\n\t\t\t\t<div class="controls">\n\t\t\t\t\t<input name="emails" id="id_form-0-emails" type="text" value="{{emails}}" maxlength="100">\n\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t<span class="help-inline"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="control-group">\n\t\t\t\t<label class="control-label" for="textarea"><label for="id_form-0-phone">Phone</label></label>\n\t\t\t\t<div class="controls">\n\t\t\t\t\t<input name="phone" id="id_form-0-phone" type="text" value="{{phone}}" maxlength="100">\n\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="control-group">\n\t\t\t\t<label class="control-label" for="textarea"><label for="socialNetwork">Social Network</label></label>\n\t\t\t\t<div class="controls">\n\t\t\t\t\t<div id="socialNetwork-list">\n\t\t\t\t\t\t{{#each socialNetworks}}\n\t\t\t\t\t\t<div id="social-{{@index}}">\n\t\t\t\t\t\t\t<select name="socialNetworks" id="socialNetwork-{{@index}}" class="size-13">\n\t\t\t\t\t\t\t\t<option value="" selected="selected">Select Network</option>\n\t\t\t\t\t\t\t\t<option value="Facebook" {{selected socialNetwork \'Facebook\'}}>Facebook</option>\n\t\t\t\t\t\t\t\t<option value="Twitter" {{selected socialNetwork \'Twitter\'}}>Twitter</option>\n\t\t\t\t\t\t\t\t<option value="LinkedIn" {{selected socialNetwork \'LinkedIn\'}}>LinkedIn</option>\n\t\t\t\t\t\t\t\t<option value="Google+" {{selected socialNetwork \'Google+\'}}>Google+</option>\n\t\t\t\t\t\t\t\t<option value="--------------" {{selected socialNetwork \'--------------\'}}>--------------</option>\n\t\t\t\t\t\t\t\t<option value="43 Things" {{selected socialNetwork \'43 Things\'}}>43 Things</option>\n\t\t\t\t\t\t\t\t<option value="Academia.edu" {{selected socialNetwork \'Academia.edu\'}}>Academia.edu</option>\n\t\t\t\t\t\t\t\t<option value="Advogato" {{selected socialNetwork \'Advogato\'}}>Advogato</option>\n\t\t\t\t\t\t\t\t<option value="aNobii" {{selected socialNetwork \'aNobii\'}}>aNobii</option>\n\t\t\t\t\t\t\t\t<option value="AsianAvenue" {{selected socialNetwork \'AsianAvenue\'}}>AsianAvenue</option>\n\t\t\t\t\t\t\t\t<option value="aSmallWorld" {{selected socialNetwork \'aSmallWorld\'}}>aSmallWorld</option>\n\t\t\t\t\t\t\t\t<option value="Athlinks" {{selected socialNetwork \'Athlinks\'}}>Athlinks</option>\n\t\t\t\t\t\t\t\t<option value="Audimated.com" {{selected socialNetwork \'Audimated.com\'}}>Audimated.com</option>\n\t\t\t\t\t\t\t\t<option value="Bebo" {{selected socialNetwork \'Bebo\'}}>Bebo</option>\n\t\t\t\t\t\t\t\t<option value="BIGADDA" {{selected socialNetwork \'BIGADDA\'}}>BIGADDA</option>\n\t\t\t\t\t\t\t\t<option value="Biip.no" {{selected socialNetwork \'Biip.no\'}}>Biip.no</option>\n\t\t\t\t\t\t\t\t<option value="BlackPlanet" {{selected socialNetwork \'BlackPlanet\'}}>BlackPlanet</option>\n\t\t\t\t\t\t\t\t<option value="Blauk" {{selected socialNetwork \'Blauk\'}}>Blauk</option>\n\t\t\t\t\t\t\t\t<option value="Blogster" {{selected socialNetwork \'Blogster\'}}>Blogster</option>\n\t\t\t\t\t\t\t\t<option value="Bolt.com" {{selected socialNetwork \'Bolt.com\'}}>Bolt.com</option>\n\t\t\t\t\t\t\t\t<option value="Busuu" {{selected socialNetwork \'Busuu\'}}>Busuu</option>\n\t\t\t\t\t\t\t\t<option value="Buzznet" {{selected socialNetwork \'Buzznet\'}}>Buzznet</option>\n\t\t\t\t\t\t\t\t<option value="CafeMom" {{selected socialNetwork \'CafeMom\'}}>CafeMom</option>\n\t\t\t\t\t\t\t\t<option value="Care2" {{selected socialNetwork \'Care2\'}}>Care2</option>\n\t\t\t\t\t\t\t\t<option value="CaringBridge" {{selected socialNetwork \'CaringBridge\'}}>CaringBridge</option>\n\t\t\t\t\t\t\t\t<option value="Classmates.com" {{selected socialNetwork \'Classmates.com\'}}>Classmates.com</option>\n\t\t\t\t\t\t\t\t<option value="Cloob" {{selected socialNetwork \'Cloob\'}}>Cloob</option>\n\t\t\t\t\t\t\t\t<option value="CouchSurfing" {{selected socialNetwork \'CouchSurfing\'}}>CouchSurfing</option>\n\t\t\t\t\t\t\t\t<option value="CozyCot" {{selected socialNetwork \'CozyCot\'}}>CozyCot</option>\n\t\t\t\t\t\t\t\t<option value="Cross.tv" {{selected socialNetwork \'Cross.tv\'}}>Cross.tv</option>\n\t\t\t\t\t\t\t\t<option value="Crunchyroll" {{selected socialNetwork \'Crunchyroll\'}}>Crunchyroll</option>\n\t\t\t\t\t\t\t\t<option value="Cyworld" {{selected socialNetwork \'Cyworld\'}}>Cyworld</option>\n\t\t\t\t\t\t\t\t<option value="DailyBooth" {{selected socialNetwork \'DailyBooth\'}}>DailyBooth</option>\n\t\t\t\t\t\t\t\t<option value="DailyStrength" {{selected socialNetwork \'DailyStrength\'}}>DailyStrength</option>\n\t\t\t\t\t\t\t\t<option value="delicious" {{selected socialNetwork \'delicious\'}}>delicious</option>\n\t\t\t\t\t\t\t\t<option value="deviantART" {{selected socialNetwork \'deviantART\'}}>deviantART</option>\n\t\t\t\t\t\t\t\t<option value="Diaspora*" {{selected socialNetwork \'Diaspora*\'}}>Diaspora*</option>\n\t\t\t\t\t\t\t\t<option value="Disaboom" {{selected socialNetwork \'Disaboom\'}}>Disaboom</option>\n\t\t\t\t\t\t\t\t<option value="Dol2day" {{selected socialNetwork \'Dol2day\'}}>Dol2day</option>\n\t\t\t\t\t\t\t\t<option value="DontStayIn" {{selected socialNetwork \'DontStayIn\'}}>DontStayIn</option>\n\t\t\t\t\t\t\t\t<option value="Draugiem.lv" {{selected socialNetwork \'Draugiem.lv\'}}>Draugiem.lv</option>\n\t\t\t\t\t\t\t\t<option value="douban" {{selected socialNetwork \'douban\'}}>douban</option>\n\t\t\t\t\t\t\t\t<option value="DXY.cn" {{selected socialNetwork \'DXY.cn\'}}>DXY.cn</option>\n\t\t\t\t\t\t\t\t<option value="Elftown" {{selected socialNetwork \'Elftown\'}}>Elftown</option>\n\t\t\t\t\t\t\t\t<option value="Elixio" {{selected socialNetwork \'Elixio\'}}>Elixio</option>\n\t\t\t\t\t\t\t\t<option value="English, baby!" {{selected socialNetwork \'English, baby!\'}}>English, baby!</option>\n\t\t\t\t\t\t\t\t<option value="Epernicus" {{selected socialNetwork \'Epernicus\'}}>Epernicus</option>\n\t\t\t\t\t\t\t\t<option value="Eons.com" {{selected socialNetwork \'Eons.com\'}}>Eons.com</option>\n\t\t\t\t\t\t\t\t<option value="eToro" {{selected socialNetwork \'eToro\'}}>eToro</option>\n\t\t\t\t\t\t\t\t<option value="Experience Project" {{selected socialNetwork \'Experience Project\'}}>Experience Project</option>\n\t\t\t\t\t\t\t\t<option value="Exploroo" {{selected socialNetwork \'Exploroo\'}}>Exploroo</option>\n\t\t\t\t\t\t\t\t<option value="Faceparty" {{selected socialNetwork \'Faceparty\'}}>Faceparty</option>\n\t\t\t\t\t\t\t\t<option value="Faces.com" {{selected socialNetwork \'Faces.com\'}}>Faces.com</option>\n\t\t\t\t\t\t\t\t<option value="Fetlife" {{selected socialNetwork \'Fetlife\'}}>Fetlife</option>\n\t\t\t\t\t\t\t\t<option value="FilmAffinity" {{selected socialNetwork \'FilmAffinity\'}}>FilmAffinity</option>\n\t\t\t\t\t\t\t\t<option value="Filmow" {{selected socialNetwork \'Filmow\'}}>Filmow</option>\n\t\t\t\t\t\t\t\t<option value="FledgeWing" {{selected socialNetwork \'FledgeWing\'}}>FledgeWing</option>\n\t\t\t\t\t\t\t\t<option value="Flixster" {{selected socialNetwork \'Flixster\'}}>Flixster</option>\n\t\t\t\t\t\t\t\t<option value="Flickr" {{selected socialNetwork \'Flickr\'}}>Flickr</option>\n\t\t\t\t\t\t\t\t<option value="Focus.com" {{selected socialNetwork \'Focus.com\'}}>Focus.com</option>\n\t\t\t\t\t\t\t\t<option value="Fotki" {{selected socialNetwork \'Fotki\'}}>Fotki</option>\n\t\t\t\t\t\t\t\t<option value="Fotolog" {{selected socialNetwork \'Fotolog\'}}>Fotolog</option>\n\t\t\t\t\t\t\t\t<option value="Foursquare" {{selected socialNetwork \'Foursquare\'}}>Foursquare</option>\n\t\t\t\t\t\t\t\t<option value="Friendica" {{selected socialNetwork \'Friendica\'}}>Friendica</option>\n\t\t\t\t\t\t\t\t<option value="Friends Reunited" {{selected socialNetwork \'Friends Reunited\'}}>Friends Reunited</option>\n\t\t\t\t\t\t\t\t<option value="Friendster" {{selected socialNetwork \'Friendster\'}}>Friendster</option>\n\t\t\t\t\t\t\t\t<option value="Frühstückstreff" {{selected socialNetwork \'Frühstückstreff\'}}>Frühstückstreff</option>\n\t\t\t\t\t\t\t\t<option value="Fubar" {{selected socialNetwork \'Fubar\'}}>Fubar</option>\n\t\t\t\t\t\t\t\t<option value="Fuelmyblog" {{selected socialNetwork \'Fuelmyblog\'}}>Fuelmyblog</option>\n\t\t\t\t\t\t\t\t<option value="FullCircle" {{selected socialNetwork \'FullCircle\'}}>FullCircle</option>\n\t\t\t\t\t\t\t\t<option value="Gaia Online" {{selected socialNetwork \'Gaia Online\'}}>Gaia Online</option>\n\t\t\t\t\t\t\t\t<option value="GamerDNA" {{selected socialNetwork \'GamerDNA\'}}>GamerDNA</option>\n\t\t\t\t\t\t\t\t<option value="Gapyear.com" {{selected socialNetwork \'Gapyear.com\'}}>Gapyear.com</option>\n\t\t\t\t\t\t\t\t<option value="Gather.com" {{selected socialNetwork \'Gather.com\'}}>Gather.com</option>\n\t\t\t\t\t\t\t\t<option value="Gays.com" {{selected socialNetwork \'Gays.com\'}}>Gays.com</option>\n\t\t\t\t\t\t\t\t<option value="Geni.com" {{selected socialNetwork \'Geni.com\'}}>Geni.com</option>\n\t\t\t\t\t\t\t\t<option value="GetGlue" {{selected socialNetwork \'GetGlue\'}}>GetGlue</option>\n\t\t\t\t\t\t\t\t<option value="Gogoyoko" {{selected socialNetwork \'Gogoyoko\'}}>Gogoyoko</option>\n\t\t\t\t\t\t\t\t<option value="Goodreads" {{selected socialNetwork \'Goodreads\'}}>Goodreads</option>\n\t\t\t\t\t\t\t\t<option value="Goodwizz" {{selected socialNetwork \'Goodwizz\'}}>Goodwizz</option>\n\t\t\t\t\t\t\t\t<option value="Google+" {{selected socialNetwork \'Google+\'}}>Google+</option>\n\t\t\t\t\t\t\t\t<option value="GovLoop" {{selected socialNetwork \'GovLoop\'}}>GovLoop</option>\n\t\t\t\t\t\t\t\t<option value="Grono.net" {{selected socialNetwork \'Grono.net\'}}>Grono.net</option>\n\t\t\t\t\t\t\t\t<option value="Habbo" {{selected socialNetwork \'Habbo\'}}>Habbo</option>\n\t\t\t\t\t\t\t\t<option value="hi5" {{selected socialNetwork \'hi5\'}}>hi5</option>\n\t\t\t\t\t\t\t\t<option value="Hospitality Club" {{selected socialNetwork \'Hospitality Club\'}}>Hospitality Club</option>\n\t\t\t\t\t\t\t\t<option value="Hotlist" {{selected socialNetwork \'Hotlist\'}}>Hotlist</option>\n\t\t\t\t\t\t\t\t<option value="HR.com" {{selected socialNetwork \'HR.com\'}}>HR.com</option>\n\t\t\t\t\t\t\t\t<option value="Hub Culture" {{selected socialNetwork \'Hub Culture\'}}>Hub Culture</option>\n\t\t\t\t\t\t\t\t<option value="Hyves" {{selected socialNetwork \'Hyves\'}}>Hyves</option>\n\t\t\t\t\t\t\t\t<option value="Ibibo" {{selected socialNetwork \'Ibibo\'}}>Ibibo</option>\n\t\t\t\t\t\t\t\t<option value="Identi.ca" {{selected socialNetwork \'Identi.ca\'}}>Identi.ca</option>\n\t\t\t\t\t\t\t\t<option value="Indaba Music" {{selected socialNetwork \'Indaba Music\'}}>Indaba Music</option>\n\t\t\t\t\t\t\t\t<option value="IRC-Galleria" {{selected socialNetwork \'IRC-Galleria\'}}>IRC-Galleria</option>\n\t\t\t\t\t\t\t\t<option value="italki.com" {{selected socialNetwork \'italki.com\'}}>italki.com</option>\n\t\t\t\t\t\t\t\t<option value="Itsmy" {{selected socialNetwork \'Itsmy\'}}>Itsmy</option>\n\t\t\t\t\t\t\t\t<option value="iWiW" {{selected socialNetwork \'iWiW\'}}>iWiW</option>\n\t\t\t\t\t\t\t\t<option value="Jaiku" {{selected socialNetwork \'Jaiku\'}}>Jaiku</option>\n\t\t\t\t\t\t\t\t<option value="Jiepang" {{selected socialNetwork \'Jiepang\'}}>Jiepang</option>\n\t\t\t\t\t\t\t\t<option value="Kaixin001" {{selected socialNetwork \'Kaixin001\'}}>Kaixin001</option>\n\t\t\t\t\t\t\t\t<option value="Kiwibox" {{selected socialNetwork \'Kiwibox\'}}>Kiwibox</option>\n\t\t\t\t\t\t\t\t<option value="Lafango" {{selected socialNetwork \'Lafango\'}}>Lafango</option>\n\t\t\t\t\t\t\t\t<option value="LAGbook" {{selected socialNetwork \'LAGbook\'}}>LAGbook</option>\n\t\t\t\t\t\t\t\t<option value="LaiBhaari" {{selected socialNetwork \'LaiBhaari\'}}>LaiBhaari</option>\n\t\t\t\t\t\t\t\t<option value="Last.fm" {{selected socialNetwork \'Last.fm\'}}>Last.fm</option>\n\t\t\t\t\t\t\t\t<option value="LibraryThing" {{selected socialNetwork \'LibraryThing\'}}>LibraryThing</option>\n\t\t\t\t\t\t\t\t<option value="Lifeknot" {{selected socialNetwork \'Lifeknot\'}}>Lifeknot</option>\n\t\t\t\t\t\t\t\t<option value="LinkExpats" {{selected socialNetwork \'LinkExpats\'}}>LinkExpats</option>\n\t\t\t\t\t\t\t\t<option value="Listography" {{selected socialNetwork \'Listography\'}}>Listography</option>\n\t\t\t\t\t\t\t\t<option value="LiveJournal" {{selected socialNetwork \'LiveJournal\'}}>LiveJournal</option>\n\t\t\t\t\t\t\t\t<option value="Livemocha" {{selected socialNetwork \'Livemocha\'}}>Livemocha</option>\n\t\t\t\t\t\t\t\t<option value="Makeoutclub" {{selected socialNetwork \'Makeoutclub\'}}>Makeoutclub</option>\n\t\t\t\t\t\t\t\t<option value="MEETin" {{selected socialNetwork \'MEETin\'}}>MEETin</option>\n\t\t\t\t\t\t\t\t<option value="Meetup (website)" {{selected socialNetwork \'Meetup (website)\'}}>Meetup (website)</option>\n\t\t\t\t\t\t\t\t<option value="Meettheboss" {{selected socialNetwork \'Meettheboss\'}}>Meettheboss</option>\n\t\t\t\t\t\t\t\t<option value="MillatFacebook" {{selected socialNetwork \'MillatFacebook\'}}>MillatFacebook</option>\n\t\t\t\t\t\t\t\t<option value="mixi" {{selected socialNetwork \'mixi\'}}>mixi</option>\n\t\t\t\t\t\t\t\t<option value="MocoSpace" {{selected socialNetwork \'MocoSpace\'}}>MocoSpace</option>\n\t\t\t\t\t\t\t\t<option value="MOG" {{selected socialNetwork \'MOG\'}}>MOG</option>\n\t\t\t\t\t\t\t\t<option value="MouthShut.com" {{selected socialNetwork \'MouthShut.com\'}}>MouthShut.com</option>\n\t\t\t\t\t\t\t\t<option value="Mubi" {{selected socialNetwork \'Mubi\'}}>Mubi</option>\n\t\t\t\t\t\t\t\t<option value="MyHeritage" {{selected socialNetwork \'MyHeritage\'}}>MyHeritage</option>\n\t\t\t\t\t\t\t\t<option value="MyLife" {{selected socialNetwork \'MyLife\'}}>MyLife</option>\n\t\t\t\t\t\t\t\t<option value="My Opera" {{selected socialNetwork \'My Opera\'}}>My Opera</option>\n\t\t\t\t\t\t\t\t<option value="Myspace" {{selected socialNetwork \'Myspace\'}}>Myspace</option>\n\t\t\t\t\t\t\t\t<option value="Nasza-klasa.pl" {{selected socialNetwork \'Nasza-klasa.pl\'}}>Nasza-klasa.pl</option>\n\t\t\t\t\t\t\t\t<option value="Netlog" {{selected socialNetwork \'Netlog\'}}>Netlog</option>\n\t\t\t\t\t\t\t\t<option value="Nexopia" {{selected socialNetwork \'Nexopia\'}}>Nexopia</option>\n\t\t\t\t\t\t\t\t<option value="NGO Post" {{selected socialNetwork \'NGO Post\'}}>NGO Post</option>\n\t\t\t\t\t\t\t\t<option value="Ning" {{selected socialNetwork \'Ning\'}}>Ning</option>\n\t\t\t\t\t\t\t\t<option value="Odnoklassniki" {{selected socialNetwork \'Odnoklassniki\'}}>Odnoklassniki</option>\n\t\t\t\t\t\t\t\t<option value="Open Diary" {{selected socialNetwork \'Open Diary\'}}>Open Diary</option>\n\t\t\t\t\t\t\t\t<option value="Orkut" {{selected socialNetwork \'Orkut\'}}>Orkut</option>\n\t\t\t\t\t\t\t\t<option value="OUTeverywhere" {{selected socialNetwork \'OUTeverywhere\'}}>OUTeverywhere</option>\n\t\t\t\t\t\t\t\t<option value="PatientsLikeMe" {{selected socialNetwork \'PatientsLikeMe\'}}>PatientsLikeMe</option>\n\t\t\t\t\t\t\t\t<option value="Partyflock" {{selected socialNetwork \'Partyflock\'}}>Partyflock</option>\n\t\t\t\t\t\t\t\t<option value="Pingsta" {{selected socialNetwork \'Pingsta\'}}>Pingsta</option>\n\t\t\t\t\t\t\t\t<option value="Pinterest" {{selected socialNetwork \'Pinterest\'}}>Pinterest</option>\n\t\t\t\t\t\t\t\t<option value="Plaxo" {{selected socialNetwork \'Plaxo\'}}>Plaxo</option>\n\t\t\t\t\t\t\t\t<option value="Playfire" {{selected socialNetwork \'Playfire\'}}>Playfire</option>\n\t\t\t\t\t\t\t\t<option value="Playlist.com" {{selected socialNetwork \'Playlist.com\'}}>Playlist.com</option>\n\t\t\t\t\t\t\t\t<option value="Plurk" {{selected socialNetwork \'Plurk\'}}>Plurk</option>\n\t\t\t\t\t\t\t\t<option value="Qapacity" {{selected socialNetwork \'Qapacity\'}}>Qapacity</option>\n\t\t\t\t\t\t\t\t<option value="Quechup" {{selected socialNetwork \'Quechup\'}}>Quechup</option>\n\t\t\t\t\t\t\t\t<option value="Qzone" {{selected socialNetwork \'Qzone\'}}>Qzone</option>\n\t\t\t\t\t\t\t\t<option value="Raptr" {{selected socialNetwork \'Raptr\'}}>Raptr</option>\n\t\t\t\t\t\t\t\t<option value="Ravelry" {{selected socialNetwork \'Ravelry\'}}>Ravelry</option>\n\t\t\t\t\t\t\t\t<option value="Renren" {{selected socialNetwork \'Renren\'}}>Renren</option>\n\t\t\t\t\t\t\t\t<option value="ReverbNation.com" {{selected socialNetwork \'ReverbNation.com\'}}>ReverbNation.com</option>\n\t\t\t\t\t\t\t\t<option value="Ryze" {{selected socialNetwork \'Ryze\'}}>Ryze</option>\n\t\t\t\t\t\t\t\t<option value="ScienceStage" {{selected socialNetwork \'ScienceStage\'}}>ScienceStage</option>\n\t\t\t\t\t\t\t\t<option value="ShareTheMusic" {{selected socialNetwork \'ShareTheMusic\'}}>ShareTheMusic</option>\n\t\t\t\t\t\t\t\t<option value="Shelfari" {{selected socialNetwork \'Shelfari\'}}>Shelfari</option>\n\t\t\t\t\t\t\t\t<option value="Sina Weibo" {{selected socialNetwork \'Sina Weibo\'}}>Sina Weibo</option>\n\t\t\t\t\t\t\t\t<option value="Skoob" {{selected socialNetwork \'Skoob\'}}>Skoob</option>\n\t\t\t\t\t\t\t\t<option value="Skyrock" {{selected socialNetwork \'Skyrock\'}}>Skyrock</option>\n\t\t\t\t\t\t\t\t<option value="SocialVibe" {{selected socialNetwork \'SocialVibe\'}}>SocialVibe</option>\n\t\t\t\t\t\t\t\t<option value="Sonico.com" {{selected socialNetwork \'Sonico.com\'}}>Sonico.com</option>\n\t\t\t\t\t\t\t\t<option value="SoundCloud" {{selected socialNetwork \'SoundCloud\'}}>SoundCloud</option>\n\t\t\t\t\t\t\t\t<option value="Spaces" {{selected socialNetwork \'Spaces\'}}>Spaces</option>\n\t\t\t\t\t\t\t\t<option value="Stickam" {{selected socialNetwork \'Stickam\'}}>Stickam</option>\n\t\t\t\t\t\t\t\t<option value="StudiVZ" {{selected socialNetwork \'StudiVZ\'}}>StudiVZ</option>\n\t\t\t\t\t\t\t\t<option value="Students Circle Network" {{selected socialNetwork \'Students Circle Network\'}}>Students Circle Network</option>\n\t\t\t\t\t\t\t\t<option value="StumbleUpon" {{selected socialNetwork \'StumbleUpon\'}}>StumbleUpon</option>\n\t\t\t\t\t\t\t\t<option value="Tagged" {{selected socialNetwork \'Tagged\'}}>Tagged</option>\n\t\t\t\t\t\t\t\t<option value="Talkbiznow" {{selected socialNetwork \'Talkbiznow\'}}>Talkbiznow</option>\n\t\t\t\t\t\t\t\t<option value="Taltopia" {{selected socialNetwork \'Taltopia\'}}>Taltopia</option>\n\t\t\t\t\t\t\t\t<option value="Taringa!" {{selected socialNetwork \'Taringa!\'}}>Taringa!</option>\n\t\t\t\t\t\t\t\t<option value="TeachStreet" {{selected socialNetwork \'TeachStreet\'}}>TeachStreet</option>\n\t\t\t\t\t\t\t\t<option value="TermWiki" {{selected socialNetwork \'TermWiki\'}}>TermWiki</option>\n\t\t\t\t\t\t\t\t<option value="The Sphere" {{selected socialNetwork \'The Sphere\'}}>The Sphere</option>\n\t\t\t\t\t\t\t\t<option value="TravBuddy.com" {{selected socialNetwork \'TravBuddy.com\'}}>TravBuddy.com</option>\n\t\t\t\t\t\t\t\t<option value="Travellerspoint" {{selected socialNetwork \'Travellerspoint\'}}>Travellerspoint</option>\n\t\t\t\t\t\t\t\t<option value="tribe.net" {{selected socialNetwork \'tribe.net\'}}>tribe.net</option>\n\t\t\t\t\t\t\t\t<option value="Trombi.com" {{selected socialNetwork \'Trombi.com\'}}>Trombi.com</option>\n\t\t\t\t\t\t\t\t<option value="Tuenti" {{selected socialNetwork \'Tuenti\'}}>Tuenti</option>\n\t\t\t\t\t\t\t\t<option value="Tylted" {{selected socialNetwork \'Tylted\'}}>Tylted</option>\n\t\t\t\t\t\t\t\t<option value="Vkontakte" {{selected socialNetwork \'Vkontakte\'}}>Vkontakte</option>\n\t\t\t\t\t\t\t\t<option value="Vampirefreaks.com" {{selected socialNetwork \'Vampirefreaks.com\'}}>Vampirefreaks.com</option>\n\t\t\t\t\t\t\t\t<option value="Viadeo" {{selected socialNetwork \'Viadeo\'}}>Viadeo</option>\n\t\t\t\t\t\t\t\t<option value="Virb" {{selected socialNetwork \'Virb\'}}>Virb</option>\n\t\t\t\t\t\t\t\t<option value="Vox" {{selected socialNetwork \'Vox\'}}>Vox</option>\n\t\t\t\t\t\t\t\t<option value="Wattpad" {{selected socialNetwork \'Wattpad\'}}>Wattpad</option>\n\t\t\t\t\t\t\t\t<option value="WAYN" {{selected socialNetwork \'WAYN\'}}>WAYN</option>\n\t\t\t\t\t\t\t\t<option value="WeeWorld" {{selected socialNetwork \'WeeWorld\'}}>WeeWorld</option>\n\t\t\t\t\t\t\t\t<option value="Wellwer" {{selected socialNetwork \'Wellwer\'}}>Wellwer</option>\n\t\t\t\t\t\t\t\t<option value="WeOurFamily" {{selected socialNetwork \'WeOurFamily\'}}>WeOurFamily</option>\n\t\t\t\t\t\t\t\t<option value="Wepolls.com" {{selected socialNetwork \'Wepolls.com\'}}>Wepolls.com</option>\n\t\t\t\t\t\t\t\t<option value="Wer-kennt-wen" {{selected socialNetwork \'Wer-kennt-wen\'}}>Wer-kennt-wen</option>\n\t\t\t\t\t\t\t\t<option value="weRead" {{selected socialNetwork \'weRead\'}}>weRead</option>\n\t\t\t\t\t\t\t\t<option value="Wiser.org" {{selected socialNetwork \'Wiser.org\'}}>Wiser.org</option>\n\t\t\t\t\t\t\t\t<option value="Wooxie" {{selected socialNetwork \'Wooxie\'}}>Wooxie</option>\n\t\t\t\t\t\t\t\t<option value="WriteAPrisoner.com" {{selected socialNetwork \'WriteAPrisoner.com\'}}>WriteAPrisoner.com</option>\n\t\t\t\t\t\t\t\t<option value="Xanga" {{selected socialNetwork \'Xanga\'}}>Xanga</option>\n\t\t\t\t\t\t\t\t<option value="XING" {{selected socialNetwork \'XING\'}}>XING</option>\n\t\t\t\t\t\t\t\t<option value="Xt3" {{selected socialNetwork \'Xt3\'}}>Xt3</option>\n\t\t\t\t\t\t\t\t<option value="Yammer" {{selected socialNetwork \'Yammer\'}}>Yammer</option>\n\t\t\t\t\t\t\t\t<option value="Yelp, Inc." {{selected socialNetwork \'Yelp, Inc.\'}}>Yelp, Inc.</option>\n\t\t\t\t\t\t\t\t<option value="Zoo.gr" {{selected socialNetwork \'Zoo.gr\'}}>Zoo.gr</option>\n\t\t\t\t\t\t\t\t<option value="Zooppa" {{selected socialNetwork \'Zooppa\'}}>Zooppa</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<input type="text" name="snUsername" id="snUsername-{{@index}}" value="{{snUsername}}" class="size-23" maxlength="40">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{{/each}}\n\t\t\t\t\t\t<div id="socialNetwork-tpl">\n\t\t\t\t\t\t\t<select name="socialNetworks" class="size-13">\n\t\t\t\t\t\t\t\t<option value="" selected="selected">Select Network</option>\n\t\t\t\t\t\t\t\t<option value="Facebook" >Facebook</option>\n\t\t\t\t\t\t\t\t<option value="Twitter" >Twitter</option>\n\t\t\t\t\t\t\t\t<option value="LinkedIn" >LinkedIn</option>\n\t\t\t\t\t\t\t\t<option value="Google+" >Google+</option>\n\t\t\t\t\t\t\t\t<option value="--------------" >--------------</option>\n\t\t\t\t\t\t\t\t<option value="43 Things" >43 Things</option>\n\t\t\t\t\t\t\t\t<option value="Academia.edu" >Academia.edu</option>\n\t\t\t\t\t\t\t\t<option value="Advogato" >Advogato</option>\n\t\t\t\t\t\t\t\t<option value="aNobii" >aNobii</option>\n\t\t\t\t\t\t\t\t<option value="AsianAvenue" >AsianAvenue</option>\n\t\t\t\t\t\t\t\t<option value="aSmallWorld" >aSmallWorld</option>\n\t\t\t\t\t\t\t\t<option value="Athlinks" >Athlinks</option>\n\t\t\t\t\t\t\t\t<option value="Audimated.com" >Audimated.com</option>\n\t\t\t\t\t\t\t\t<option value="Bebo" >Bebo</option>\n\t\t\t\t\t\t\t\t<option value="BIGADDA" >BIGADDA</option>\n\t\t\t\t\t\t\t\t<option value="Biip.no" >Biip.no</option>\n\t\t\t\t\t\t\t\t<option value="BlackPlanet" >BlackPlanet</option>\n\t\t\t\t\t\t\t\t<option value="Blauk" >Blauk</option>\n\t\t\t\t\t\t\t\t<option value="Blogster" >Blogster</option>\n\t\t\t\t\t\t\t\t<option value="Bolt.com" >Bolt.com</option>\n\t\t\t\t\t\t\t\t<option value="Busuu" >Busuu</option>\n\t\t\t\t\t\t\t\t<option value="Buzznet" >Buzznet</option>\n\t\t\t\t\t\t\t\t<option value="CafeMom" >CafeMom</option>\n\t\t\t\t\t\t\t\t<option value="Care2" >Care2</option>\n\t\t\t\t\t\t\t\t<option value="CaringBridge" >CaringBridge</option>\n\t\t\t\t\t\t\t\t<option value="Classmates.com" >Classmates.com</option>\n\t\t\t\t\t\t\t\t<option value="Cloob" >Cloob</option>\n\t\t\t\t\t\t\t\t<option value="CouchSurfing" >CouchSurfing</option>\n\t\t\t\t\t\t\t\t<option value="CozyCot" >CozyCot</option>\n\t\t\t\t\t\t\t\t<option value="Cross.tv" >Cross.tv</option>\n\t\t\t\t\t\t\t\t<option value="Crunchyroll" >Crunchyroll</option>\n\t\t\t\t\t\t\t\t<option value="Cyworld" >Cyworld</option>\n\t\t\t\t\t\t\t\t<option value="DailyBooth" >DailyBooth</option>\n\t\t\t\t\t\t\t\t<option value="DailyStrength" >DailyStrength</option>\n\t\t\t\t\t\t\t\t<option value="delicious" >delicious</option>\n\t\t\t\t\t\t\t\t<option value="deviantART" >deviantART</option>\n\t\t\t\t\t\t\t\t<option value="Diaspora*" >Diaspora*</option>\n\t\t\t\t\t\t\t\t<option value="Disaboom" >Disaboom</option>\n\t\t\t\t\t\t\t\t<option value="Dol2day" >Dol2day</option>\n\t\t\t\t\t\t\t\t<option value="DontStayIn" >DontStayIn</option>\n\t\t\t\t\t\t\t\t<option value="Draugiem.lv" >Draugiem.lv</option>\n\t\t\t\t\t\t\t\t<option value="douban" >douban</option>\n\t\t\t\t\t\t\t\t<option value="DXY.cn" >DXY.cn</option>\n\t\t\t\t\t\t\t\t<option value="Elftown" >Elftown</option>\n\t\t\t\t\t\t\t\t<option value="Elixio" >Elixio</option>\n\t\t\t\t\t\t\t\t<option value="English, baby!" >English, baby!</option>\n\t\t\t\t\t\t\t\t<option value="Epernicus" >Epernicus</option>\n\t\t\t\t\t\t\t\t<option value="Eons.com" >Eons.com</option>\n\t\t\t\t\t\t\t\t<option value="eToro" >eToro</option>\n\t\t\t\t\t\t\t\t<option value="Experience Project" >Experience Project</option>\n\t\t\t\t\t\t\t\t<option value="Exploroo" >Exploroo</option>\n\t\t\t\t\t\t\t\t<option value="Faceparty" >Faceparty</option>\n\t\t\t\t\t\t\t\t<option value="Faces.com" >Faces.com</option>\n\t\t\t\t\t\t\t\t<option value="Fetlife" >Fetlife</option>\n\t\t\t\t\t\t\t\t<option value="FilmAffinity" >FilmAffinity</option>\n\t\t\t\t\t\t\t\t<option value="Filmow" >Filmow</option>\n\t\t\t\t\t\t\t\t<option value="FledgeWing" >FledgeWing</option>\n\t\t\t\t\t\t\t\t<option value="Flixster" >Flixster</option>\n\t\t\t\t\t\t\t\t<option value="Flickr" >Flickr</option>\n\t\t\t\t\t\t\t\t<option value="Focus.com" >Focus.com</option>\n\t\t\t\t\t\t\t\t<option value="Fotki" >Fotki</option>\n\t\t\t\t\t\t\t\t<option value="Fotolog" >Fotolog</option>\n\t\t\t\t\t\t\t\t<option value="Foursquare" >Foursquare</option>\n\t\t\t\t\t\t\t\t<option value="Friendica" >Friendica</option>\n\t\t\t\t\t\t\t\t<option value="Friends Reunited" >Friends Reunited</option>\n\t\t\t\t\t\t\t\t<option value="Friendster" >Friendster</option>\n\t\t\t\t\t\t\t\t<option value="Frühstückstreff" >Frühstückstreff</option>\n\t\t\t\t\t\t\t\t<option value="Fubar" >Fubar</option>\n\t\t\t\t\t\t\t\t<option value="Fuelmyblog" >Fuelmyblog</option>\n\t\t\t\t\t\t\t\t<option value="FullCircle" >FullCircle</option>\n\t\t\t\t\t\t\t\t<option value="Gaia Online" >Gaia Online</option>\n\t\t\t\t\t\t\t\t<option value="GamerDNA" >GamerDNA</option>\n\t\t\t\t\t\t\t\t<option value="Gapyear.com" >Gapyear.com</option>\n\t\t\t\t\t\t\t\t<option value="Gather.com" >Gather.com</option>\n\t\t\t\t\t\t\t\t<option value="Gays.com" >Gays.com</option>\n\t\t\t\t\t\t\t\t<option value="Geni.com" >Geni.com</option>\n\t\t\t\t\t\t\t\t<option value="GetGlue" >GetGlue</option>\n\t\t\t\t\t\t\t\t<option value="Gogoyoko" >Gogoyoko</option>\n\t\t\t\t\t\t\t\t<option value="Goodreads" >Goodreads</option>\n\t\t\t\t\t\t\t\t<option value="Goodwizz" >Goodwizz</option>\n\t\t\t\t\t\t\t\t<option value="Google+" >Google+</option>\n\t\t\t\t\t\t\t\t<option value="GovLoop" >GovLoop</option>\n\t\t\t\t\t\t\t\t<option value="Grono.net" >Grono.net</option>\n\t\t\t\t\t\t\t\t<option value="Habbo" >Habbo</option>\n\t\t\t\t\t\t\t\t<option value="hi5" >hi5</option>\n\t\t\t\t\t\t\t\t<option value="Hospitality Club" >Hospitality Club</option>\n\t\t\t\t\t\t\t\t<option value="Hotlist" >Hotlist</option>\n\t\t\t\t\t\t\t\t<option value="HR.com" >HR.com</option>\n\t\t\t\t\t\t\t\t<option value="Hub Culture" >Hub Culture</option>\n\t\t\t\t\t\t\t\t<option value="Hyves" >Hyves</option>\n\t\t\t\t\t\t\t\t<option value="Ibibo" >Ibibo</option>\n\t\t\t\t\t\t\t\t<option value="Identi.ca" >Identi.ca</option>\n\t\t\t\t\t\t\t\t<option value="Indaba Music" >Indaba Music</option>\n\t\t\t\t\t\t\t\t<option value="IRC-Galleria" >IRC-Galleria</option>\n\t\t\t\t\t\t\t\t<option value="italki.com" >italki.com</option>\n\t\t\t\t\t\t\t\t<option value="Itsmy" >Itsmy</option>\n\t\t\t\t\t\t\t\t<option value="iWiW" >iWiW</option>\n\t\t\t\t\t\t\t\t<option value="Jaiku" >Jaiku</option>\n\t\t\t\t\t\t\t\t<option value="Jiepang" >Jiepang</option>\n\t\t\t\t\t\t\t\t<option value="Kaixin001" >Kaixin001</option>\n\t\t\t\t\t\t\t\t<option value="Kiwibox" >Kiwibox</option>\n\t\t\t\t\t\t\t\t<option value="Lafango" >Lafango</option>\n\t\t\t\t\t\t\t\t<option value="LAGbook" >LAGbook</option>\n\t\t\t\t\t\t\t\t<option value="LaiBhaari" >LaiBhaari</option>\n\t\t\t\t\t\t\t\t<option value="Last.fm" >Last.fm</option>\n\t\t\t\t\t\t\t\t<option value="LibraryThing" >LibraryThing</option>\n\t\t\t\t\t\t\t\t<option value="Lifeknot" >Lifeknot</option>\n\t\t\t\t\t\t\t\t<option value="LinkExpats" >LinkExpats</option>\n\t\t\t\t\t\t\t\t<option value="Listography" >Listography</option>\n\t\t\t\t\t\t\t\t<option value="LiveJournal" >LiveJournal</option>\n\t\t\t\t\t\t\t\t<option value="Livemocha" >Livemocha</option>\n\t\t\t\t\t\t\t\t<option value="Makeoutclub" >Makeoutclub</option>\n\t\t\t\t\t\t\t\t<option value="MEETin" >MEETin</option>\n\t\t\t\t\t\t\t\t<option value="Meetup (website)" >Meetup (website)</option>\n\t\t\t\t\t\t\t\t<option value="Meettheboss" >Meettheboss</option>\n\t\t\t\t\t\t\t\t<option value="MillatFacebook" >MillatFacebook</option>\n\t\t\t\t\t\t\t\t<option value="mixi" >mixi</option>\n\t\t\t\t\t\t\t\t<option value="MocoSpace" >MocoSpace</option>\n\t\t\t\t\t\t\t\t<option value="MOG" >MOG</option>\n\t\t\t\t\t\t\t\t<option value="MouthShut.com" >MouthShut.com</option>\n\t\t\t\t\t\t\t\t<option value="Mubi" >Mubi</option>\n\t\t\t\t\t\t\t\t<option value="MyHeritage" >MyHeritage</option>\n\t\t\t\t\t\t\t\t<option value="MyLife" >MyLife</option>\n\t\t\t\t\t\t\t\t<option value="My Opera" >My Opera</option>\n\t\t\t\t\t\t\t\t<option value="Myspace" >Myspace</option>\n\t\t\t\t\t\t\t\t<option value="Nasza-klasa.pl" >Nasza-klasa.pl</option>\n\t\t\t\t\t\t\t\t<option value="Netlog" >Netlog</option>\n\t\t\t\t\t\t\t\t<option value="Nexopia" >Nexopia</option>\n\t\t\t\t\t\t\t\t<option value="NGO Post" >NGO Post</option>\n\t\t\t\t\t\t\t\t<option value="Ning" >Ning</option>\n\t\t\t\t\t\t\t\t<option value="Odnoklassniki" >Odnoklassniki</option>\n\t\t\t\t\t\t\t\t<option value="Open Diary" >Open Diary</option>\n\t\t\t\t\t\t\t\t<option value="Orkut" >Orkut</option>\n\t\t\t\t\t\t\t\t<option value="OUTeverywhere" >OUTeverywhere</option>\n\t\t\t\t\t\t\t\t<option value="PatientsLikeMe" >PatientsLikeMe</option>\n\t\t\t\t\t\t\t\t<option value="Partyflock" >Partyflock</option>\n\t\t\t\t\t\t\t\t<option value="Pingsta" >Pingsta</option>\n\t\t\t\t\t\t\t\t<option value="Pinterest" >Pinterest</option>\n\t\t\t\t\t\t\t\t<option value="Plaxo" >Plaxo</option>\n\t\t\t\t\t\t\t\t<option value="Playfire" >Playfire</option>\n\t\t\t\t\t\t\t\t<option value="Playlist.com" >Playlist.com</option>\n\t\t\t\t\t\t\t\t<option value="Plurk" >Plurk</option>\n\t\t\t\t\t\t\t\t<option value="Qapacity" >Qapacity</option>\n\t\t\t\t\t\t\t\t<option value="Quechup" >Quechup</option>\n\t\t\t\t\t\t\t\t<option value="Qzone" >Qzone</option>\n\t\t\t\t\t\t\t\t<option value="Raptr" >Raptr</option>\n\t\t\t\t\t\t\t\t<option value="Ravelry" >Ravelry</option>\n\t\t\t\t\t\t\t\t<option value="Renren" >Renren</option>\n\t\t\t\t\t\t\t\t<option value="ReverbNation.com" >ReverbNation.com</option>\n\t\t\t\t\t\t\t\t<option value="Ryze" >Ryze</option>\n\t\t\t\t\t\t\t\t<option value="ScienceStage" >ScienceStage</option>\n\t\t\t\t\t\t\t\t<option value="ShareTheMusic" >ShareTheMusic</option>\n\t\t\t\t\t\t\t\t<option value="Shelfari" >Shelfari</option>\n\t\t\t\t\t\t\t\t<option value="Sina Weibo" >Sina Weibo</option>\n\t\t\t\t\t\t\t\t<option value="Skoob" >Skoob</option>\n\t\t\t\t\t\t\t\t<option value="Skyrock" >Skyrock</option>\n\t\t\t\t\t\t\t\t<option value="SocialVibe" >SocialVibe</option>\n\t\t\t\t\t\t\t\t<option value="Sonico.com" >Sonico.com</option>\n\t\t\t\t\t\t\t\t<option value="SoundCloud" >SoundCloud</option>\n\t\t\t\t\t\t\t\t<option value="Spaces" >Spaces</option>\n\t\t\t\t\t\t\t\t<option value="Stickam" >Stickam</option>\n\t\t\t\t\t\t\t\t<option value="StudiVZ" >StudiVZ</option>\n\t\t\t\t\t\t\t\t<option value="Students Circle Network" >Students Circle Network</option>\n\t\t\t\t\t\t\t\t<option value="StumbleUpon" >StumbleUpon</option>\n\t\t\t\t\t\t\t\t<option value="Tagged" >Tagged</option>\n\t\t\t\t\t\t\t\t<option value="Talkbiznow" >Talkbiznow</option>\n\t\t\t\t\t\t\t\t<option value="Taltopia" >Taltopia</option>\n\t\t\t\t\t\t\t\t<option value="Taringa!" >Taringa!</option>\n\t\t\t\t\t\t\t\t<option value="TeachStreet" >TeachStreet</option>\n\t\t\t\t\t\t\t\t<option value="TermWiki" >TermWiki</option>\n\t\t\t\t\t\t\t\t<option value="The Sphere" >The Sphere</option>\n\t\t\t\t\t\t\t\t<option value="TravBuddy.com" >TravBuddy.com</option>\n\t\t\t\t\t\t\t\t<option value="Travellerspoint" >Travellerspoint</option>\n\t\t\t\t\t\t\t\t<option value="tribe.net" >tribe.net</option>\n\t\t\t\t\t\t\t\t<option value="Trombi.com" >Trombi.com</option>\n\t\t\t\t\t\t\t\t<option value="Tuenti" >Tuenti</option>\n\t\t\t\t\t\t\t\t<option value="Tylted" >Tylted</option>\n\t\t\t\t\t\t\t\t<option value="Vkontakte" >Vkontakte</option>\n\t\t\t\t\t\t\t\t<option value="Vampirefreaks.com" >Vampirefreaks.com</option>\n\t\t\t\t\t\t\t\t<option value="Viadeo" >Viadeo</option>\n\t\t\t\t\t\t\t\t<option value="Virb" >Virb</option>\n\t\t\t\t\t\t\t\t<option value="Vox" >Vox</option>\n\t\t\t\t\t\t\t\t<option value="Wattpad" >Wattpad</option>\n\t\t\t\t\t\t\t\t<option value="WAYN" >WAYN</option>\n\t\t\t\t\t\t\t\t<option value="WeeWorld" >WeeWorld</option>\n\t\t\t\t\t\t\t\t<option value="Wellwer" >Wellwer</option>\n\t\t\t\t\t\t\t\t<option value="WeOurFamily" >WeOurFamily</option>\n\t\t\t\t\t\t\t\t<option value="Wepolls.com" >Wepolls.com</option>\n\t\t\t\t\t\t\t\t<option value="Wer-kennt-wen" >Wer-kennt-wen</option>\n\t\t\t\t\t\t\t\t<option value="weRead" >weRead</option>\n\t\t\t\t\t\t\t\t<option value="Wiser.org" >Wiser.org</option>\n\t\t\t\t\t\t\t\t<option value="Wooxie" >Wooxie</option>\n\t\t\t\t\t\t\t\t<option value="WriteAPrisoner.com" >WriteAPrisoner.com</option>\n\t\t\t\t\t\t\t\t<option value="Xanga" >Xanga</option>\n\t\t\t\t\t\t\t\t<option value="XING" >XING</option>\n\t\t\t\t\t\t\t\t<option value="Xt3" >Xt3</option>\n\t\t\t\t\t\t\t\t<option value="Yammer" >Yammer</option>\n\t\t\t\t\t\t\t\t<option value="Yelp, Inc." >Yelp, Inc.</option>\n\t\t\t\t\t\t\t\t<option value="Zoo.gr" >Zoo.gr</option>\n\t\t\t\t\t\t\t\t<option value="Zooppa" >Zooppa</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<input type="text" class="size-23" name="snUsername" maxlength="40">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div><!-- EOF control-group -->\n\t\t\t<div class="control-group">\n\t\t\t\t<label class="control-label" for="textarea"><label for="socialNetwork">Instant Message</label></label>\n\t\t\t\t<div class="controls">\n\t\t\t\t\t<div id="instantMessage-list">\n\t\t\t\t\t\t{{#each instantMessages}}\n\t\t\t\t\t\t<div id="im-{{@index}}">\n\t\t\t\t\t\t\t<select name="instantMessages" id="instantMessage-{{@index}}" class="size-13">\n\t\t\t\t\t\t\t\t<option value="" selected="selected">Select IM</option>\n\t\t\t\t\t\t\t\t<option value="Skype" {{selected instantMessage \'Skype\'}}>Skype</option>\n\t\t\t\t\t\t\t\t<option value="WhatsApp" {{selected instantMessage \'WhatsApp\'}}>WhatsApp</option>\n\t\t\t\t\t\t\t\t<option value="Line" {{selected instantMessage \'Line\'}}>Line</option>\n\t\t\t\t\t\t\t\t<option value="----------------" {{selected instantMessage \'----------------\'}}>----------------</option>\n\t\t\t\t\t\t\t\t<option value="AIM" {{selected instantMessage \'AIM\'}}>AIM</option>\n\t\t\t\t\t\t\t\t<option value="Blauk" {{selected instantMessage \'Blauk\'}}>Blauk</option>\n\t\t\t\t\t\t\t\t<option value="eBuddy" {{selected instantMessage \'eBuddy\'}}>eBuddy</option>\n\t\t\t\t\t\t\t\t<option value="Gadu-Gadu" {{selected instantMessage \'Gadu-Gadu\'}}>Gadu-Gadu</option>\n\t\t\t\t\t\t\t\t<option value="IBM Lotus Sametime" {{selected instantMessage \'IBM Lotus Sametime\'}}>IBM Lotus Sametime</option>\n\t\t\t\t\t\t\t\t<option value="ICQ" {{selected instantMessage \'ICQ\'}}>ICQ</option>\n\t\t\t\t\t\t\t\t<option value="iMessage" {{selected instantMessage \'iMessage\'}}>iMessage</option>\n\t\t\t\t\t\t\t\t<option value="IMVU" {{selected instantMessage \'IMVU\'}}>IMVU</option>\n\t\t\t\t\t\t\t\t<option value="Lync" {{selected instantMessage \'Lync\'}}>Lync</option>\n\t\t\t\t\t\t\t\t<option value="MXit" {{selected instantMessage \'MXit\'}}>MXit</option>\n\t\t\t\t\t\t\t\t<option value="Paltalk" {{selected instantMessage \'Paltalk\'}}>Paltalk</option>\n\t\t\t\t\t\t\t\t<option value="Tencent QQ" {{selected instantMessage \'Tencent QQ\'}}>Tencent QQ</option>\n\t\t\t\t\t\t\t\t<option value="Windows Live Messenger" {{selected instantMessage \'Windows Live Messenger\'}}>Windows Live Messenger</option>\n\t\t\t\t\t\t\t\t<option value="Wireclub" {{selected instantMessage \'Wireclub\'}}>Wireclub</option>\n\t\t\t\t\t\t\t\t<option value="Xfire" {{selected instantMessage \'Xfire\'}}>Xfire</option>\n\t\t\t\t\t\t\t\t<option value="Yahoo! Messenger" {{selected instantMessage \'Yahoo! Messenger\'}}>Yahoo! Messenger</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<input type="text" name="imUsername" id="imUsername-{{@index}}" value="{{imUsername}}" class="size-23" maxlength="40">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{{/each}}\n\t\t\t\t\t\t<div id="im-tpl">\n\t\t\t\t\t\t\t<select name="instantMessages" class="size-13">\n\t\t\t\t\t\t\t\t<option value="" selected="selected">Select IM</option>\n\t\t\t\t\t\t\t\t<option value="Skype" >Skype</option>\n\t\t\t\t\t\t\t\t<option value="WhatsApp" >WhatsApp</option>\n\t\t\t\t\t\t\t\t<option value="Line" >Line</option>\n\t\t\t\t\t\t\t\t<option value="----------------" >----------------</option>\n\t\t\t\t\t\t\t\t<option value="AIM" >AIM</option>\n\t\t\t\t\t\t\t\t<option value="Blauk" >Blauk</option>\n\t\t\t\t\t\t\t\t<option value="eBuddy" >eBuddy</option>\n\t\t\t\t\t\t\t\t<option value="Gadu-Gadu" >Gadu-Gadu</option>\n\t\t\t\t\t\t\t\t<option value="IBM Lotus Sametime" >IBM Lotus Sametime</option>\n\t\t\t\t\t\t\t\t<option value="ICQ" >ICQ</option>\n\t\t\t\t\t\t\t\t<option value="iMessage" >iMessage</option>\n\t\t\t\t\t\t\t\t<option value="IMVU" >IMVU</option>\n\t\t\t\t\t\t\t\t<option value="Lync" >Lync</option>\n\t\t\t\t\t\t\t\t<option value="MXit" >MXit</option>\n\t\t\t\t\t\t\t\t<option value="Paltalk" >Paltalk</option>\n\t\t\t\t\t\t\t\t<option value="Tencent QQ" >Tencent QQ</option>\n\t\t\t\t\t\t\t\t<option value="Windows Live Messenger" >Windows Live Messenger</option>\n\t\t\t\t\t\t\t\t<option value="Wireclub" >Wireclub</option>\n\t\t\t\t\t\t\t\t<option value="Xfire" >Xfire</option>\n\t\t\t\t\t\t\t\t<option value="Yahoo! Messenger" >Yahoo! Messenger</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<input type="text" name="imUsername" class="size-23" maxlength="40">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div><!-- EOF control-group -->\n\t\t</div><!-- EOF box-content -->\n\t\t<div class="box-footer accordion-heading">\n\t\t\t<div class="button-group">\n\t\t\t\t<button class="button cancel-edition-btn" data-rel="contact-box">Cancel</button>\n\t\t\t\t<button id="save-profile-btn" type="submit" class="button-highlight" data-loading-text="Saving...">Save</button>\n\t\t\t</div>\n\t\t</div><!-- EOF box-footer -->\n\t</form>\n</div><!-- EOF box-standard -->');});
define('tmpl!templates/app/profile/form.places.html',[ 'core/view' ], function(view) {return view('\t\t<div class="box-standard maps">\n\t\t\t<form id="places-form" data-rel="places-box">\n\t\t\t\t<div class="box-header">\n\t\t\t\t\t<h1 class="places-icon">Places</h1>\n\t\t\t\t</div>\n\t\t\t\t<div id="user-map"></div>\n\t\t\t\t<div class="box-content">\n\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t<label class="places-hometown-icon-mini">Hometown</label>\n\t\t\t\t\t\t<div id="hometown" class="controls">\n\t\t\t\t\t\t\t{{#with hometown}}\n\t\t\t\t\t\t\t<input id="hometownCity" name="hometown" type="text" data-provide="typeahead" class="hometown span5" {{#if name}}value="{{name}}, {{region}}, {{country}}"{{/if}}autocomplete="off">\n\t\t\t\t\t\t\t<input name="hometown-city" type="hidden" value="{{name}}">\n\t\t\t\t\t\t\t<input name="hometown-region" type="hidden" value="{{region}}">\n\t\t\t\t\t\t\t<input name="hometown-country" type="hidden" value="{{country}}">\n\t\t\t\t\t\t\t<input name="hometown-lat" type="hidden" value="{{lat}}">\n\t\t\t\t\t\t\t<input name="hometown-lon" type="hidden" value="{{lon}}">\n\t\t\t\t\t\t\t{{/with}}\n\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div><!-- EOF control-group -->\n\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t<label class="places-current-icon-mini">Current city</label>\n\t\t\t\t\t\t<div id="current" class="controls">\n\t\t\t\t\t\t\t{{#with current}}\n\t\t\t\t\t\t\t<input id="currentCity" name="current" type="text" data-provide="typeahead" class="hometown span5" {{#if name}}value="{{name}}, {{region}}, {{country}}"{{/if}} autocomplete="off">\n\t\t\t\t\t\t\t<input name="current-city" type="hidden" value="{{name}}">\n\t\t\t\t\t\t\t<input name="current-region" type="hidden" value="{{region}}">\n\t\t\t\t\t\t\t<input name="current-country" type="hidden" value="{{country}}">\n\t\t\t\t\t\t\t<input name="current-lat" type="hidden" value="{{lat}}">\n\t\t\t\t\t\t\t<input name="current-lon" type="hidden" value="{{lon}}">\n\t\t\t\t\t\t\t{{/with}}\n\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div><!-- EOF control-group -->\n\t\t\t\t\t<div id="otherLocations-group" class="control-group">\n\t\t\t\t\t\t<label class="places-lived-icon-mini">Where I have lived</label>\n\t\t\t\t\t\t<div class="controls lived">\n\t\t\t\t\t\t\t<div id="otherLocations-list">\n\t\t\t\t\t\t\t\t{{#each otherLocations}}\n\t\t\t\t\t\t\t\t<div id="otherLocation-{{@index}}">\n\t\t\t\t\t\t\t\t\t<input name="otherLocations" id="otherLocation-{{@index}}" type="text" data-provide="typeahead" {{#if name}}value="{{name}}, {{region}}, {{country}}"{{/if}} disabled class="span5" autocomplete="off">\n\t\t\t\t\t\t\t\t\t<input name="other-city" type="hidden" value="{{name}}">\n\t\t\t\t\t\t\t\t\t<input name="other-region" type="hidden" value="{{region}}">\n\t\t\t\t\t\t\t\t\t<input name="other-country" type="hidden" value="{{country}}">\n\t\t\t\t\t\t\t\t\t<input name="other-lat" type="hidden" value="{{lat}}">\n\t\t\t\t\t\t\t\t\t<input name="other-lon" type="hidden" value="{{lon}}">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{{/each}}\n\t\t\t\t\t\t\t\t<div id="otherLocation-tpl">\n\t\t\t\t\t\t\t\t\t<input name="otherLocations" type="text" data-provide="typeahead" class="span5" autocomplete="off">\n\t\t\t\t\t\t\t\t\t<input name="other-city" type="hidden">\n\t\t\t\t\t\t\t\t\t<input name="other-region" type="hidden">\n\t\t\t\t\t\t\t\t\t<input name="other-country" type="hidden">\n\t\t\t\t\t\t\t\t\t<input name="other-lat" type="hidden">\n\t\t\t\t\t\t\t\t\t<input name="other-lon" type="hidden">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div><!-- EOF #otherLocations-list -->\n\t\t\t\t\t\t</div><!-- EOF controls -->\n\t\t\t\t\t</div><!-- EOF control-group -->\n\t\t\t\t</div>\n\t\t\t\t<div class="box-footer accordion-heading">\n\t\t\t\t\t<div class="button-group">\n\t\t\t\t\t\t<button class="button cancel-edition-btn" data-rel="places-box">Cancel</button>\n\t\t\t\t\t\t<button id="save-profile-btn" type="submit" form="places-form" class="button-highlight" data-loading-text="Saving...">Save</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div><!-- EOF box-footer -->\n\t\t\t</form>\n\t\t</div><!-- EOF box-standard -->');});
define('views/app/list',['require','jquery','backbone'],function(require) {

	var $ = require("jquery");
	var Backbone = require("backbone");

	var List = Backbone.View.extend({

		initialize: function(options) {
			this.el = options.el;
			this.key = options.key;
			this.$tpl = $(options.tpl);
			this.store = options.store;

			this.length = (this.store.length > 0) ? this.store.length: 0;
			this.render();
		},

		render: function() {
			var self = this;
			this.$tpl.remove();

			_.each($(this.el).children(), function(item, index) {
				$(item).prepend('<button type="button" class="close" id="delete-' + self.key + '-' + index + '">×</button>');
			});

			$(this.el).parent().append('<a href="#" id="add-' + this.key + '-btn" role="button" class="another">Add another</a>');
			if (!this.length)
				this.addItem();
		},

		addItem: function() {
			this.length++;

			return this.$tpl.clone()
				.attr('id', this.key + "-" + this.length + "")
				.appendTo(this.el)
				.prepend('<button type="button" class="close" id="delete-' + this.key + '-' + this.length + '">×</button>')
				.show()
				.prop("id");
		},

		deleteItem: function(e) {
			$(e.target).parent().remove();
			this.length--;

			var index = +e.target.id.split(this.key + "-")[1];
			this.store.splice(index, 1);
		},

	});

	return List;

});

/**
 * jquery.Jcrop.js v0.9.10
 * jQuery Image Cropping Plugin - released under MIT License 
 * Author: Kelly Hallman <khallman@gmail.com>
 * http://github.com/tapmodo/Jcrop
 * Copyright (c) 2008-2012 Tapmodo Interactive LLC {{{
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 * }}}
 */

(function ($) {

  $.Jcrop = function (obj, opt) {
    var options = $.extend({}, $.Jcrop.defaults),
        docOffset, lastcurs, ie6mode = false;

    // Internal Methods {{{
    function px(n) {
      return Math.round(n) + 'px';
    }
    function cssClass(cl) {
      return options.baseClass + '-' + cl;
    }
    function supportsColorFade() {
      return $.fx.step.hasOwnProperty('backgroundColor');
    }
    function getPos(obj) //{{{
    {
      var pos = $(obj).offset();
      return [pos.left, pos.top];
    }
    //}}}
    function mouseAbs(e) //{{{
    {
      return [(e.pageX - docOffset[0]), (e.pageY - docOffset[1])];
    }
    //}}}
    function setOptions(opt) //{{{
    {
      if (typeof(opt) !== 'object') opt = {};
      options = $.extend(options, opt);

      $.each(['onChange','onSelect','onRelease','onDblClick'],function(i,e) {
        if (typeof(options[e]) !== 'function') options[e] = function () {};
      });
    }
    //}}}
    function startDragMode(mode, pos) //{{{
    {
      docOffset = getPos($img);
      Tracker.setCursor(mode === 'move' ? mode : mode + '-resize');

      if (mode === 'move') {
        return Tracker.activateHandlers(createMover(pos), doneSelect);
      }

      var fc = Coords.getFixed();
      var opp = oppLockCorner(mode);
      var opc = Coords.getCorner(oppLockCorner(opp));

      Coords.setPressed(Coords.getCorner(opp));
      Coords.setCurrent(opc);

      Tracker.activateHandlers(dragmodeHandler(mode, fc), doneSelect);
    }
    //}}}
    function dragmodeHandler(mode, f) //{{{
    {
      return function (pos) {
        if (!options.aspectRatio) {
          switch (mode) {
          case 'e':
            pos[1] = f.y2;
            break;
          case 'w':
            pos[1] = f.y2;
            break;
          case 'n':
            pos[0] = f.x2;
            break;
          case 's':
            pos[0] = f.x2;
            break;
          }
        } else {
          switch (mode) {
          case 'e':
            pos[1] = f.y + 1;
            break;
          case 'w':
            pos[1] = f.y + 1;
            break;
          case 'n':
            pos[0] = f.x + 1;
            break;
          case 's':
            pos[0] = f.x + 1;
            break;
          }
        }
        Coords.setCurrent(pos);
        Selection.update();
      };
    }
    //}}}
    function createMover(pos) //{{{
    {
      var lloc = pos;
      KeyManager.watchKeys();

      return function (pos) {
        Coords.moveOffset([pos[0] - lloc[0], pos[1] - lloc[1]]);
        lloc = pos;

        Selection.update();
      };
    }
    //}}}
    function oppLockCorner(ord) //{{{
    {
      switch (ord) {
      case 'n':
        return 'sw';
      case 's':
        return 'nw';
      case 'e':
        return 'nw';
      case 'w':
        return 'ne';
      case 'ne':
        return 'sw';
      case 'nw':
        return 'se';
      case 'se':
        return 'nw';
      case 'sw':
        return 'ne';
      }
    }
    //}}}
    function createDragger(ord) //{{{
    {
      return function (e) {
        if (options.disabled) {
          return false;
        }
        if ((ord === 'move') && !options.allowMove) {
          return false;
        }
        
        // Fix position of crop area when dragged the very first time.
        // Necessary when crop image is in a hidden element when page is loaded.
        docOffset = getPos($img);

        btndown = true;
        startDragMode(ord, mouseAbs(e));
        e.stopPropagation();
        e.preventDefault();
        return false;
      };
    }
    //}}}
    function presize($obj, w, h) //{{{
    {
      var nw = $obj.width(),
          nh = $obj.height();
      if ((nw > w) && w > 0) {
        nw = w;
        nh = (w / $obj.width()) * $obj.height();
      }
      if ((nh > h) && h > 0) {
        nh = h;
        nw = (h / $obj.height()) * $obj.width();
      }
      xscale = $obj.width() / nw;
      yscale = $obj.height() / nh;
      $obj.width(nw).height(nh);
    }
    //}}}
    function unscale(c) //{{{
    {
      return {
        x: c.x * xscale,
        y: c.y * yscale,
        x2: c.x2 * xscale,
        y2: c.y2 * yscale,
        w: c.w * xscale,
        h: c.h * yscale
      };
    }
    //}}}
    function doneSelect(pos) //{{{
    {
      var c = Coords.getFixed();
      if ((c.w > options.minSelect[0]) && (c.h > options.minSelect[1])) {
        Selection.enableHandles();
        Selection.done();
      } else {
        Selection.release();
      }
      Tracker.setCursor(options.allowSelect ? 'crosshair' : 'default');
    }
    //}}}
    function newSelection(e) //{{{
    {
      if (options.disabled) {
        return false;
      }
      if (!options.allowSelect) {
        return false;
      }
      btndown = true;
      docOffset = getPos($img);
      Selection.disableHandles();
      Tracker.setCursor('crosshair');
      var pos = mouseAbs(e);
      Coords.setPressed(pos);
      Selection.update();
      Tracker.activateHandlers(selectDrag, doneSelect);
      KeyManager.watchKeys();

      e.stopPropagation();
      e.preventDefault();
      return false;
    }
    //}}}
    function selectDrag(pos) //{{{
    {
      Coords.setCurrent(pos);
      Selection.update();
    }
    //}}}
    function newTracker() //{{{
    {
      var trk = $('<div></div>').addClass(cssClass('tracker'));
      if ($.browser.msie) {
        trk.css({
          opacity: 0,
          backgroundColor: 'white'
        });
      }
      return trk;
    }
    //}}}

    // }}}
    // Initialization {{{
    // Sanitize some options {{{
    if ($.browser.msie && ($.browser.version.split('.')[0] === '6')) {
      ie6mode = true;
    }
    if (typeof(obj) !== 'object') {
      obj = $(obj)[0];
    }
    if (typeof(opt) !== 'object') {
      opt = {};
    }
    // }}}
    setOptions(opt);
    // Initialize some jQuery objects {{{
    // The values are SET on the image(s) for the interface
    // If the original image has any of these set, they will be reset
    // However, if you destroy() the Jcrop instance the original image's
    // character in the DOM will be as you left it.
    var img_css = {
      border: 'none',
      visibility: 'visible',
      margin: 0,
      padding: 0,
      position: 'absolute',
      top: 0,
      left: 0
    };

    var $origimg = $(obj),
      img_mode = true;

    if (obj.tagName == 'IMG') {
      // Fix size of crop image.
      // Necessary when crop image is within a hidden element when page is loaded.
      if ($origimg[0].width != 0 && $origimg[0].height != 0) {
        // Obtain dimensions from contained img element.
        $origimg.width($origimg[0].width);
        $origimg.height($origimg[0].height);
      } else {
        // Obtain dimensions from temporary image in case the original is not loaded yet (e.g. IE 7.0). 
        var tempImage = new Image();
        tempImage.src = $origimg[0].src;
        $origimg.width(tempImage.width);
        $origimg.height(tempImage.height);
      } 

      var $img = $origimg.clone().removeAttr('id').css(img_css).show();

      $img.width($origimg.width());
      $img.height($origimg.height());
      $origimg.after($img).hide();

    } else {
      $img = $origimg.css(img_css).show();
      img_mode = false;
      if (options.shade === null) { options.shade = true; }
    }

    presize($img, options.boxWidth, options.boxHeight);

    var boundx = $img.width(),
        boundy = $img.height(),
        
        
        $div = $('<div />').width(boundx).height(boundy).addClass(cssClass('holder')).css({
        position: 'relative',
        backgroundColor: options.bgColor
      }).insertAfter($origimg).append($img);

    if (options.addClass) {
      $div.addClass(options.addClass);
    }

    var $img2 = $('<div />'),

        $img_holder = $('<div />') 
        .width('100%').height('100%').css({
          zIndex: 310,
          position: 'absolute',
          overflow: 'hidden'
        }),

        $hdl_holder = $('<div />') 
        .width('100%').height('100%').css('zIndex', 320), 

        $sel = $('<div />') 
        .css({
          position: 'absolute',
          zIndex: 600
        }).dblclick(function(){
          var c = Coords.getFixed();
          options.onDblClick.call(api,c);
        }).insertBefore($img).append($img_holder, $hdl_holder); 

    if (img_mode) {

      $img2 = $('<img />')
          .attr('src', $img.attr('src')).css(img_css).width(boundx).height(boundy),

      $img_holder.append($img2);

    }

    if (ie6mode) {
      $sel.css({
        overflowY: 'hidden'
      });
    }

    var bound = options.boundary;
    var $trk = newTracker().width(boundx + (bound * 2)).height(boundy + (bound * 2)).css({
      position: 'absolute',
      top: px(-bound),
      left: px(-bound),
      zIndex: 290
    }).mousedown(newSelection);

    /* }}} */
    // Set more variables {{{
    var bgcolor = options.bgColor,
        bgopacity = options.bgOpacity,
        xlimit, ylimit, xmin, ymin, xscale, yscale, enabled = true,
        btndown, animating, shift_down;

    docOffset = getPos($img);
    // }}}
    // }}}
    // Internal Modules {{{
    // Touch Module {{{ 
    var Touch = (function () {
      // Touch support detection function adapted (under MIT License)
      // from code by Jeffrey Sambells - http://github.com/iamamused/
      function hasTouchSupport() {
        var support = {},
            events = ['touchstart', 'touchmove', 'touchend'],
            el = document.createElement('div'), i;

        try {
          for(i=0; i<events.length; i++) {
            var eventName = events[i];
            eventName = 'on' + eventName;
            var isSupported = (eventName in el);
            if (!isSupported) {
              el.setAttribute(eventName, 'return;');
              isSupported = typeof el[eventName] == 'function';
            }
            support[events[i]] = isSupported;
          }
          return support.touchstart && support.touchend && support.touchmove;
        }
        catch(err) {
          return false;
        }
      }

      function detectSupport() {
        if ((options.touchSupport === true) || (options.touchSupport === false)) return options.touchSupport;
          else return hasTouchSupport();
      }
      return {
        createDragger: function (ord) {
          return function (e) {
            e.pageX = e.originalEvent.changedTouches[0].pageX;
            e.pageY = e.originalEvent.changedTouches[0].pageY;
            if (options.disabled) {
              return false;
            }
            if ((ord === 'move') && !options.allowMove) {
              return false;
            }
            btndown = true;
            startDragMode(ord, mouseAbs(e));
            e.stopPropagation();
            e.preventDefault();
            return false;
          };
        },
        newSelection: function (e) {
          e.pageX = e.originalEvent.changedTouches[0].pageX;
          e.pageY = e.originalEvent.changedTouches[0].pageY;
          return newSelection(e);
        },
        isSupported: hasTouchSupport,
        support: detectSupport()
      };
    }());
    // }}}
    // Coords Module {{{
    var Coords = (function () {
      var x1 = 0,
          y1 = 0,
          x2 = 0,
          y2 = 0,
          ox, oy;

      function setPressed(pos) //{{{
      {
        pos = rebound(pos);
        x2 = x1 = pos[0];
        y2 = y1 = pos[1];
      }
      //}}}
      function setCurrent(pos) //{{{
      {
        pos = rebound(pos);
        ox = pos[0] - x2;
        oy = pos[1] - y2;
        x2 = pos[0];
        y2 = pos[1];
      }
      //}}}
      function getOffset() //{{{
      {
        return [ox, oy];
      }
      //}}}
      function moveOffset(offset) //{{{
      {
        var ox = offset[0],
            oy = offset[1];

        if (0 > x1 + ox) {
          ox -= ox + x1;
        }
        if (0 > y1 + oy) {
          oy -= oy + y1;
        }

        if (boundy < y2 + oy) {
          oy += boundy - (y2 + oy);
        }
        if (boundx < x2 + ox) {
          ox += boundx - (x2 + ox);
        }

        x1 += ox;
        x2 += ox;
        y1 += oy;
        y2 += oy;
      }
      //}}}
      function getCorner(ord) //{{{
      {
        var c = getFixed();
        switch (ord) {
        case 'ne':
          return [c.x2, c.y];
        case 'nw':
          return [c.x, c.y];
        case 'se':
          return [c.x2, c.y2];
        case 'sw':
          return [c.x, c.y2];
        }
      }
      //}}}
      function getFixed() //{{{
      {
        if (!options.aspectRatio) {
          return getRect();
        }
        // This function could use some optimization I think...
        var aspect = options.aspectRatio,
            min_x = options.minSize[0] / xscale,
            
            
            //min_y = options.minSize[1]/yscale,
            max_x = options.maxSize[0] / xscale,
            max_y = options.maxSize[1] / yscale,
            rw = x2 - x1,
            rh = y2 - y1,
            rwa = Math.abs(rw),
            rha = Math.abs(rh),
            real_ratio = rwa / rha,
            xx, yy, w, h;

        if (max_x === 0) {
          max_x = boundx * 10;
        }
        if (max_y === 0) {
          max_y = boundy * 10;
        }
        if (real_ratio < aspect) {
          yy = y2;
          w = rha * aspect;
          xx = rw < 0 ? x1 - w : w + x1;

          if (xx < 0) {
            xx = 0;
            h = Math.abs((xx - x1) / aspect);
            yy = rh < 0 ? y1 - h : h + y1;
          } else if (xx > boundx) {
            xx = boundx;
            h = Math.abs((xx - x1) / aspect);
            yy = rh < 0 ? y1 - h : h + y1;
          }
        } else {
          xx = x2;
          h = rwa / aspect;
          yy = rh < 0 ? y1 - h : y1 + h;
          if (yy < 0) {
            yy = 0;
            w = Math.abs((yy - y1) * aspect);
            xx = rw < 0 ? x1 - w : w + x1;
          } else if (yy > boundy) {
            yy = boundy;
            w = Math.abs(yy - y1) * aspect;
            xx = rw < 0 ? x1 - w : w + x1;
          }
        }

        // Magic %-)
        if (xx > x1) { // right side
          if (xx - x1 < min_x) {
            xx = x1 + min_x;
          } else if (xx - x1 > max_x) {
            xx = x1 + max_x;
          }
          if (yy > y1) {
            yy = y1 + (xx - x1) / aspect;
          } else {
            yy = y1 - (xx - x1) / aspect;
          }
        } else if (xx < x1) { // left side
          if (x1 - xx < min_x) {
            xx = x1 - min_x;
          } else if (x1 - xx > max_x) {
            xx = x1 - max_x;
          }
          if (yy > y1) {
            yy = y1 + (x1 - xx) / aspect;
          } else {
            yy = y1 - (x1 - xx) / aspect;
          }
        }

        if (xx < 0) {
          x1 -= xx;
          xx = 0;
        } else if (xx > boundx) {
          x1 -= xx - boundx;
          xx = boundx;
        }

        if (yy < 0) {
          y1 -= yy;
          yy = 0;
        } else if (yy > boundy) {
          y1 -= yy - boundy;
          yy = boundy;
        }

        return makeObj(flipCoords(x1, y1, xx, yy));
      }
      //}}}
      function rebound(p) //{{{
      {
        if (p[0] < 0) {
          p[0] = 0;
        }
        if (p[1] < 0) {
          p[1] = 0;
        }

        if (p[0] > boundx) {
          p[0] = boundx;
        }
        if (p[1] > boundy) {
          p[1] = boundy;
        }

        return [p[0], p[1]];
      }
      //}}}
      function flipCoords(x1, y1, x2, y2) //{{{
      {
        var xa = x1,
            xb = x2,
            ya = y1,
            yb = y2;
        if (x2 < x1) {
          xa = x2;
          xb = x1;
        }
        if (y2 < y1) {
          ya = y2;
          yb = y1;
        }
        return [xa, ya, xb, yb];
      }
      //}}}
      function getRect() //{{{
      {
        var xsize = x2 - x1,
            ysize = y2 - y1,
            delta;

        if (xlimit && (Math.abs(xsize) > xlimit)) {
          x2 = (xsize > 0) ? (x1 + xlimit) : (x1 - xlimit);
        }
        if (ylimit && (Math.abs(ysize) > ylimit)) {
          y2 = (ysize > 0) ? (y1 + ylimit) : (y1 - ylimit);
        }

        if (ymin / yscale && (Math.abs(ysize) < ymin / yscale)) {
          y2 = (ysize > 0) ? (y1 + ymin / yscale) : (y1 - ymin / yscale);
        }
        if (xmin / xscale && (Math.abs(xsize) < xmin / xscale)) {
          x2 = (xsize > 0) ? (x1 + xmin / xscale) : (x1 - xmin / xscale);
        }

        if (x1 < 0) {
          x2 -= x1;
          x1 -= x1;
        }
        if (y1 < 0) {
          y2 -= y1;
          y1 -= y1;
        }
        if (x2 < 0) {
          x1 -= x2;
          x2 -= x2;
        }
        if (y2 < 0) {
          y1 -= y2;
          y2 -= y2;
        }
        if (x2 > boundx) {
          delta = x2 - boundx;
          x1 -= delta;
          x2 -= delta;
        }
        if (y2 > boundy) {
          delta = y2 - boundy;
          y1 -= delta;
          y2 -= delta;
        }
        if (x1 > boundx) {
          delta = x1 - boundy;
          y2 -= delta;
          y1 -= delta;
        }
        if (y1 > boundy) {
          delta = y1 - boundy;
          y2 -= delta;
          y1 -= delta;
        }

        return makeObj(flipCoords(x1, y1, x2, y2));
      }
      //}}}
      function makeObj(a) //{{{
      {
        return {
          x: a[0],
          y: a[1],
          x2: a[2],
          y2: a[3],
          w: a[2] - a[0],
          h: a[3] - a[1]
        };
      }
      //}}}

      return {
        flipCoords: flipCoords,
        setPressed: setPressed,
        setCurrent: setCurrent,
        getOffset: getOffset,
        moveOffset: moveOffset,
        getCorner: getCorner,
        getFixed: getFixed
      };
    }());

    //}}}
    // Shade Module {{{
    var Shade = (function() {
      var enabled = false,
          holder = $('<div />').css({
            position: 'absolute',
            zIndex: 240,
            opacity: 0
          }),
          shades = {
            top: createShade(),
            left: createShade().height(boundy),
            right: createShade().height(boundy),
            bottom: createShade()
          };

      function resizeShades(w,h) {
        shades.left.css({ height: px(h) });
        shades.right.css({ height: px(h) });
      }
      function updateAuto()
      {
        return updateShade(Coords.getFixed());
      }
      function updateShade(c)
      {
        shades.top.css({
          left: px(c.x),
          width: px(c.w),
          height: px(c.y)
        });
        shades.bottom.css({
          top: px(c.y2),
          left: px(c.x),
          width: px(c.w),
          height: px(boundy-c.y2)
        });
        shades.right.css({
          left: px(c.x2),
          width: px(boundx-c.x2)
        });
        shades.left.css({
          width: px(c.x)
        });
      }
      function createShade() {
        return $('<div />').css({
          position: 'absolute',
          backgroundColor: options.shadeColor||options.bgColor
        }).appendTo(holder);
      }
      function enableShade() {
        if (!enabled) {
          enabled = true;
          holder.insertBefore($img);
          updateAuto();
          Selection.setBgOpacity(1,0,1);
          $img2.hide();

          setBgColor(options.shadeColor||options.bgColor,1);
          if (Selection.isAwake())
          {
            setOpacity(options.bgOpacity,1);
          }
            else setOpacity(1,1);
        }
      }
      function setBgColor(color,now) {
        colorChangeMacro(getShades(),color,now);
      }
      function disableShade() {
        if (enabled) {
          holder.remove();
          $img2.show();
          enabled = false;
          if (Selection.isAwake()) {
            Selection.setBgOpacity(options.bgOpacity,1,1);
          } else {
            Selection.setBgOpacity(1,1,1);
            Selection.disableHandles();
          }
          colorChangeMacro($div,0,1);
        }
      }
      function setOpacity(opacity,now) {
        if (enabled) {
          if (options.bgFade && !now) {
            holder.animate({
              opacity: 1-opacity
            },{
              queue: false,
              duration: options.fadeTime
            });
          }
          else holder.css({opacity:1-opacity});
        }
      }
      function refreshAll() {
        options.shade ? enableShade() : disableShade();
        if (Selection.isAwake()) setOpacity(options.bgOpacity);
      }
      function getShades() {
        return holder.children();
      }

      return {
        update: updateAuto,
        updateRaw: updateShade,
        getShades: getShades,
        setBgColor: setBgColor,
        enable: enableShade,
        disable: disableShade,
        resize: resizeShades,
        refresh: refreshAll,
        opacity: setOpacity
      };
    }());
    // }}}
    // Selection Module {{{
    var Selection = (function () {
      var awake,
          hdep = 370,
          borders = {},
          handle = {},
          dragbar = {},
          seehandles = false;

      // Private Methods
      function insertBorder(type) //{{{
      {
        var jq = $('<div />').css({
          position: 'absolute',
          opacity: options.borderOpacity
        }).addClass(cssClass(type));
        $img_holder.append(jq);
        return jq;
      }
      //}}}
      function dragDiv(ord, zi) //{{{
      {
        var jq = $('<div />').mousedown(createDragger(ord)).css({
          cursor: ord + '-resize',
          position: 'absolute',
          zIndex: zi
        }).addClass('ord-'+ord);

        if (Touch.support) {
          jq.bind('touchstart.jcrop', Touch.createDragger(ord));
        }

        $hdl_holder.append(jq);
        return jq;
      }
      //}}}
      function insertHandle(ord) //{{{
      {
        var hs = options.handleSize;
        return dragDiv(ord, hdep++).css({
          opacity: options.handleOpacity
        }).width(hs).height(hs).addClass(cssClass('handle'));
      }
      //}}}
      function insertDragbar(ord) //{{{
      {
        return dragDiv(ord, hdep++).addClass('jcrop-dragbar');
      }
      //}}}
      function createDragbars(li) //{{{
      {
        var i;
        for (i = 0; i < li.length; i++) {
          dragbar[li[i]] = insertDragbar(li[i]);
        }
      }
      //}}}
      function createBorders(li) //{{{
      {
        var cl,i;
        for (i = 0; i < li.length; i++) {
          switch(li[i]){
            case'n': cl='hline'; break;
            case's': cl='hline bottom'; break;
            case'e': cl='vline right'; break;
            case'w': cl='vline'; break;
          }
          borders[li[i]] = insertBorder(cl);
        }
      }
      //}}}
      function createHandles(li) //{{{
      {
        var i;
        for (i = 0; i < li.length; i++) {
          handle[li[i]] = insertHandle(li[i]);
        }
      }
      //}}}
      function moveto(x, y) //{{{
      {
        if (!options.shade) {
          $img2.css({
            top: px(-y),
            left: px(-x)
          });
        }
        $sel.css({
          top: px(y),
          left: px(x)
        });
      }
      //}}}
      function resize(w, h) //{{{
      {
        $sel.width(Math.round(w)).height(Math.round(h));
      }
      //}}}
      function refresh() //{{{
      {
        var c = Coords.getFixed();

        Coords.setPressed([c.x, c.y]);
        Coords.setCurrent([c.x2, c.y2]);

        updateVisible();
      }
      //}}}

      // Internal Methods
      function updateVisible(select) //{{{
      {
        if (awake) {
          return update(select);
        }
      }
      //}}}
      function update(select) //{{{
      {
        var c = Coords.getFixed();

        resize(c.w, c.h);
        moveto(c.x, c.y);
        if (options.shade) Shade.updateRaw(c);

        awake || show();

        if (select) {
          options.onSelect.call(api, unscale(c));
        } else {
          options.onChange.call(api, unscale(c));
        }
      }
      //}}}
      function setBgOpacity(opacity,force,now) //{{{
      {
        if (!awake && !force) return;
        if (options.bgFade && !now) {
          $img.animate({
            opacity: opacity
          },{
            queue: false,
            duration: options.fadeTime
          });
        } else {
          $img.css('opacity', opacity);
        }
      }
      //}}}
      function show() //{{{
      {
        $sel.show();

        if (options.shade) Shade.opacity(bgopacity);
          else setBgOpacity(bgopacity,true);

        awake = true;
      }
      //}}}
      function release() //{{{
      {
        disableHandles();
        $sel.hide();

        if (options.shade) Shade.opacity(1);
          else setBgOpacity(1);

        awake = false;
        options.onRelease.call(api);
      }
      //}}}
      function showHandles() //{{{
      {
        if (seehandles) {
          $hdl_holder.show();
        }
      }
      //}}}
      function enableHandles() //{{{
      {
        seehandles = true;
        if (options.allowResize) {
          $hdl_holder.show();
          return true;
        }
      }
      //}}}
      function disableHandles() //{{{
      {
        seehandles = false;
        $hdl_holder.hide();
      } 
      //}}}
      function animMode(v) //{{{
      {
        if (v) {
          animating = true;
          disableHandles();
        } else {
          animating = false;
          enableHandles();
        }
      } 
      //}}}
      function done() //{{{
      {
        animMode(false);
        refresh();
      } 
      //}}}
      // Insert draggable elements {{{
      // Insert border divs for outline

      if (options.dragEdges && $.isArray(options.createDragbars))
        createDragbars(options.createDragbars);

      if ($.isArray(options.createHandles))
        createHandles(options.createHandles);

      if (options.drawBorders && $.isArray(options.createBorders))
        createBorders(options.createBorders);

      //}}}

      // This is a hack for iOS5 to support drag/move touch functionality
      $(document).bind('touchstart.jcrop-ios',function(e) {
        if ($(e.currentTarget).hasClass('jcrop-tracker')) e.stopPropagation();
      });

      var $track = newTracker().mousedown(createDragger('move')).css({
        cursor: 'move',
        position: 'absolute',
        zIndex: 360
      });

      if (Touch.support) {
        $track.bind('touchstart.jcrop', Touch.createDragger('move'));
      }

      $img_holder.append($track);
      disableHandles();

      return {
        updateVisible: updateVisible,
        update: update,
        release: release,
        refresh: refresh,
        isAwake: function () {
          return awake;
        },
        setCursor: function (cursor) {
          $track.css('cursor', cursor);
        },
        enableHandles: enableHandles,
        enableOnly: function () {
          seehandles = true;
        },
        showHandles: showHandles,
        disableHandles: disableHandles,
        animMode: animMode,
        setBgOpacity: setBgOpacity,
        done: done
      };
    }());
    
    //}}}
    // Tracker Module {{{
    var Tracker = (function () {
      var onMove = function () {},
          onDone = function () {},
          trackDoc = options.trackDocument;

      function toFront() //{{{
      {
        $trk.css({
          zIndex: 450
        });
        if (Touch.support) {
          $(document)
            .bind('touchmove.jcrop', trackTouchMove)
            .bind('touchend.jcrop', trackTouchEnd);
        }
        if (trackDoc) {
          $(document)
            .bind('mousemove.jcrop',trackMove)
            .bind('mouseup.jcrop',trackUp);
        }
      } 
      //}}}
      function toBack() //{{{
      {
        $trk.css({
          zIndex: 290
        });
        $(document).unbind('.jcrop');
      } 
      //}}}
      function trackMove(e) //{{{
      {
        onMove(mouseAbs(e));
        return false;
      } 
      //}}}
      function trackUp(e) //{{{
      {
        e.preventDefault();
        e.stopPropagation();

        if (btndown) {
          btndown = false;

          onDone(mouseAbs(e));

          if (Selection.isAwake()) {
            options.onSelect.call(api, unscale(Coords.getFixed()));
          }

          toBack();
          onMove = function () {};
          onDone = function () {};
        }

        return false;
      }
      //}}}
      function activateHandlers(move, done) //{{{
      {
        btndown = true;
        onMove = move;
        onDone = done;
        toFront();
        return false;
      }
      //}}}
      function trackTouchMove(e) //{{{
      {
        e.pageX = e.originalEvent.changedTouches[0].pageX;
        e.pageY = e.originalEvent.changedTouches[0].pageY;
        return trackMove(e);
      }
      //}}}
      function trackTouchEnd(e) //{{{
      {
        e.pageX = e.originalEvent.changedTouches[0].pageX;
        e.pageY = e.originalEvent.changedTouches[0].pageY;
        return trackUp(e);
      }
      //}}}
      function setCursor(t) //{{{
      {
        $trk.css('cursor', t);
      }
      //}}}

      if (!trackDoc) {
        $trk.mousemove(trackMove).mouseup(trackUp).mouseout(trackUp);
      }

      $img.before($trk);
      return {
        activateHandlers: activateHandlers,
        setCursor: setCursor
      };
    }());
    //}}}
    // KeyManager Module {{{
    var KeyManager = (function () {
      var $keymgr = $('<input type="radio" />').css({
        position: 'fixed',
        left: '-120px',
        width: '12px'
      }).addClass('jcrop-keymgr'),

        $keywrap = $('<div />').css({
          position: 'absolute',
          overflow: 'hidden'
        }).append($keymgr);

      function watchKeys() //{{{
      {
        if (options.keySupport) {
          $keymgr.show();
          $keymgr.focus();
        }
      }
      //}}}
      function onBlur(e) //{{{
      {
        $keymgr.hide();
      }
      //}}}
      function doNudge(e, x, y) //{{{
      {
        if (options.allowMove) {
          Coords.moveOffset([x, y]);
          Selection.updateVisible(true);
        }
        e.preventDefault();
        e.stopPropagation();
      }
      //}}}
      function parseKey(e) //{{{
      {
        if (e.ctrlKey || e.metaKey) {
          return true;
        }
        shift_down = e.shiftKey ? true : false;
        var nudge = shift_down ? 10 : 1;

        switch (e.keyCode) {
        case 37:
          doNudge(e, -nudge, 0);
          break;
        case 39:
          doNudge(e, nudge, 0);
          break;
        case 38:
          doNudge(e, 0, -nudge);
          break;
        case 40:
          doNudge(e, 0, nudge);
          break;
        case 27:
          if (options.allowSelect) Selection.release();
          break;
        case 9:
          return true;
        }

        return false;
      }
      //}}}

      if (options.keySupport) {
        $keymgr.keydown(parseKey).blur(onBlur);
        if (ie6mode || !options.fixedSupport) {
          $keymgr.css({
            position: 'absolute',
            left: '-20px'
          });
          $keywrap.append($keymgr).insertBefore($img);
        } else {
          $keymgr.insertBefore($img);
        }
      }


      return {
        watchKeys: watchKeys
      };
    }());
    //}}}
    // }}}
    // API methods {{{
    function setClass(cname) //{{{
    {
      $div.removeClass().addClass(cssClass('holder')).addClass(cname);
    }
    //}}}
    function animateTo(a, callback) //{{{
    {
      var x1 = a[0] / xscale,
          y1 = a[1] / yscale,
          x2 = a[2] / xscale,
          y2 = a[3] / yscale;

      if (animating) {
        return;
      }

      var animto = Coords.flipCoords(x1, y1, x2, y2),
          c = Coords.getFixed(),
          initcr = [c.x, c.y, c.x2, c.y2],
          animat = initcr,
          interv = options.animationDelay,
          ix1 = animto[0] - initcr[0],
          iy1 = animto[1] - initcr[1],
          ix2 = animto[2] - initcr[2],
          iy2 = animto[3] - initcr[3],
          pcent = 0,
          velocity = options.swingSpeed;

      x1 = animat[0];
      y1 = animat[1];
      x2 = animat[2];
      y2 = animat[3];

      Selection.animMode(true);
      var anim_timer;

      function queueAnimator() {
        window.setTimeout(animator, interv);
      }
      var animator = (function () {
        return function () {
          pcent += (100 - pcent) / velocity;

          animat[0] = Math.round(x1 + ((pcent / 100) * ix1));
          animat[1] = Math.round(y1 + ((pcent / 100) * iy1));
          animat[2] = Math.round(x2 + ((pcent / 100) * ix2));
          animat[3] = Math.round(y2 + ((pcent / 100) * iy2));

          if (pcent >= 99.8) {
            pcent = 100;
          }
          if (pcent < 100) {
            setSelectRaw(animat);
            queueAnimator();
          } else {
            Selection.done();
            Selection.animMode(false);
            if (typeof(callback) === 'function') {
              callback.call(api);
            }
          }
        };
      }());
      queueAnimator();
    }
    //}}}
    function setSelect(rect) //{{{
    {
      setSelectRaw([rect[0] / xscale, rect[1] / yscale, rect[2] / xscale, rect[3] / yscale]);
      options.onSelect.call(api, unscale(Coords.getFixed()));
      Selection.enableHandles();
    }
    //}}}
    function setSelectRaw(l) //{{{
    {
      Coords.setPressed([l[0], l[1]]);
      Coords.setCurrent([l[2], l[3]]);
      Selection.update();
    }
    //}}}
    function tellSelect() //{{{
    {
      return unscale(Coords.getFixed());
    }
    //}}}
    function tellScaled() //{{{
    {
      return Coords.getFixed();
    }
    //}}}
    function setOptionsNew(opt) //{{{
    {
      setOptions(opt);
      interfaceUpdate();
    }
    //}}}
    function disableCrop() //{{{
    {
      options.disabled = true;
      Selection.disableHandles();
      Selection.setCursor('default');
      Tracker.setCursor('default');
    }
    //}}}
    function enableCrop() //{{{
    {
      options.disabled = false;
      interfaceUpdate();
    }
    //}}}
    function cancelCrop() //{{{
    {
      Selection.done();
      Tracker.activateHandlers(null, null);
    }
    //}}}
    function destroy() //{{{
    {
      $div.remove();
      $origimg.show();
      $(obj).removeData('Jcrop');
    }
    //}}}
    function setImage(src, callback) //{{{
    {
      Selection.release();
      disableCrop();
      var img = new Image();
      img.onload = function () {
        var iw = img.width;
        var ih = img.height;
        var bw = options.boxWidth;
        var bh = options.boxHeight;
        $img.width(iw).height(ih);
        $img.attr('src', src);
        $img2.attr('src', src);
        presize($img, bw, bh);
        boundx = $img.width();
        boundy = $img.height();
        $img2.width(boundx).height(boundy);
        $trk.width(boundx + (bound * 2)).height(boundy + (bound * 2));
        $div.width(boundx).height(boundy);
        Shade.resize(boundx,boundy);
        enableCrop();

        if (typeof(callback) === 'function') {
          callback.call(api);
        }
      };
      img.src = src;
    }
    //}}}
    function colorChangeMacro($obj,color,now) {
      var mycolor = color || options.bgColor;
      if (options.bgFade && supportsColorFade() && options.fadeTime && !now) {
        $obj.animate({
          backgroundColor: mycolor
        }, {
          queue: false,
          duration: options.fadeTime
        });
      } else {
        $obj.css('backgroundColor', mycolor);
      }
    }
    function interfaceUpdate(alt) //{{{
    // This method tweaks the interface based on options object.
    // Called when options are changed and at end of initialization.
    {
      if (options.allowResize) {
        if (alt) {
          Selection.enableOnly();
        } else {
          Selection.enableHandles();
        }
      } else {
        Selection.disableHandles();
      }

      Tracker.setCursor(options.allowSelect ? 'crosshair' : 'default');
      Selection.setCursor(options.allowMove ? 'move' : 'default');

      if (options.hasOwnProperty('trueSize')) {
        xscale = options.trueSize[0] / boundx;
        yscale = options.trueSize[1] / boundy;
      }

      if (options.hasOwnProperty('setSelect')) {
        setSelect(options.setSelect);
        Selection.done();
        delete(options.setSelect);
      }

      Shade.refresh();

      if (options.bgColor != bgcolor) {
        colorChangeMacro(
          options.shade? Shade.getShades(): $div,
          options.shade?
            (options.shadeColor || options.bgColor):
            options.bgColor
        );
        bgcolor = options.bgColor;
      }

      if (bgopacity != options.bgOpacity) {
        bgopacity = options.bgOpacity;
        if (options.shade) Shade.refresh();
          else Selection.setBgOpacity(bgopacity);
      }

      xlimit = options.maxSize[0] || 0;
      ylimit = options.maxSize[1] || 0;
      xmin = options.minSize[0] || 0;
      ymin = options.minSize[1] || 0;

      if (options.hasOwnProperty('outerImage')) {
        $img.attr('src', options.outerImage);
        delete(options.outerImage);
      }

      Selection.refresh();
    }
    //}}}
    //}}}

    if (Touch.support) $trk.bind('touchstart.jcrop', Touch.newSelection);

    $hdl_holder.hide();
    interfaceUpdate(true);

    var api = {
      setImage: setImage,
      animateTo: animateTo,
      setSelect: setSelect,
      setOptions: setOptionsNew,
      tellSelect: tellSelect,
      tellScaled: tellScaled,
      setClass: setClass,

      disable: disableCrop,
      enable: enableCrop,
      cancel: cancelCrop,
      release: Selection.release,
      destroy: destroy,

      focus: KeyManager.watchKeys,

      getBounds: function () {
        return [boundx * xscale, boundy * yscale];
      },
      getWidgetSize: function () {
        return [boundx, boundy];
      },
      getScaleFactor: function () {
        return [xscale, yscale];
      },
      getOptions: function() {
        // careful: internal values are returned
        return options;
      },

      ui: {
        holder: $div,
        selection: $sel
      }
    };

    if ($.browser.msie)
      $div.bind('selectstart', function () { return false; });

    $origimg.data('Jcrop', api);
    return api;
  };
  $.fn.Jcrop = function (options, callback) //{{{
  {
    var api;
    // Iterate over each object, attach Jcrop
    this.each(function () {
      // If we've already attached to this object
      if ($(this).data('Jcrop')) {
        // The API can be requested this way (undocumented)
        if (options === 'api') return $(this).data('Jcrop');
        // Otherwise, we just reset the options...
        else $(this).data('Jcrop').setOptions(options);
      }
      // If we haven't been attached, preload and attach
      else {
        if (this.tagName == 'IMG')
          $.Jcrop.Loader(this,function(){
            $(this).css({display:'block',visibility:'hidden'});
            api = $.Jcrop(this, options);
            if ($.isFunction(callback)) callback.call(api);
          });
        else {
          $(this).css({display:'block',visibility:'hidden'});
          api = $.Jcrop(this, options);
          if ($.isFunction(callback)) callback.call(api);
        }
      }
    });

    // Return "this" so the object is chainable (jQuery-style)
    return this;
  };
  //}}}
  // $.Jcrop.Loader - basic image loader {{{

  $.Jcrop.Loader = function(imgobj,success,error){
    var $img = $(imgobj), img = $img[0];

    function completeCheck(){
      if (img.complete) {
        $img.unbind('.jcloader');
        if ($.isFunction(success)) success.call(img);
      }
      else window.setTimeout(completeCheck,50);
    }

    $img
      .bind('load.jcloader',completeCheck)
      .bind('error.jcloader',function(e){
        $img.unbind('.jcloader');
        if ($.isFunction(error)) error.call(img);
      });

    if (img.complete && $.isFunction(success)){
      $img.unbind('.jcloader');
      success.call(img);
    }
  };

  //}}}
  // Global Defaults {{{
  $.Jcrop.defaults = {

    // Basic Settings
    allowSelect: true,
    allowMove: true,
    allowResize: true,

    trackDocument: true,

    // Styling Options
    baseClass: 'jcrop',
    addClass: null,
    bgColor: 'black',
    bgOpacity: 0.6,
    bgFade: false,
    borderOpacity: 0.4,
    handleOpacity: 0.5,
    handleSize: 7,

    aspectRatio: 0,
    keySupport: true,
    createHandles: ['n','s','e','w','nw','ne','se','sw'],
    createDragbars: ['n','s','e','w'],
    createBorders: ['n','s','e','w'],
    drawBorders: true,
    dragEdges: true,
    fixedSupport: true,
    touchSupport: null,

    shade: null,

    boxWidth: 0,
    boxHeight: 0,
    boundary: 2,
    fadeTime: 400,
    animationDelay: 20,
    swingSpeed: 3,

    minSelect: [0, 0],
    maxSize: [0, 0],
    minSize: [0, 0],

    // Callbacks / Event Handlers
    onChange: function () {},
    onSelect: function () {},
    onDblClick: function () {},
    onRelease: function () {}
  };

  // }}}
}(jQuery));

define("jquery.Jcrop", function(){});

//jshint camelcase:false
/*globals Blitline */

define('views/app/Avatar',['require','jquery.Jcrop','jquery','backbone','api2','utils','views/lib/alerts','views/lib/spinner'],function(require) {

	require("jquery.Jcrop");
	var $ = require('jquery');
	var Backbone = require('backbone');
	var api = require('api2');
	var utils = require('utils');
	var alerts = require("views/lib/alerts");
	var spinner = require("views/lib/spinner");


	var blitline = new Blitline();


	var AvatarView = Backbone.View.extend({

		el: "#basic-box",

		originalAvatarId: null,

		defaultMaxWidth: 600,

		events: {
			"click #upload-avatar": function(e) {
				e.preventDefault();
				this.$('#upload').trigger('click');
			},
			"click #submit-avatar": function(e) {
				e.preventDefault();
				this.submitAvatar();
			}
		},

		initialize: function() {
			_.bindAll(this, 'uploadFile', 'uploadComplete', 'resizeComplete');

			if (!window.File || !window.FileReader || !window.FileList || !window.Blob) return alert('The File APIs are not fully supported in this browser.');

			$('#upload').on('change', this.uploadFile);
		},

		uploadFile: function(event) {
			var files = event.target.files;
			//Maximum file size: 6Mb
			if (files[0].size > 6291456){
				alerts.error('Maximum file size allowed is 6 MB');
				return;
			}

			if (!files.length)
				return;

			spinner.show('avatar');
			utils.uploadAmazon(files[0], 'to-resize').then(this.uploadComplete);
		},

		uploadComplete: function(url) {
			var jobs = [{
				"application_id": "7XqmahVqL8tvhEIjzBm6-jg",
				"src": url,

				"functions": [{
					"name": "resize_to_fit",
					"params": {
						"width": this.defaultMaxWidth,
						"height": this.defaultMaxWidth
					},
					"save": {
						"image_identifier": "external_sample_1"
					}
				}]
			}];

			blitline.submit(jobs, {
				completed: this.resizeComplete
				//submitted : function(jobIds, images) {
				//	console.log("Job has been succesfully submitted to blitline for processing\r\n\r\nPlease wait a few moments for them to complete.");
				//}
			});
		},

		resizeComplete: function(images, error) {
			spinner.hide('avatar');
			var self = this;
			this.params = {x: 0, y: 0, w: 0, h: 0};

			function showCoords(coords) {
				var scale_x = self.size.width / $("#cropbox").width();
				var scale_y = self.size.height / $("#cropbox").height();
				self.params = {
					img: images[0].s3_url,
					x: Math.floor(coords.x * scale_x),
					y: Math.floor(coords.y * scale_y),
					w: Math.floor(coords.w * scale_x),
					h: Math.floor(coords.h * scale_y),
				};
			}

			function clearCoords() {
				$('#coords input').val('');
			}

			if (error)
				return console.error('Error processing image ' + error + ' Blitline dashboard can provide more info.');

			var img = new Image();
			img.onload = function() {
				if (this.width < 174){
					alerts.error('Could not process your request. Image width is too narrow');
					return;
				}

				if (this.height < 174){
					alerts.error('Could not process your request. Image height is too short');
					return;
				}

				self.size = {
					width: this.width,
					height: this.height
				};

				$('#crop-modal .modal-body img').attr('src', images[0].s3_url);
				$('#crop-modal .modal-body img').css({width: self.size.width, height: self.size.height});
				$('#crop-modal').width(650);

				$('#crop-modal').modal('show');
				$('#cropbox').Jcrop({
					onChange: showCoords,
					onSelect: showCoords,
					onRelease: clearCoords,
					aspectRatio: 1,
					setSelect: [50, 50, 224, 224],
					minSize: [174, 174],
				});

			};
			img.src = images[0].s3_url;
		},

		submitAvatar: function() {
			this.$("#submit-avatar").button('loading');

			api.post(api.getApiVersion() + "/cropped/", this.params)
				.then(function() {
				alerts.success('Keep calm, your profile picture will be updated soon');
				$('#crop-modal').modal('hide');
				$("#submit-avatar").button('reset');
			}, function(error) {
				debugger;
				alerts.defaultError(error);
			});
		},
	});

	return AvatarView;
});
//jshint camelcase:false, sub:true

define('views/app/MyProfile',['require','jquery','backbone','api2','utils','phrases','tmpl!templates/app/profile/form.basic.html','tmpl!templates/app/profile/form.about.html','tmpl!templates/app/profile/form.likes.html','tmpl!templates/app/profile/form.contact.html','tmpl!templates/app/profile/form.places.html','views/lib/alerts','views/app/list','views/app/Avatar'],function(require){

	var $ = require("jquery");
	var Backbone = require("backbone");
	var api = require("api2");
	var utils = require("utils");
	var phrases = require('phrases');

	var basicTpl = require('tmpl!templates/app/profile/form.basic.html');
	var aboutTpl = require('tmpl!templates/app/profile/form.about.html');
	var likesTpl = require('tmpl!templates/app/profile/form.likes.html');
	var contactTpl = require('tmpl!templates/app/profile/form.contact.html');
	var placesTpl = require('tmpl!templates/app/profile/form.places.html');

	var alerts = require('views/lib/alerts');
	var List = require('views/app/list');
	var AvatarView = require("views/app/Avatar");

	function extract(source, props) {
		var target = {};
		_.each(props, function(value, key) {
			target[value] = source[key];
		});
		return target;
	}


	var ProfileView = Backbone.View.extend({
		el: "#main",
		events:{
			"click a#add-language-btn": function(e){
				e.preventDefault();
				this.languagesList.addItem();
			},
			"click button[id^=delete-lang]": function(e){
				e.preventDefault();
				this.languagesList.deleteItem(e);
			},
			"click a#add-edu-btn": function(e){
				e.preventDefault();
				this.educationsList.addItem();
				this.initStudyTypeahead();
			},
			"click button[id^=delete-edu]": function(e){
				e.preventDefault();
				this.educationsList.deleteItem(e);
			},
			"click a#add-otherLocation-btn": function(e){
				e.preventDefault();

				var added = this.otherLocationsList.addItem();
				var newInput = this.$("#" + added).children("[name=otherLocations]")[0];
				var auto = new google.maps.places.Autocomplete(newInput, { types: ['(cities)'] });

				google.maps.event.addListener(auto, 'place_changed', this.updateMap(auto, "other", added));
				$(newInput).keypress(function(event) { if ( event.which === 13 ) event.preventDefault(); });
			},
			"click button[id^=delete-otherLocation]": function(e){
				e.preventDefault();
				var id = e.target.id.split("delete-")[1];
				this.otherLocationsList.deleteItem(e);
				this.parentCtrl.map.deleteMarker(id);
			},
			"click a#add-social-btn": function(e){
				e.preventDefault();
				this.socialsList.addItem();
			},
			"click button[id^=delete-social]": function(e){
				e.preventDefault();
				this.socialsList.deleteItem(e);
			},
			"click a#add-im-btn": function(e){
				e.preventDefault();
				this.imList.addItem();
			},
			"click button[id^=delete-im]": function(e){
				e.preventDefault();
				this.imList.deleteItem(e);
			},
			"keypress #hometown": function(e) {
				if (e.which === 13) e.preventDefault();
			},
			"keypress #currentCity": function(e) {
				if (e.which === 13) e.preventDefault();
			},
			"keypress [name=otherLocations]": function(e) {
				if (e.which === 13) e.preventDefault();
			},

			"submit form#basic-info-form": "submitProfile",
			"submit form#about-me-form": "submitProfile",
			"submit form#likes-form": "submitProfile",
			"submit form#contact-form": "submitProfile",
			"submit form#places-form": "submitProfile",

			"click .edit-box-btn" : "openForm",
			"click button.cancel-edition-btn": "closeBox",
		},

		initialize: function(model, parent) {
			this.model = model;
			this.parentCtrl = parent;
		},

		closeBox: function(evt){
			evt.preventDefault();
			var boxId = $(evt.target).parent().attr("data-rel") || $(evt.target).attr("data-rel");
			this.parentCtrl.refreshBox(boxId);
		},

		reloadBox: function(evt){
			evt.preventDefault();
			var boxId = $(evt.target).parent().attr("data-rel") || $(evt.target).attr("data-rel");
			this.parentCtrl.renderBox(boxId);
		},

		openForm: function(evt){

			var boxId = $(evt.target).parent().attr("data-rel") || $(evt.target).attr("data-rel");
			var box = document.getElementById(boxId);
			var tpl = null;
			var initMethod = null;

			$(box).children().remove();

			switch (boxId){
				case "basic-box":
					tpl = basicTpl(this.model.toJSON(), {months: phrases.months});
					initMethod = this.editBasicBox.bind(this);
					break;
				case "about-box":
					tpl = aboutTpl(this.model.toJSON());
					initMethod = this.editAboutBox.bind(this);
					break;
				case "likes-box":
					tpl = likesTpl(this.model.toJSON());
					break;
				case "contact-box":
					tpl = contactTpl(this.model.toJSON());
					initMethod = this.editContactBox.bind(this);
					break;
				case "places-box":
					tpl = placesTpl(this.model.toJSON());
					initMethod = this.editPlacesBox.bind(this);
					break;
			}

			$(box).html(tpl);
			if (initMethod)
				initMethod();

		},

		editBasicBox: function(){
			this.languagesList = new List({
				el: "#languages-list",
				store: this.model.get("languages"),
				key: "language",
				tpl: "#language-tpl",
			});

			this.avatar = new AvatarView();
		},

		editAboutBox: function(){
			this.educationsList = new List({
				el: "#education-list",
				store: this.model.get("education"),
				key: "edu",
				tpl: "#education-tpl",
			});

			this.initStudyTypeahead();
		},

		editContactBox: function(){
			this.socialsList = new List({
				el: "#socialNetwork-list",
				store: this.model.get("socialNetworks"),
				key: "social",
				tpl: "#socialNetwork-tpl",
			});

			this.imList = new List({
				el: "#instantMessage-list",
				store: this.model.get("instantMessages"),
				key: "im",
				tpl: "#im-tpl",
			});
		},

		editPlacesBox: function(){
			this.otherLocationsList = new List({
				el: "#otherLocations-list",
				store: this.model.get("otherLocations"),
				key: "otherLocation",
				tpl: "#otherLocation-tpl",
			});

			this.parentCtrl.map.render();

			this.initLocationTypeahead();
		},

		initStudyTypeahead: function(){

			$.ajaxSetup({
				beforeSend: function(xhr){
					xhr.setRequestHeader("X-Auth-Token", api.getAuthToken());
				},
			});

			$('.autocompleteStudy').typeahead({
				ajax: {
					url: api.getServerUrl() + "/api/v1/universities",
					triggerLength: 1,
					method: "get",
					preDispatch: function (query) {
						return {
								name: query,
						};
					},
					/*onselect: function(){
						console.log(arguments);
					},*/
					preProcess: function (data) {
						if (!!!data.status)
							return false;
						return data.data.map(function(uni){ return uni.name; });
					}
				}
			});
		},

		initLocationTypeahead: function(){

			var hometown = new google.maps.places.Autocomplete(document.getElementById("hometownCity"), { types: ['(cities)'] });
			google.maps.event.addListener(hometown, 'place_changed', this.updateMap(hometown, "hometown", "hometown"));

			var current = new google.maps.places.Autocomplete(document.getElementById("currentCity"), { types: ['(cities)'] });
			google.maps.event.addListener(current, 'place_changed', this.updateMap(current, "current", "current"));

			var lastId = this.$("#otherLocations-list").children().last().prop("id");
			var last = new google.maps.places.Autocomplete($("#" + lastId).children("[name=otherLocations]")[0], { types: ['(cities)'] });
			google.maps.event.addListener(last, 'place_changed', this.updateMap(last, "other", lastId));

		},

		updateMap: function(auto, field, id) {
			var sc = this.parentCtrl;
			return function() {
				var place = auto.getPlace();
				if (place.geometry){
					var cc = utils.getCityAndCountry(place.address_components);

					sc.map.setCenter(place.geometry.location);
					sc.map.addMarker({
						id: id,
						location: place.geometry.location,
						title: cc.city + ", " + cc.country,
						icon: 'img/places-' + field + '-marker.png'
					});

					sc.$("#" + id + " input[name^=" + field + "-city]").val(cc.city);
					sc.$("#" + id + " input[name^=" + field + "-country]").val(cc.country);
					sc.$("#" + id + " input[name^=" + field + "-region]").val(cc.region);
					sc.$("#" + id + " input[name^=" + field + "-lat]").val(place.geometry.location.lat());
					sc.$("#" + id + " input[name^=" + field + "-lon]").val(place.geometry.location.lng());
				}
			};
		},

		submitProfile: function(e){
			e.preventDefault(e);
			var data = this.collectData(e.target.id);

			$(e.target)
				.parent()
				.parent()
				.find("#save-profile-btn")
				.button('loading');

			var self = this;
			this.model.save(data)
				.then(function(){
					alerts.success('Profile saved');
				})
				.fin(function(){
					self.$("#save-profile-btn").button('reset');
					self.reloadBox(e);
				});
		},

		collectData: function(formId) {
			var data = utils.serializeForm(formId);
			_.extend(data, utils.serializeForm('contact-form'));
			_.extend(data, utils.serializeForm('about-me-form'));
			_.extend(data, utils.serializeForm('likes-form'));

			if (data["languages"]){
				if (!(data["languages"] instanceof Array)) {
					data["languages"] = [data["languages"]];
					data["levels"] = [data["levels"]];
				}
				data["languages"] = data["languages"].map(function(item, index){
						return { name: item, level: data["levels"][index] };
				});
				delete data["levels"];
			}
			if (data["instantMessages"]){
				if (!(data["instantMessages"] instanceof Array)) {
					data["instantMessages"] = [data["instantMessages"]];
					data["imUsername"] = [data["imUsername"]];
				}
				data["instantMessages"] = data["instantMessages"].map(function(item, index){
						return { instantMessage: item, imUsername: data["imUsername"][index] };
				});
				delete data["imUsername"];
			}

			if (data["socialNetworks"]){
				if (!(data["socialNetworks"] instanceof Array)) {
					data["socialNetworks"] = [data["socialNetworks"]];
					data["snUsername"] = [data["snUsername"]];
				}
				data["socialNetworks"] = data["socialNetworks"].map(function(item, index){
						return { socialNetwork: item, snUsername: data["snUsername"][index] };
				});
				delete data["snUsername"];
			}

			if (data["education"]){
				if (!(data["education"] instanceof Array)) {
					data["education"] = [data["education"]];
					data["degree"] = [data["degree"]];
				}
				data["education"] = data["education"].map(function(item, index){
						return { institution: item, degree: data["degree"][index] };
				});
				delete data["degree"];
			}

			if (data["other-city"]){
				if (!(data["other-city"] instanceof Array)) {
					data["other-city"] = [data["other-city"]];
					data["other-region"] = [data["other-region"]];
					data["other-country"] = [data["other-country"]];
					data["other-lat"] = [data["other-lat"]];
					data["other-lon"] = [data["other-lon"]];
				}

				data["otherLocations"] = data["other-city"].map(function(item, index){
					return {
						name: item,
						country: data["other-country"][index],
						region:  data["other-region"][index],
						lat:  data["other-lat"][index],
						lon:  data["other-lon"][index]
					};
				});

				delete data["other-city"];
				delete data["other-country"];
				delete data["other-region"];
				delete data["other-lat"];
				delete data["other-lon"];
			} else data["otherLocations"] = [];

			var currentProps = {
				'current-city': 'name',
				'current-country': 'country',
				'current-region': 'region',
				'current-lat': 'lat',
				'current-lon': 'lon'
			};
			data.current = data.current ? extract(data, currentProps) : {};
			data = _.omit.apply(_, [data].concat(_.keys(currentProps)));

			var hometownProps = {
				'hometown-city': 'name',
				'hometown-country': 'country',
				'hometown-region': 'region',
				'hometown-lat': 'lat',
				'hometown-lon': 'lon'
			};
			data.hometown = data.hometown ? extract(data, hometownProps) : {};
			data = _.omit.apply(_, [data].concat(_.keys(hometownProps)));

			return data;
		},
	  });

	  return ProfileView;
	});

define('tmpl!templates/app/profile/form.wing.html',[ 'core/view' ], function(view) {return view('\t\t\t\t\t\n<form id="accomodation-form-{{id}}" data-rel="{{id}}">\n\t<div class="box-header">\n\t\t<i class="icon-house">Accommodation icon</i>\n\t\t<h2>Accommodation Wing</h2>\n\t</div>\n\t<div class="box-content wings-info">\n\t\t<div class="control-group lined">\n\t\t\t<label class="control-label" for="inputName">Wing name</label>\n\t\t\t<div class="controls">\n\t\t\t\t<input type="text" value="{{name}}" id="inputName" name="name" placeholder="Some name" class="size-extralarge required" maxlength="100">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="control-group lined">\n\t\t\t<label class="control-label" for="inputStatus">Wing status</label>\n\t\t\t<div class="controls">\n\t\t\t\t<select name="status" id="wingStatus" class="size-medium">\n\t\t\t\t\t<option value="Y" {{selected status \'Y\'}}>Yes</option>\n\t\t\t\t\t<option value="N" {{selected status \'N\'}}>No</option>\n\t\t\t\t\t<option value="M" {{selected status \'M\'}}>Maybe</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="control-group lined">\n\t\t\t<label class="control-label" for="inputSharingOnce">Are you sharing one time?</label>\n\t\t\t<div class="controls">\n\t\t\t\t<label class="checkbox">\n\t\t\t\t\t<input type="checkbox" name="sharingOnce" id="inputSharingOnce" {{checked sharingOnce true}}>\n\t\t\t\t</label>\n\t\t\t\t<span class="help-inline"></span>\n\t\t\t</div>\n\t\t</div>\n\t\t<div id="sharing-dates"class="control-group">\n\t\t\t<div class="controls">\n\t\t\t\t<input type="text" name="dateStart" class="input-sdate" placeholder="Start date" value="{{dateStart}}">\n\t\t\t\t<input type="text" name="dateEnd" class="input-edate" placeholder="End date" value="{{dateEnd}}">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="control-group blocked">\n\t\t\t<label class="control-label" for="inputNewEmail">Best days to host</label>\n\t\t\t<div class="controls">\n\t\t\t\t<select name="bestDays" id="inputBestDays" class="size-large">\n\t\t\t\t\t<option value="A" {{selected bestDays \'A\'}}>Any</option>\n\t\t\t\t\t<option value="F" {{selected bestDays \'F\'}}>From Monday to Friday</option>\n\t\t\t\t\t<option value="T" {{selected bestDays \'T\'}}>From Monday to Thursday</option>\n\t\t\t\t\t<option value="W" {{selected bestDays \'W\'}}>Weekend</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="control-group blocked">\n\t\t\t<label class="control-label" for="inputCapacity">Capacity</label>\n\t\t\t<div class="controls">\n\t\t\t\t<select name="capacity" class="size-small">\n\t\t\t\t\t<option value="1" {{selected capacity \'1\'}}>1</option>\n\t\t\t\t\t<option value="2" {{selected capacity \'2\'}}>2</option>\n\t\t\t\t\t<option value="3" {{selected capacity \'3\'}}>3</option>\n\t\t\t\t\t<option value="4" {{selected capacity \'4\'}}>4</option>\n\t\t\t\t\t<option value="5" {{selected capacity \'5\'}}>5</option>\n\t\t\t\t\t<option value="6" {{selected capacity \'6\'}}>6</option>\n\t\t\t\t\t<option value="7" {{selected capacity \'7\'}}>7</option>\n\t\t\t\t\t<option value="8" {{selected capacity \'8\'}}>8</option>\n\t\t\t\t\t<option value="9" {{selected capacity \'9\'}}>9</option>\n\t\t\t\t\t<option value="m" {{selected capacity \'m\'}}>+9</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t\t<!-- HELLO SERGI, there are changes :  interested in male female now is a select -->\n\n<!-- \t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t<label class="control-label" for="inputGender">Preferred gender</label>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<label class="checkbox inline">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="preferredMale" id="inlineCheckbox1"> Male\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox inline">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="preferredFemale" id="inlineCheckbox2"> Female\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<span class="help-inline"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div> -->\n\t\t\t\t\t\t\t<div class="control-group blocked no-margin">\n\t\t\t\t\t\t\t\t<label class="control-label" for="inputGender">Prefered gender</label>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<select name="preferredGender" class="size-medium">\n\t\t\t\t\t\t\t\t\t\t<option value="Male" {{selected preferredGender \'Male\'}}>Male</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Female" {{selected preferredGender \'Female\'}}>Female</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Both" {{selected preferredGender \'Both\'}}>Both</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group blocked">\n\t\t\t\t\t\t\t\t<label class="control-label" for="inputNewEmail">Sleeping arrangements</label>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<select name="whereSleepingType" id="whereSleepingType" class="size-large">\n\t\t\t\t\t\t\t\t\t\t<option value="C" {{selected whereSleepingType \'C\'}}>Common area</option>\n\t\t\t\t\t\t\t\t\t\t<option value="P" {{selected whereSleepingType \'P\'}}>Private area</option>\n\t\t\t\t\t\t\t\t\t\t<option value="S" {{selected whereSleepingType \'S\'}}>Shared private area</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group blocked">\n\t\t\t\t\t\t\t\t<label class="control-label" for="inputNewEmail">Smoking</label>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<select name="smoking" id="smoking" class="size-large">\n\t\t\t\t\t\t\t\t\t\t<option value="N" {{selected smoking \'N\'}}>No smoking allowed</option>\n\t\t\t\t\t\t\t\t\t\t<option value="S" {{selected smoking \'S\'}}>I smoke</option>\n\t\t\t\t\t\t\t\t\t\t<option value="D" {{selected smoking \'D\'}}>I don\'t smoke but guests can smoke here</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t<div class="controls check">\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="wheelchair" id="inlineCheckbox1" {{checked wheelchair true}}>Wheelchair accessible\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t<div class="controls check">\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="iHavePet" id="inlineCheckbox1" {{checked iHavePet true}}>I have pet\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t<div class="controls check">\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="petsAllowed" id="inlineCheckbox2" {{checked petsAllowed true}}>Guests pets allowed\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t<div class="controls check">\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="blankets" id="inputBlankets" {{checked blankeys true}}>I have blankets\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t<div class="controls check">\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="liveCenter" id="inputLiveCenter" {{checked liveCenter true}}>I live in the center\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t<label class="control-label">Transports</label>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="metro" id="checkboxMetro" {{checked metro true}}>Metro\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="bus" id="checkboxBus" {{checked bus true}}>Bus\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="taxi" id="checkboxtaxi" {{checked taxi true}}>Tram\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="train" id="checkboxTrain" {{checked train true}}>Train\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="car" id="checkboxCar" {{checked car true}}>Car\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="motorbike" id="checkboxMotorbike" {{checked motorbike true}}>Motorbike\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="bicycle" id="checkboxBicycle" {{checked bicycle true}}>Bicycle\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="boat" id="checkboxBoat" {{checked boat true}}>Boat\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="plane" id="checkboxPlane" {{checked plane true}}>Plane\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="other" id="checkboxOther" {{checked other true}}>Other\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<span class="help-inline"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t<label class="control-label">About your accomodation</label>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<textarea class="span4" name="about" id="inputAbout" placeholder="Texto de ayuda" maxlength="1000">{{about}}</textarea>\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div><!-- EOF box-content -->\n\t\t\t\t\t\t<div class="box-header">\n\t\t\t\t\t\t\t<i class="icon-contact">Contact icon</i>\n\t\t\t\t\t\t\t<h2>Listing location</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="guest-message">\n\t\t\t\t\t\t\t<h2>Shown only to Confirmed Guests</h2>\n\t\t\t\t\t\t\t<i class="icon-lock">Lock icon</i>\n\t\t\t\t\t\t\t<p>To protect your privacy, we hide your address, phone number, and contact information from users that have not confirmed a reservation with you</p>\n\t\t\t\t\t\t</div><!-- EOF guest-message -->\n\t\t\t\t\t\t<div class="listing-location">\n\t\t\t\t\t\t\t<div class="control-group blocked">\n\t\t\t\t\t\t\t\t<label class="control-label">Street address</label>\n\t\t\t\t\t\t\t\t<i class="icon-lock">icon lock</i>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<input type="text" name="address" id="inputAddress" class="required" value="{{address}}" maxlength="500">\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group blocked">\n\t\t\t\t\t\t\t\t<label class="control-label">Number</label>\n\t\t\t\t\t\t\t\t<i class="icon-lock">icon lock</i>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<input type="text" name="number" id="inputNumber" value="{{number}}" class="input-mini required" maxlength="50">\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group blocked">\n\t\t\t\t\t\t\t\t<label class="control-label">Additional Information</label>\n\t\t\t\t\t\t\t\t<i class="icon-lock">icon lock</i>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<input type="text" name="additionalInformation" id="inputAdditionalInfo" class="size-box-standard" value="{{additionalInformation}}" maxlength="500">\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group blocked">\n\t\t\t\t\t\t\t\t<label class="control-label">City</label>\n\t\t\t\t\t\t\t\t<i class="icon-lock-open">icon lock</i>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t{{#with city}}\n\t\t\t\t\t\t\t\t\t<input type="text" name="city" id="inputCity" class="required" value="{{name}}, {{region}}, {{country}}">\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t\t{{/with}}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group blocked">\n\t\t\t\t\t\t\t\t<label class="control-label">Postal</label>\n\t\t\t\t\t\t\t\t<i class="icon-lock">icon lock</i>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<input type="text" name="postalCode" id="inputPostalCode" class="input-mini required" value="{{postalCode}}" maxlength="50">\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div><!-- EOF listing-location -->\n\t\t\t\t\t\t<div class="box-footer accordion-heading">\n\t\t\t\t\t\t\t<div class="button-group">\n\t\t\t\t\t\t\t\t<button class="button cancel-wing-btn" wing-id="{{id}}">Cancel</button>\n\t\t\t\t\t\t\t\t<button id="save-wing-btn" type="submit" class="button-highlight" data-loading-text="Saving...">Save</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div><!-- EOF box-footer -->\n\t\t\t\t\t</form>');});
define('tmpl!templates/lib/modal.form.wings.html',[ 'core/view' ], function(view) {return view('\t\t<div class="box-standard">\n\t\t\t<form id="accomodation-form">\n\t\t\t\t<div class="box-header">\n\t\t\t\t\t<i class="icon-house">Accommodation icon</i>\n\t\t\t\t\t<h1>Accommodation Wing</h1>\n\t\t\t\t</div>\n\t\t\t\t<div class="box-content wings-info">\n\t\t\t\t\t{{#if update}}\n\t\t\t\t\t<div class="btn-group pull-right">\n\t\t\t\t\t\t<button class="btn btn-mini">Options</button>\n\t\t\t\t\t\t<button class="btn btn-mini dropdown-toggle" data-toggle="dropdown">\n\t\t\t\t\t\t\t<span class="caret"></span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<ul class="dropdown-menu">\n\t\t\t\t\t\t\t<li><a id="delete-wing-btn" tabindex="-1">Delete</a></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t{{/if}}\n\t\t\t\t\t<div class="control-group lined">\n\t\t\t\t\t\t<label class="control-label" for="inputName">Wing name</label>\n\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t<input type="text" id="inputName" name="name" placeholder="Some name" class="size-extralarge required">\n\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="control-group lined">\n\t\t\t\t\t\t<label class="control-label" for="inputStatus">Wing status</label>\n\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t<select name="status" id="wingStatus" class="size-medium">\n\t\t\t\t\t\t\t\t<option value="Y" selected="selected">Yes</option>\n\t\t\t\t\t\t\t\t<option value="N">No</option>\n\t\t\t\t\t\t\t\t<option value="M">Maybe</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="control-group lined">\n\t\t\t\t\t\t<label class="control-label" for="inputSharingOnce">Are you sharing one time?</label>\n\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t<input type="checkbox" name="sharingOnce" id="inputSharingOnce">\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id="sharing-dates"class="control-group">\n\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t<input type="text" name="dateStart" class="input-sdate" placeholder="Start date">\n\t\t\t\t\t\t\t<input type="text" name="dateEnd" class="input-edate" placeholder="End date">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="control-group blocked">\n\t\t\t\t\t\t<label class="control-label" for="inputNewEmail">Best days to host</label>\n\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t<select name="bestDays" id="inputBestDays" class="size-large">\n\t\t\t\t\t\t\t\t<option value="A" selected="selected">Any</option>\n\t\t\t\t\t\t\t\t<option value="F">From Monday to Friday</option>\n\t\t\t\t\t\t\t\t<option value="T">From Monday to Thursday</option>\n\t\t\t\t\t\t\t\t<option value="W">Weekend</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="control-group blocked">\n\t\t\t\t\t\t<label class="control-label" for="inputCapacity">Capacity</label>\n\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t<select name="capacity" class="size-small">\n\t\t\t\t\t\t\t\t<option value="1">1</option>\n\t\t\t\t\t\t\t\t<option value="2">2</option>\n\t\t\t\t\t\t\t\t<option value="3">3</option>\n\t\t\t\t\t\t\t\t<option value="4">4</option>\n\t\t\t\t\t\t\t\t<option value="5">5</option>\n\t\t\t\t\t\t\t\t<option value="6">6</option>\n\t\t\t\t\t\t\t\t<option value="7">7</option>\n\t\t\t\t\t\t\t\t<option value="8">8</option>\n\t\t\t\t\t\t\t\t<option value="9">9</option>\n\t\t\t\t\t\t\t\t<option value="m">+9</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!-- HELLO SERGI, there are changes :  interested in male female now is a select -->\n\n<!-- \t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t<label class="control-label" for="inputGender">Preferred gender</label>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<label class="checkbox inline">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="preferredMale" id="inlineCheckbox1"> Male\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox inline">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="preferredFemale" id="inlineCheckbox2"> Female\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<span class="help-inline"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div> -->\n\t\t\t\t\t\t\t<div class="control-group blocked no-margin">\n\t\t\t\t\t\t\t\t<label class="control-label" for="inputGender">Prefered gender</label>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<select name="preferredGender" class="size-medium">\n\t\t\t\t\t\t\t\t\t\t<option value="Male">Male</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Female">Female</option>\n\t\t\t\t\t\t\t\t\t\t<option value="Both">Both</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group blocked">\n\t\t\t\t\t\t\t\t<label class="control-label" for="inputNewEmail">Sleeping arrangements</label>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<select name="whereSleepingType" id="whereSleepingType" class="size-large">\n\t\t\t\t\t\t\t\t\t\t<option value="C" selected="selected">Common area</option>\n\t\t\t\t\t\t\t\t\t\t<option value="P">Private area</option>\n\t\t\t\t\t\t\t\t\t\t<option value="S">Shared private area</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group blocked">\n\t\t\t\t\t\t\t\t<label class="control-label" for="inputNewEmail">Smoking</label>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<select name="smoking" id="smoking" class="size-large">\n\t\t\t\t\t\t\t\t\t\t<option value="N" selected="selected">No smoking allowed</option>\n\t\t\t\t\t\t\t\t\t\t<option value="S">I smoke</option>\n\t\t\t\t\t\t\t\t\t\t<option value="D">I don\'t smoke but guests can smoke here</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t<div class="controls check">\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="wheelchair" id="inlineCheckbox1">Wheelchair accessible\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t<div class="controls check">\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="iHavePet" id="inlineCheckbox1">I have pet\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t<div class="controls check">\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="petsAllowed" id="inlineCheckbox2">Guests pets allowed\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t<div class="controls check">\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="blankets" id="inputBlankets">I have blankets\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t<div class="controls check">\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="liveCenter" id="inputLiveCenter">I live in the center\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t<label class="control-label">Transports</label>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="metro" id="checkboxMetro">Metro\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="bus" id="checkboxBus">Bus\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="taxi" id="checkboxtaxi">Tram\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="train" id="checkboxTrain">Train\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="car" id="checkboxCar">Car\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="motorbike" id="checkboxMotorbike">Motorbike\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="bicycle" id="checkboxBicycle">Bicycle\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="boat" id="checkboxBoat">Boat\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="plane" id="checkboxPlane">Plane\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="other" id="checkboxOther">Other\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t\t<label class="control-label">About your accomodation</label>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<textarea class="span4" name="about" id="inputAbout" placeholder="Texto de ayuda"></textarea>\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div><!-- EOF box-content -->\n\t\t\t\t\t\t<div class="box-header">\n\t\t\t\t\t\t\t<i class="icon-contact">Contact icon</i>\n\t\t\t\t\t\t\t<h2>Listing location</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="guest-message">\n\t\t\t\t\t\t\t<h2>Shown only to Confirmed Guests</h2>\n\t\t\t\t\t\t\t<i class="icon-lock">icon lock</i>\n\t\t\t\t\t\t\t<p>To protect your privacy, we hide your address, phone number, and contact information from users that have not confirmed a reservation with you</p>\n\t\t\t\t\t\t</div><!-- EOF guest-message -->\n\t\t\t\t\t\t<div class="listing-location">\n\t\t\t\t\t\t\t<div class="control-group blocked">\n\t\t\t\t\t\t\t\t<label class="control-label">Street address</label>\n\t\t\t\t\t\t\t\t<i class="icon-lock">icon lock</i>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<input type="text" name="address" id="inputAddress" class="input-medium required">\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group blocked">\n\t\t\t\t\t\t\t\t<label class="control-label">Number</label>\n\t\t\t\t\t\t\t\t<i class="icon-lock">icon lock</i>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<!-- <input type="number" name="number" id="inputNumber" class="input-mini required"> -->\n\t\t\t\t\t\t\t\t\t<input type="text" name="number" id="inputNumber" class="input-mini required">\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group blocked">\n\t\t\t\t\t\t\t\t<label class="control-label">Additional Information</label>\n\t\t\t\t\t\t\t\t<i class="icon-lock">icon lock</i>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<input type="text" name="additionalInformation" id="inputAdditionalInfo" class="size-box-standard">\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group blocked">\n\t\t\t\t\t\t\t\t<label class="control-label">City</label>\n\t\t\t\t\t\t\t\t<i class="icon-lock-open">icon lock</i>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<input type="text" name="city" id="inputCity" class="input-medium required">\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="control-group blocked">\n\t\t\t\t\t\t\t\t<label class="control-label">Postal</label>\n\t\t\t\t\t\t\t\t<i class="icon-lock">icon lock</i>\n\t\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t\t<input type="text" name="postalCode" id="inputPostalCode" class="input-mini required">\n\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div><!-- EOF listing-location -->\n\t\t\t\t\t</form>\n\t\t\t\t</div><!-- EOF box-standard -->');});
define('tmpl!templates/app/profile/view.wing.html',[ 'core/view' ], function(view) {return view('\t\t\t\t<div class="box-header">\n\t\t\t\t\t<i class="icon-house">About icon</i>\n\t\t\t\t\t<h2>Accommodation Wing</h2>\n\t\t\t\t\t{{#if myProfile}}\n\t\t\t\t\t<div class="btn-group pull-right">\n\t\t\t\t\t\t<a class="dropdown-toggle" data-toggle="dropdown" href="#">\n\t\t\t\t\t\t\t<i class="icon-config">Config icon</i>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<ul class="dropdown-menu">\n\t\t\t\t\t\t\t<li><a href="#" class="edit-wing-btn" wing-id="{{id}}">Edit wing</a></li>\n\t\t\t\t\t\t\t<li><a href="#" class="delete-wing-btn" wing-id="{{id}}">Delete wing</a></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t{{/if}}\n\t\t\t\t\t<!--\n\t\t\t\t\t{{#if myProfile}}\n\t\t\t\t\t<button id="edit-wing-{{id}}" class="button2"><span class="edit-icon">Edit</span></button>\n\t\t\t\t\t{{/if}}-->\n\t\t\t\t</div>\n\t\t\t\t<div class="box-content wings-info">\n\t\t\t\t\t<h2>Wings name</h2>\n\t\t\t\t\t<p>{{name}}</p>\n\t\t\t\t\t<h2>City</h2>\n\t\t\t\t\t<p>{{city.name}}, {{city.country}}</p>\n\t\t\t\t\t<h2>Wings status</h2>\n\t\t\t\t\t<p>{{statusVerbose}}</p>\n\t\t\t\t\t<h2>Are you sharing for one time</h2>\n\t\t\t\t\t{{#if sharingOnce}}\n\t\t\t\t\t<p>{{dateStart}} to {{dateEnd}}</p>\n\t\t\t\t\t{{else}}\n\t\t\t\t\t<p>No</p>\n\t\t\t\t\t{{/if}}\n\t\t\t\t\t<h2>Better days to host</h2>\n\t\t\t\t\t<p>{{bestDaysVerbose}}</p>\n\t\t\t\t\t<h2>Capacity</h2>\n\t\t\t\t\t<p>{{capacity}} people</p>\n\t\t\t\t\t{{#if preferredMale}}\n\t\t\t\t\t<h2>Preferred gender</h2>\n\t\t\t\t\t<p>Male</p>\n\t\t\t\t\t{{/if}}\n\t\t\t\t\t{{#if preferredFemale}}\n\t\t\t\t\t<h2>Preferred gender</h2>\n\t\t\t\t\t<p>Female</p>\n\t\t\t\t\t{{/if}}\n\t\t\t\t\t<h2>Wheelchair accessible</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{{#if weelchair}}Yes{{else}}No{{/if}}\n\t\t\t\t\t</p>\n\t\t\t\t\t<h2>Sleeping arrangements</h2>\n\t\t\t\t\t<p>{{whereSleepingTypeVerbose}}</p>\n\t\t\t\t\t<h2>Smoking</h2>\n\t\t\t\t\t<p>{{smokingVerbose}}</p>\n\t\t\t\t\t<h2>Pets</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{{#if petsAllowed}}\n\t\t\t\t\t\tGuest pets allowed\n\t\t\t\t\t\t{{else}}\n\t\t\t\t\t\tNo guest pets allowed\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t{{#if iHavePet}}\n\t\t\t\t\t\tand I have a pet\n\t\t\t\t\t\t{{else}}\n\t\t\t\t\t\tand I don\'t have any pet\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t</p>\n\t\t\t\t\t<h2>I have blankets</h2>\n\t\t\t\t\t<p>{{#if blankets}}Yes{{else}}No{{/if}}</p>\n\t\t\t\t\t<h2>I live in the city center</h2>\n\t\t\t\t\t<p>{{#if liveCenter}}Yes{{else}}No{{/if}}</p>\n\t\t\t\t\t{{#if transports}}\n\t\t\t\t\t<h2>Public transport</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{{#if train}}Train, {{/if}}\n\t\t\t\t\t\t{{#if metro}}metro, {{/if}}\n\t\t\t\t\t\t{{#if taxi}}taxi, {{/if}}\n\t\t\t\t\t\t{{#if bus}}bus, {{/if}}\n\t\t\t\t\t\t{{#if boat}}boat, {{/if}}\n\t\t\t\t\t\t{{#if plane}}plane{{/if}}\n\t\t\t\t\t\t{{#if motorbike}}motorbike{{/if}}\n\t\t\t\t\t\t{{#if bicycle}}bicycle{{/if}}\n\t\t\t\t\t\t{{#if other}}other{{/if}}\n\t\t\t\t\t</p>\n\t\t\t\t\t{{/if}}\n\t\t\t\t\t<h2 class="last-p">About your accommodation</h2>\n\t\t\t\t\t<p>{{about}}</p>\n\t\t\t\t</div>\n\t\t\t\t<!-- <div class="gradient-box"></div> -->\n\t\t\t\t<div class="accordion-heading">\n\t\t\t\t\t<span>See more</span>\n\t\t\t\t</div>\n');});
define('views/app/MyWings',['require','jquery','backbone','api2','utils','views/lib/alerts','tmpl!templates/app/profile/form.wing.html','tmpl!templates/lib/modal.form.wings.html','tmpl!templates/app/profile/view.wing.html'],function(require) {

	var $ = require("jquery");
	var Backbone = require("backbone");
	var api = require("api2");
	var utils = require("utils");
	var alerts = require('views/lib/alerts');
	var wingFormTpl = require("tmpl!templates/app/profile/form.wing.html");
	var wingModalTpl = require("tmpl!templates/lib/modal.form.wings.html");
	var wingViewTpl = require("tmpl!templates/app/profile/view.wing.html");

	var WingsView = Backbone.View.extend({

		el: "#main",

		newCityObject: {},

		wingDefaultData: {
			about: "",
			additionalInformation: "",

			metro: false,
			bus: false,
			taxi: false,
			train: false,
			car: false,
			motorbike: false,
			bicycle: false,
			boat: false,
			plane: false,
			other: false,

			liveCenter: false,
			petsAllowed: false,
			wheelchair: false,
			sharingOnce: false,
			iHavePet: false,
			blankets: false,
		},

		events: {
			//"change [name=generalStatus]": "changeStatus",
			"click #add-wing-btn": function(e){
				e.preventDefault();
				this.wingModal = utils.showModal({
					header: "Add Wing",
					accept: "Save",
					loadingText: 'Saving...',
					content: wingModalTpl,
					send: this.submitWing,
					form: "accomodation-form",
					thin: true,
				});
				this.initWing();
			},
			"click input#inputSharingOnce": function(evt) {
				if (evt.target.checked)
					this.$("div#sharing-dates").show();
				else {
					this.$("div#sharing-dates").hide();
					this.$("[name=dateStart]").val("");
					this.$("[name=dateEnd]").val("");
				}
			},
			"click a.edit-wing-btn": "editWing",
			"click a.delete-wing-btn": "deleteWing",
			"click button.cancel-wing-btn": "cancelEdition",
			"submit form#accomodation-form": "createWing",
			"submit form[id^=accomodation-form-]": "submitWing",
		},

		initialize: function(parent) {
			this.parentCtrl = parent;
		},

		/*changeStatus: function(e) {
			api.put(api.getApiVersion() + "/profiles/" + api.getUserId(), {
				pwState: e.target.value
			})
			.then(function() {
				alerts.success('Wings general status updated');
			}, function() {
				alerts.defaultError();
			});
		},*/

		submitWing: function(evt){
			evt.preventDefault();
			var wingId = +$(evt.target).attr("data-rel");
			var data = this.parseForm(evt.target.id, this.parentCtrl.model.findWingById(wingId).city);
			$(evt.target).find("button.save-wing-btn").button('loading');

			var self = this;
			api.put(this.parentCtrl.model.urlWings() + "/" + wingId, data)
			.then(function(){
				self.parentCtrl.model.fetchWing({
					wingId: wingId,
					success: self.refreshWing.bind(self, wingId, wingViewTpl)
				});
				alerts.success('Wing saved');
			})
			.fin(function(){
				$(evt.target).find("button.save-wing-btn").button('reset');
			});
		},

		createWing: function(evt){
			evt.preventDefault();
			var data = this.parseForm(evt.target.id, this.newCityObject.city);
			this.newCityObject = null;

			$(evt.target).find("button.save-wing-btn").button('loading');
			var self = this;
			api.post(this.parentCtrl.model.urlWings(), data)
			.then(function(){
				self.parentCtrl.model.fetchWings({
					success: self.parentCtrl.refreshWings.bind(self.parentCtrl, true)
				});
				self.wingModal.modal('hide');
				alerts.success('Wing saved');
			})
			.fin(function(){
				$(evt.target).find("button.save-wing-btn").button('reset');
				self.el = '#main';
			});
		},

		parseForm: function(formId, city){
			var data = this.wingDefaultData;
			data = _.extend(data, utils.serializeForm(formId));
			_.each(data, function(value, attr){
				if (value === "on")
					data[attr] = true;
			});
			if (!data.sharingOnce)
				data = _.omit(data, ["dateStart", "dateEnd"]);

			data.city = city;

			return data;
		},

		editWing: function(evt){
			evt.preventDefault();
			var wingId = +evt.target.attributes['wing-id'].value;
			this.el = '#wing-box-' + wingId;

			this.initWing(this.refreshWing(wingId, wingFormTpl));
		},

		cancelEdition: function(evt){
			evt.preventDefault();

			var wingId = +evt.target.attributes['wing-id'].value;
			this.$("#accomodation-form-" + wingId)[0].reset();

			this.refreshWing(wingId, wingViewTpl);

			this.el = '#main';
		},

		refreshWing: function(wingId, tpl){
			var wing = this.parentCtrl.model.findWingById(wingId);
			$(this.el).html(tpl(wing, {myProfile: true}));

			return wing;
		},

		initWing: function(wing){
			var dS = "";
			var dE = "";

			if (wing && wing.sharingOnce){
				this.$("div#sharing-dates").show();
				dS = wing.dateStart;
				dE = wing.dateEnd;
			}

			this.$("div#sharing-dates").hide();

			this.$('#accomodation-form').validate();
			this.$("input[name=dateStart]")
			.datepicker({
				minDate: new Date(),
				dateFormat: "yy-mm-dd",
			})
			.val(dS);

			this.$("input[name=dateEnd]")
			.datepicker({
				minDate: new Date(),
				dateFormat: "yy-mm-dd",
			})
			.val(dE);

			var autoCity = new google.maps.places.Autocomplete(document.getElementById("inputCity"), {
				types: ['(cities)']
			});

			var wingObj = wing || this.newCityObject;
			google.maps.event.addListener(autoCity, 'place_changed', utils.setAutocomplete.bind(this, autoCity, wingObj));

			this.$("#inputCity").keypress(function(event){
				if (event.which === 13) event.preventDefault();
			});

			this.$('#accomodation-form').validate();
		},

		deleteWing: function(evt){
			evt.preventDefault();
			var wingId = evt.target.attributes['wing-id'].value;

			var self = this;
			if (confirm("Are you sure you want to delete this wing?")) {
				api.delete(api.getApiVersion() + "/profiles/" + api.getUserId() + "/accomodations/" + wingId)
				.then(function() {
					self.parentCtrl.model.fetch({success: function(){
						self.parentCtrl.model.fetchWings({ success: self.parentCtrl.refreshWings.bind(self.parentCtrl, true)});
						alerts.success('Wing deleted');
					}});
				}, function() {
					alerts.defaultError();
				});
			}
		}
	});

return WingsView;
});

define('tmpl!templates/app/profile/profile.html',[ 'core/view' ], function(view) {return view('<div class="container">\n\t<div class="landscape">\n\t\t<div class="tabs">\n\t\t\t<ul class="nav nav-tabs">\n\t\t\t\t<li class="active"><a href="#about" data-toggle="tab">Profile</a></li>\n\t\t\t\t<li><a href="#wings" data-toggle="tab">Wings</a></li>\n\t\t\t</ul>\n\t\t</div><!-- EOF tabs -->\n\t\t<div class="personal-info">\n\t\t\t<div class="content-top">\n\t\t\t\t<h1 id="user-name-label" class="name">{{firstName}} {{lastName}}</h1>\n\t\t\t\t<span class="age">[{{age}}]</span>\n\t\t\t\t<span class="online">\n\t\t\t\t\t{{#equals lastLoginDate \'ON\' }}\n\t\t\t\t\t\tOnline\n\t\t\t\t\t{{else}}\n\t\t\t\t\t\t{{date lastLoginDate \'YYYY-MM-DD\' }}\n\t\t\t\t\t{{/equals}}\n\t\t\t\t</span>\n\t\t\t\t<h2 class="home-town">\n\t\t\t\t\t{{#if hometown.name}}\n\t\t\t\t\t{{hometown.name}}, {{hometown.country}}\n\t\t\t\t\t{{/if}}\n\t\t\t\t</h2>\n\t\t\t{{#if myProfile}}\n\t\t\t</div>\n\t\t\t{{else}}\n\t\t\t\t<h3 class="current-location">Now in {{current.name}}, {{current.country}}</h3>\n\t\t\t</div>\n\t\t\t<div class="button-bar">\n\t\t\t\t<ul>\n\t\t\t\t\t<li><button class="send-message-btn">Message</button></li>\n\t\t\t\t\t<li><button class="send-request-btn selected">Request</button></li>\n\t\t\t\t\t<li><button class="send-invitation-btn">Invite</button></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t{{/if}}\n\t\t</div><!-- EOF personal -->\n\t</div><!-- EOF landscape -->\n\t<div class="tab-content">\n\t\t<div class="tab-pane active" id="about">\n\t\t\t<div class="content-left" id="basic-box"></div>\n\t\t\t<div class="content-right">\n\t\t\t\t<div id="about-box"></div>\n\t\t\t\t<div id="likes-box"></div>\n\t\t\t\t{{#if myProfile}}\n\t\t\t\t<div id="contact-box"></div>\n\t\t\t\t{{/if}}\n\t\t\t\t<div id="places-box"></div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="tab-pane" id="wings">\n\t\t\t<div class="content-left"></div>\n\t\t\t<div class="content-right">\n\t\t\t\t{{#each wingsCollection}}\n\t\t\t\t<div id="wing-box-{{id}}" class="box-standard">\n\t\t\t\t</div><!-- EOF box-standard -->\n\t\t\t\t{{/each}}\n\t\t\t</div>\n\t\t</div>\n\t</div><!-- EOF tab-content -->\n</div> <!-- EOF container -->\n');});
define('tmpl!templates/app/profile/view.basic.html',[ 'core/view' ], function(view) {return view('<div class="avatar">\n\t<img id="avatar" src="{{avatar}}" alt="avatar">\n</div>\n<div class="info">\n\t{{#if myProfile}}\n\t<a id="edit-basic-btn" class="button-basic-info edit-profile edit-box-btn" data-rel="basic-box"><i class="icon-edit">Icon edit</i>Edit profile</a>\n\t{{/if}}\n</div>\n<div class="box rate-info">\n\t<h2>Reply rate</h2>\n\t<p>{{rate replyRate}}</p>\n\t<h2>Reply time</h2>\n\t<p>{{replyTimeVerbose}}</p>\n</div>\n<div class="box basic-info">\n\t<h1>Basic info</h1>\n\t<h2>Gender</h2>\n\t<p>{{gender}}</p>\n\t<h2>Birthday</h2>\n\t{{#if myProfile}}\n\t<p>{{birthdayVerbose}}</p>\n\t{{else}}\n\t{{#if birthday}}\n\t<p>{{birthday}}</p>\n\t{{else}}\n\t<p>-</p>\n\t{{/if}}\n\t{{/if}}\n\t{{#if interestedIn.length}}\n\t<h2>Interesed in</h2>\n\t<p>{{interestedIn.0.gender}}</p>\n\t{{/if}}\n\t{{#if civilState}}\n\t<h2>Relationship status</h2>\n\t<p>{{civilStateVerbose}}</p>\n\t{{/if}}\n\t{{#if languages.length}}\n\t<h2>Languages</h2>\n\t<ul>\n\t\t{{#each languages}}\n\t\t<li>{{name}} ({{level}})</li>\n\t\t{{/each}}\n\t</ul>\n\t{{/if}}\n</div><!-- EOF box basic-info -->\n');});
define('tmpl!templates/app/profile/view.about.html',[ 'core/view' ], function(view) {return view('<div class="box-standard">\n\t<div class="box-header">\n\t\t<i class="icon-about">About icon</i>\n\t\t<h2>About me</h2>\n\t\t{{#if myProfile}}\n\t\t<a id="edit-about-btn" class="button-edit-info edit-box-btn" data-rel="about-box">\n\t\t\t<i class="icon-edit">Edit icon</i>Edit\n\t\t</a>\n\t\t{{/if}}\n\t</div>\n\t<div class="accordion">\n\t\t<div class="accordion-group">\n\t\t\t<div id="collapse-about" minCollapse="450" class="accordion-body collapse">\n\t\t\t\t<div class="accordion-inner">\n\t\t\t\t\t<div class="box-content">\n\t\t\t\t\t\t{{#if allAboutYou}}\n\t\t\t\t\t\t<h2>Description</h2>\n\t\t\t\t\t\t<p>{{allAboutYou}}</p>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t{{#if mainMission}}\n\t\t\t\t\t\t<h2>Current mission</h2>\n\t\t\t\t\t\t<p>{{mainMission}}</p>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t{{#if occupation}}\n\t\t\t\t\t\t<h2>Occupation</h2>\n\t\t\t\t\t\t<p>{{occupation}}</p>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t{{#if company}}\n\t\t\t\t\t\t<h2>Company</h2>\n\t\t\t\t\t\t<p>{{company}}</p>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t{{#if education.length}}\n\t\t\t\t\t\t<h2>Education</h2>\n\t\t\t\t\t\t{{#each education}}\n\t\t\t\t\t\t<p>{{degree}} at {{institution}}</p>\n\t\t\t\t\t\t{{/each}}\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t{{#if personalPhilosophy}}\n\t\t\t\t\t\t<h2>Personal philosophy</h2>\n\t\t\t\t\t\t<p>{{personalPhilosophy}}</p>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t{{#if politicalOpinion}}\n\t\t\t\t\t\t<h2>Political views</h2>\n\t\t\t\t\t\t<p>{{politicalOpinion}}</p>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t{{#if religion}}\n\t\t\t\t\t\t<h2>Religion</h2>\n\t\t\t\t\t\t<p>{{religion}}</p>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t</div><!-- EOF box-content -->\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="gradient-box"></div>\n\t\t\t<div class="accordion-heading" data-toggle="collapse" href="#collapse-about">\n\t\t\t\t<span>See more</span>\n\t\t\t</div>\n\t\t</div>\n\t</div><!-- EOF accordion -->\n</div><!-- EOF box-standard -->');});
define('tmpl!templates/app/profile/view.likes.html',[ 'core/view' ], function(view) {return view('<div class="box-standard">\n\t<div class="box-header">\n\t\t<i class="icon-like">Like icon</i>\n\t\t<h2>Likes</h2>\n\t\t{{#if myProfile}}\n\t\t<a id="edit-about-btn" class="button-edit-info edit-box-btn" data-rel="likes-box">\n\t\t\t<i class="icon-edit">Edit icon</i>Edit\n\t\t</a>\n\t\t{{/if}}\n\t</div><!-- EOF box-header -->\n\t<div class="accordion">\n\t\t<div class="accordion-group">\n\t\t\t<div id="collapse-likes" minCollapse="450" class="accordion-body collapse">\n\t\t\t\t<div class="accordion-inner">\n\t\t\t\t\t<div class="box-content">\n\t\t\t\t\t\t{{#if enjoyPeople}}\n\t\t\t\t\t\t<h2>People I enjoy</h2>\n\t\t\t\t\t\t<p>{{enjoyPeople}}</p>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t{{#if movies}}\n\t\t\t\t\t\t<h2>Movies, series, books, games...</h2>\n\t\t\t\t\t\t<p>{{movies}}</p>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t{{#if sports}}\n\t\t\t\t\t\t<h2>Sports</h2>\n\t\t\t\t\t\t<p>{{sports}}</p>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t{{#if otherPages}}\n\t\t\t\t\t\t<h2>Other webpages</h2>\n\t\t\t\t\t\t<p>{{otherPages}}</p>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t{{#if sharing}}\n\t\t\t\t\t\t<h2>Show, learn, share</h2>\n\t\t\t\t\t\t<p>{{sharing}}</p>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t{{#if incredible}}\n\t\t\t\t\t\t<h2>Amazing things done/seen</h2>\n\t\t\t\t\t\t<p>{{incredible}}</p>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t{{#if inspiredBy}}\n\t\t\t\t\t\t<h2>People who inspires you</h2>\n\t\t\t\t\t\t<p>{{inspiredBy}}</p>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t{{#if quotes}}\n\t\t\t\t\t\t<h2>Favourite quotes</h2>\n\t\t\t\t\t\t<p>{{quotes}}</p>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t\t{{#if pwOpinion}}\n\t\t\t\t\t\t<h2>Opinion about Peoplewings</h2>\n\t\t\t\t\t\t<p>{{pwOpinion}}</p>\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t</div><!-- EOF box-content -->\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="gradient-box"></div>\n\t\t\t<div class="accordion-heading" data-toggle="collapse" href="#collapse-likes">\n\t\t\t\t<span>See more</span>\n\t\t\t</div>\n\t\t</div>\n\t</div><!-- EOF accordion -->\n</div><!-- EOF box-standard -->');});
define('tmpl!templates/app/profile/view.contact.html',[ 'core/view' ], function(view) {return view('{{#if myProfile}}\n<div class="box-standard">\n\t<div class="box-header">\n\t\t<i class="icon-contact">Contact icon</i>\n\t\t<h2>Contact info</h2>\n\t\t<a id="edit-about-btn" class="button-edit-info edit-box-btn" data-rel="contact-box">\n\t\t\t<i class="icon-edit">Edit icon</i>Edit\n\t\t</a>\n\t</div>\n\t<div class="accordion">\n\t\t<div class="accordion-group">\n\t\t\t<div id="collapse-contact" minCollapse="450" class="accordion-body collapse">\n\t\t\t\t<div class="accordion-inner">\n\t\t\t\t\t<div class="guest-message">\n\t\t\t\t\t\t<h2 class="lock-icon">Shown only to Confirmed Guests</h2>\n\t\t\t\t\t\t<p>To protect your privacy, we hide your address, phone number, and contact information from users that have not confirmed a reservation with you</p>\n\t\t\t\t\t</div><!-- EOF guest-message -->\n\t\t\t\t\t<div class="box-content contact-info">\n\t\t\t\t\t\t<h2>Email</h2>\n\t\t\t\t\t\t<p>{{emails}}</p>\n\t\t\t\t\t\t<h2>Phone</h2>\n\t\t\t\t\t\t<p>{{phone}}</p>\n\t\t\t\t\t\t<h2>Social Network</h2>\n\t\t\t\t\t\t{{#each socialNetworks}}\n\t\t\t\t\t\t<p>{{socialNetwork}} : {{snUsername}}</p>\n\t\t\t\t\t\t{{/each}}\n\t\t\t\t\t\t<h2>Instant Message</h2>\n\t\t\t\t\t\t{{#each instantMessages}}\n\t\t\t\t\t\t<p>{{instantMessage}} : {{imUsername}}</p>\n\t\t\t\t\t\t{{/each}}\n\t\t\t\t\t</div><!-- EOF box-content -->\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="accordion-heading" data-toggle="collapse" href="#collapse-contact">\n\t\t\t\t<span>See more</span>\n\t\t\t</div>\n\t\t</div>\n\t</div><!-- EOF accordion -->\n</div><!-- EOF box-standard -->\n{{/if}}\n');});
define('tmpl!templates/app/profile/view.places.html',[ 'core/view' ], function(view) {return view('<div class="box-standard maps">\n\t<div class="box-header">\n\t\t<i class="icon-places">Places icon</i>\n\t\t<h2>Places</h2>\n\t\t{{#if myProfile}}\n\t\t<a id="edit-places-btn" class="button-edit-info edit-box-btn" data-rel="places-box">\n\t\t\t<i class="icon-edit">Edit icon</i>Edit\n\t\t</a>\n\t\t{{/if}}\t\t\n\t</div>\n\t<div id="user-map"></div>\n\t<div class="maps-legend">\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<i class="icon-places-hometown-mini">Hometown place icon</i>\n\t\t\t\t<span>Hometown</span>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<i class="icon-places-current-mini">Current place icon</i>\n\t\t\t\t<span>Current city</span>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<i class="icon-places-lived-mini">Lived place icon</i>\n\t\t\t\t<span>Where I have lived</span>\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n</div><!-- box-standard maps -->');});
define('tmpl!templates/app/profile/form.add-wings.html',[ 'core/view' ], function(view) {return view('\t\t\t\t<div class="avatar">\n\t\t\t\t\t<img id="avatar" src="{{avatar}}" alt="avatar">\n\t\t\t\t</div>\n\t\t\t\t<div class="info">\n\t\t\t\t\t<a id="add-wing-btn" class="button-basic-info">\n\t\t\t\t\t\t<i class="icon-add-wings">Icon wing</i>Add wing\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n<!--} \t\t\t\t<div class="box basic-info">\n\t\t\t\t\t<form id="wings-status-form">\n\t\t\t\t\t\t<div class="control-group">\n\t\t\t\t\t\t\t<label class="control-label" for="generalStatus">General status</label>\n\t\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t\t<select name="generalStatus" class="size-large">\n\t\t\t\t\t\t\t\t\t<option value="">--------</option>\n\t\t\t\t\t\t\t\t\t<option value="W" {{selected generalStatus \'W\'}}>By Wing</option>\n\t\t\t\t\t\t\t\t\t<option value="Y" {{selected generalStatus \'Y\'}}>Yes</option>\n\t\t\t\t\t\t\t\t\t<option value="N" {{selected generalStatus \'N\'}}>No</option>\n\t\t\t\t\t\t\t\t\t<option value="M" {{selected generalStatus \'M\'}}>Maybe</option>\n\t\t\t\t\t\t\t\t\t<option value="T" {{selected generalStatus \'T\'}}>Travelling</option>\n\t\t\t\t\t\t\t\t\t<option value="C" {{selected generalStatus \'C\'}}>Cofee or drink</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div> -->\n\t\t\t</div><!-- EOF box basic-info -->');});
define('views/app/ProfileView',['require','jquery','backbone','api2','models/ProfileModel','views/app/map','views/lib/notifications','views/app/MyProfile','views/app/MyWings','tmpl!templates/app/profile/profile.html','tmpl!templates/app/profile/view.basic.html','tmpl!templates/app/profile/view.about.html','tmpl!templates/app/profile/view.likes.html','tmpl!templates/app/profile/view.contact.html','tmpl!templates/app/profile/view.places.html','tmpl!templates/app/profile/view.wing.html','tmpl!templates/app/profile/form.add-wings.html'],function(require) {

	var $ = require("jquery");
	var Backbone = require("backbone");
	var api = require("api2");

	var PreviewModel = require("models/ProfileModel");
	var MapView = require('views/app/map');
	var notifications = require('views/lib/notifications');
	var MyProfile = require('views/app/MyProfile');
	var MyWings = require('views/app/MyWings');
	var profileTpl = require('tmpl!templates/app/profile/profile.html');
	var basicTpl = require('tmpl!templates/app/profile/view.basic.html');
	var aboutTpl = require('tmpl!templates/app/profile/view.about.html');
	var likesTpl = require('tmpl!templates/app/profile/view.likes.html');
	var contactTpl = require('tmpl!templates/app/profile/view.contact.html');
	var placesTpl = require('tmpl!templates/app/profile/view.places.html');
	var wingTpl = require('tmpl!templates/app/profile/view.wing.html');
	var wingsBarTpl = require('tmpl!templates/app/profile/form.add-wings.html');

	var ProfileView = Backbone.View.extend({

		el: "#main",

		events: {
			"click button.send-message-btn": "sendMessage",
			"click button.send-request-btn": "sendRequest",
			"click button.send-invitation-btn": "sendInvitation",
			//"click ul.nav-tabs li a": "tabHandler",
		},

		initialize: function(userId) {
			this.map = new MapView({
				el: "#user-map",
				id: "mapcanvas"
			});

			this.model = new PreviewModel({
				id: userId,
			});
		},

		render: function(userId, tabId) {
			var myProfile = this.model.get("id") === api.getUserId();
			this.model.clear({silent: true});
			this.model.set("id", userId, {silent: true});

			var tab = '#' + tabId || '#about';
			this.model.fetch({success: this.refresh.bind(this, tab)});

			if (myProfile && !this.myProfile) {
				this.myProfile = new MyProfile(this.model, this);
				this.myWings = new MyWings(this);
			}
		},

		refresh: function(tab) {
			var myProfile = (this.model.get("id") === api.getUserId());

			this.refreshProfile(myProfile);
			this.refreshWings(myProfile);

			if (tab)
				this.selectTab(tab);
		},

		refreshProfile: function(myProfile){

			$(this.el).html(profileTpl(this.model.toJSON(), {myProfile: myProfile}));

			this.$("#basic-box").html(basicTpl(this.model.toJSON(), {myProfile: myProfile}));
			this.$("#about-box").html(aboutTpl(this.model.toJSON(), {myProfile: myProfile}));
			this.$("#likes-box").html(likesTpl(this.model.toJSON(), {myProfile: myProfile}));
			this.$("#contact-box").html(contactTpl(this.model.toJSON(), {myProfile: myProfile}));
			this.$("#places-box").html(placesTpl(this.model.toJSON(), {myProfile: myProfile}));

			this.map.render();
			this.initMarkers();
		},

		refreshWings: function(myProfile){
			var tpl = wingsBarTpl({ avatar: this.model.get("avatar"), generalStatus: this.model.get("pwState")});
			if (!myProfile)
				tpl = basicTpl(this.model.toJSON(), {myProfile: myProfile});

			this.$("#wings .content-left").html(tpl);
			this.$("#wings .content-right").empty();

			var self = this;
			this.model.get("wingsCollection")
			.map(function(wing){
				var box = $(document.createElement('div'))
					.attr('id', 'wing-box-' + wing.id)
					.addClass('box-standard');
				self.$("#wings .content-right").append(box);

				wing.transports = wing.metro || wing.tram || wing.train || wing.bus || wing.plane || wing.others;
				$(box).html(wingTpl(wing));
			});
		},

		renderBox: function(box){
			this.model.fetch({success: this.refreshBox.bind(this, box)});
		},

		refreshBox: function(box){
			var myProfile = (this.model.get("id") === api.getUserId());
			var tpl = null;

			switch (box){
				case "basic-box":
					tpl = basicTpl(this.model.toJSON(), {myProfile: myProfile});
					break;
				case "about-box":
					tpl = aboutTpl(this.model.toJSON(), {myProfile: myProfile});
					break;
				case "likes-box":
					tpl = likesTpl(this.model.toJSON(), {myProfile: myProfile});
					break;
				case "contact-box":
					tpl = contactTpl(this.model.toJSON(), {myProfile: myProfile});
					break;
				case "places-box":
					tpl = placesTpl(this.model.toJSON(), {myProfile: myProfile});
					break;
			}
			this.$("#" + box).html(tpl);
			if (box === "places-box"){
				this.initializeMap();
			}
		},

		initializeMap: function(){
			this.map = new MapView({
				el: "#user-map",
				id: "mapcanvas"
			});
			this.map.render();
			this.initMarkers();
		},

		initMarkers: function() {
			var sc = this;

			var city = this.model.get("current");
			if (!_.isEmpty(city)) {
				this.map.addMarker({
					id: "current",
					location: new google.maps.LatLng(city.lat, city.lon),
					title: city.name + ", " + city.country,
					icon: 'img/places-current-marker.png'
				});
			} else this.map.deleteMarker('current');
			city = this.model.get("hometown");
			if (!_.isEmpty(city)) {
				this.map.addMarker({
					id: "hometown",
					location: new google.maps.LatLng(city.lat, city.lon),
					title: city.name + ", " + city.country,
					icon: 'img/places-hometown-marker.png'
				});
			} else this.map.deleteMarker('hometown');
			var others = this.model.get("otherLocations");
			if (others.length) {
				_.each(others, function(location, index) {
					sc.map.addMarker({
						id: "otherLocation-" + index,
						location: new google.maps.LatLng(location.lat, location.lon),
						title: location.name + ", " + location.country,
						icon: 'img/places-other-marker.png'
					});
				});
			}
		},

		selectTab: function(tabId) {
			this.$('.tab-content .tab-pane').removeClass('active');
			$(tabId).addClass('active');

			$(".tabs ul li").removeClass("active");
			$('.tabs ul li a[href=' + tabId + ']')
			.parent()
			.addClass("active");
		},

		/*
		Waiting to update Backbone lib to avoid trigger false bug
		http://stackoverflow.com/questions/11205623/backbone-router-failing-to-respect-trigger-false-option
		tabHandler: function(evt){

			var tabId = evt.target.href.split(evt.target.baseURI)[1];
			window.router.navigate('#/profiles/' + this.model.get('id') + '/' + tabId.split('#')[1], {trigger: false});

		},
		*/

		sendMessage: function() {
			notifications.message(this.model.get("id"), this.model.get("firstName") + " " + this.model.get("lastName"));
		},

		sendRequest: function() {
			notifications.request(this.model.get("id"), this.model.get("firstName") + " " + this.model.get("lastName"));
		},

		sendInvitation: function() {
			notifications.invitation(this.model.get("id"), this.model.get("firstName") + " " + this.model.get("lastName"));
		}
	});

	return ProfileView;
});

define('tmpl!templates/app/notifications.html',[ 'core/view' ], function(view) {return view('<div class="searchbar">\n\t<div id="search">\n\t\t<input type="text" id="search-query" class="size-extralarge">\n\t\t<a id="search-btn" class="button">\n\t\t\t<i class="icon-search">Search icon</i>\n\t\t</a>\n</div>\n</div>\n\n<div class="messages-header">\n\t<div class="messages-tabs">\n\t\t<ul id="notification-type">\n\t\t\t<li class="button selected" data-filter="">All</li>\n\t\t\t<li class="button" data-filter="reqinv">Requests & Invitations</li>\n\t\t\t<li class="button" data-filter="msg">Messages</li>\n\t\t</ul>\n\t</div>\n\n\t<div class="button-bar">\n\t\t<ul>\n\t\t\t<li><button class="button1 send-message-btn">MESSAGE</button></li>\n\t\t\t<li><button class="button1 send-request-btn selected">REQUEST</button></li>\n\t\t\t<li><button class="button1 send-invitation-btn">INVITE</button></li>\n\t\t</ul>\n\t</div><!-- EOF button-bar -->\n</div><!-- EOF messages-header -->\n\n<div id="notification-panel">\n\t<div class="floatality">\n\t\t<div class="btn-group">\n\t\t\t<label for="main-checker">\n\t\t\t\t<input type="checkbox" id="main-checker">\n\t\t\t</label>\n\t\t\t<a class="messages-dropdown" data-toggle="dropdown" href="#">Something</a>\n\t\t\t<ul class="dropdown-menu">\n\t\t\t\t<li><a href="#" id="delete-all-selected">Delete</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<div class="messages-filters">\n\t\t\t<label id="filter-title">Organized by</label>\n\t\t\t<select id="ri-filters" class="size-large">\n\t\t\t\t<option value="date">Date</option>\n\t\t\t\t<option value="interlocutor">Contact name</option>\n\t\t\t\t<option value="read">Read/Unread</option>\n\t\t\t</select>\n\t\t\t<select id="ri-status" class="size-large">\n\t\t\t\t<option value="">All</option>\n\t\t\t\t<option value="P">Pending</option>\n\t\t\t\t<option value="A">Accepted</option>\n\t\t\t\t<option value="D">Denyed</option>\n\t\t\t\t<option value="M">Maybe</option>\n\t\t\t</select>\n\t\t\t<div id="notification-sender">\n\t\t\t\t<label for="checkbox">\n\t\t\t\t\t<input type="checkbox" name="received">Received\n\t\t\t\t</label>\n\t\t\t\t<label for="checkbox">\n\t\t\t\t\t<input type="checkbox" name="sent">Applied\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</div>\n\t\t<div id="notifications-pager" class="pager-right">\n\t\t\t<div class="resultCounter">\n\t\t\t\t<span>{{startResult}}</span>\n\t\t\t\t<span>{{endResult}}</span>\n\t\t\t\t<span>{{totalCount}}</span>\n\t\t\t</div>\n\t\t\t<div class="button-group">\n\t\t\t\t<a href="" class="button-pager-previous">\n\t\t\t\t\t<i class="icon-pager-previous">button previous</i>\n\t\t\t\t</a>\n\t\t\t\t<a href="" class="button-pager-next">\n\t\t\t\t\t<i class="icon-pager-next">button next</i>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<ul id="notifications-list"></ul>\n</div>\n');});
define('tmpl!templates/app/notification.html',[ 'core/view' ], function(view) {return view('<li class="notification-item {{#unless read}}unread{{/unless}}" data-type="notification-item" data-rel="{{id}}" data-thread="{{reference}}" data-index="{{index}}">\n\t<div class="messages-avatar">\n\t\t<img src="{{avatar}}">\n\t</div>\n\t<div class="messages-sender">\n\t\t<h1 class="messages-name"><a href="#/profiles/{{interlocutorId}}/about">{{name}},</a><span class="messages-age">[{{age}}]</span></h1>\n\t\t<span class="{{#if online}}online{{/if}}">{{connected}}</span>\n\t\t<h2>{{location}}</h2>\n\t</div>\n\t<div class="messages-flag">\n\t\t<span class="state-flag {{#if flagDirection }}from-me{{else}}to-me{{/if}} {{enum state \'notification-state\'}}">state flag</span>\n\t</div>\n\t<div class="messages-state">\n\t\t{{#if isMessage }}\n\t\t<p class="messages-name">{{content}}</p>\n\t</div>\n\t<div class="messages-dates">\n\t\t{{else}}\n\t\t<h1 class="messages-name">{{enum kind \'notification-type\'}}</h1>\n\t\t{{#with wingParameters}}\n\t\t<h2>{{wingType}} {{wingCity}}</h2>\n\t\t<h3>{{message}}</h3>\n\t</div>\n\t<div class="messages-dates">\n\t\t<div class="messages-dates-info">\n\t\t\t<dl>\n\t\t\t\t<dt>From</dt>\n\t\t\t\t<dd {{#if_contains parameters.modified "startDate" }}class="modified"{{/if_contains}}>\n\t\t\t\t\t{{date startDate}}\n\t\t\t\t</dd>\n\t\t\t</dl>\n\t\t\t<dl>\n\t\t\t\t<dt>To</dt>\n\t\t\t\t<dd {{#if_contains parameters.modified "endDate" }}class="modified"{{/if_contains}}>\n\t\t\t\t\t{{date endDate}}\n\t\t\t\t</dd>\n\t\t\t</dl>\n\t\t\t<dl>\n\t\t\t\t<dd {{#if_contains parameters.modified "numPeople" }}class="modified"{{/if_contains}}>\n\t\t\t\t\t{{numPeople}}\n\t\t\t\t\t<span>people</span>\n\t\t\t\t</dd>\n\t\t\t</dl>\n\t\t</div>\n\t\t{{/with}}\n\t\t{{/if}}\n\t\t<div class="messages-date-msg">{{date created "MMM Do"}}</div>\n\t</div>\n</li>\n');});
define('views/app/notifications',['require','jquery','backbone','api2','promise','tmpl!templates/app/notifications.html','tmpl!templates/app/notification.html','views/lib/alerts','models/Account','models/ProfileModel'],function(require){

	var $ = require("jquery");
	var Backbone = require("backbone");
	var api = require("api2");
	var Promise = require("promise");
	var notificationsTpl = require("tmpl!templates/app/notifications.html");
	var itemTpl = require("tmpl!templates/app/notification.html");
	var alerts = require("views/lib/alerts");

	var AccountModel = require("models/Account");
	var ProfileModel = require("models/ProfileModel");

	api.listenUpdate('notifs', function(count) {
		$('#notif-count')
			.css('display', count ? 'block' : 'hidden')
			.html(count);
	});


	api.listenUpdate('avatar', function(state) {
		if (state === true){
			var account = new AccountModel({
					id: api.getUserId()
			});
			account.fetch();

			var profile = new ProfileModel({
					id: api.getUserId()
			});
			profile.fetch(router.previewView.refreshBox("basic-box"));
			alerts.success('Your profile picture has been updated');
		}
	});

	var NotificationsView = Backbone.View.extend({
		el: "#main",

		activePage: 1,
		lastPage: null,

		events: {
			'click #search-btn': 'filter',
			'click #notifications-pager a.button-pager-next': 'nextPage',
			'click #notifications-pager a.button-pager-previous': 'previousPage',
			'click #delete-all-selected': function(e) {
				e.preventDefault();
				this.removeSelection();
			},
			'change .messages-check': function(e){
				var threadId = $(e.target).parent().parent().attr('data-thread');
				this.selection.push(threadId);
			},
			'change #main-checker': function(e) {
				var a = this.$list.find('input[type="checkbox"]');
				if ($(e.target).is(':checked')) {
					a.attr('checked', 'checked');
					this.selection = this.threads.concat();
				} else {
					a.removeAttr('checked');
					this.selection = [];
				}
			},
			'keyup #search-query': function(event) {
				if (event.keyCode === 13)
					this.filter();
			}
		},

		initialize: function(){
			this.selection = [];
			this.refresh = this.refresh.bind(this);
			this.threads = null;
		},

		render: function(filters) {
			this.rendered = true;
			this.$el.html(notificationsTpl(filters));
			this.$list = this.$('#notifications-list');

			if (Object.keys(filters || {}).length)
				this.unserializeFilters(filters);

			this.selectTab(filters && filters.kind);
			var self = this;
			this.$('#notification-type').delegate('li', 'click', function() {
				self.$('.button.selected').removeClass('selected');
				self.$('.button[data-filter="' + $(this).data('filter') + '"]').addClass('selected');
				self.$('#search-query').val('');
				self.filter();
			});

			this.$('#notification-sender').delegate('input', 'change', this.filter.bind(this));
			this.$('select#ri-filters').on('change', this.filter.bind(this));

			this.$('#ri-status').on('change', this.filter.bind(this));

			//this.$('#ri-status').on('change', this.filter.bind(this)).hide(); Sergi was here, so what?!


			return this.loadData(filters).then(this.refresh);
		},

		unserializeFilters: function(filters) {
			if (filters.search)
				this.$('#search-query').val(filters.search);

			if(filters.target) {
				filters.target.split(',').forEach(function(target) {
					this.$('#notification-sender [name="' + target + '"]').attr('checked', 'checked');
				}, this);
			}

			if (filters.state)
				this.$('#ri-status').val(filters.state);

			if (filters.order)
				this.$('#ri-filters').val(filters.order);
		},

		serializeFilters: function() {
			if (!this.rendered)
				return null;

			var result = {};

			if (this.activePage !== 1)
				result.page = this.activePage;

			var query = this.$('#search-query').val();
			if (query)
				result.search = query;

			var kind = this.$('.button.selected').data('filter');
			if (kind)
				result.kind = kind;

			var target = this.$('#notification-sender input:checked');
			if (target.length)
				result.target = target.toArray().map(function(el) { return el.getAttribute('name') }).join(',');

			var status = this.$('#ri-status').val();
			if (kind === 'reqinv' && status)
				result.state = status;

			var order = this.$('#ri-filters').val();
			if (order && order !== 'date')
				result.order = order;

			return Object.keys(result).length ? result : null;
		},

		filter: function() {
			this.resetPager();
			this.applyFilters();
		},

		applyFilters: function() {
			var filters = this.lastFilters || this.serializeFilters();
			this.lastFilters = null;
			document.location.hash = filters ? '#/messages/filter/' + JSON.stringify(filters) : '#/messages';
		},

		loadData: function(params) {
			if (params && params.target && params.target.indexOf(',') !== -1)
				params.target = null;

			return api.get('/api/v1/notificationslist', params)
				.prop('data')
				.then(function(data) {
					data.items.forEach(function(item) {
						if (item.location.indexOf('Not specified') === 0)
							item.location = null;
						item.isMessage = item.kind === 'message';
					});

					return data;
				});
		},

		removeSelection: function() {
			var self = this;
			api.put('/api/v1/notificationslist', { threads: this.selection })
			.then(this.render.bind(this))
			.then(function(){
				alerts.success('Threads successfully deleted');
				self.selection.length = 0;
			});
		},

		getThreads: function() {
			var self = this;
			return this.threads ?
				Promise.normalize(this.threads) :
				this.loadData().then(function(data) {
					self.threads = data.items.map(function(item) {
						return item.reference;
					});
					return self.threads;
				});
		},

		refresh: function(data) {
			if (!this.lastPage)
				this.lastPage = Math.ceil(data.count / data.items.length);

			var self = this;
			this.$list.html(data.items.map(itemTpl).join(''));
			this.$list.children()
				.click(function(evt) {
					if ($(evt.target).attr('href'))
						return;
					var thread = $(this).data('thread');
					self.lastFilters = self.serializeFilters();
					document.location.hash = '#/messages/' + thread;
				})
				.map(function() {
					var check = $('<div class="messages-check"><input type="checkbox"></div>');
					$(this).prepend(check);
					return check.get(0);
				})
				.click(function() {
					event.stopPropagation();
				})
				.on('change', function() {
					var thread = $(this).closest('.notification-item').data('thread');

					self.selection = self.selection.filter(function(a) { return a !== thread; });
					if ($(this).is(':checked'))
						self.selection.push(thread);
				});

			this.renderCounters(data.startResult, data.endResult, data.count);

			this.threads = data.items.map(function(item) {
				return item.reference;
			});

			return this.threads;
		},

		destroy: function(){
			this.remove();
			this.unbind();
		},

		selectTab: function(type) {
			type = type || '';
			this.$('.button.selected').removeClass('selected');
			this.$('.button[data-filter="' + type + '"]').addClass('selected');

			if (type === 'reqinv')
				this.addFilters();
			else
				this.removeFilters();
		},

		addFilters: function(){
			if (this.$('#ri-status').is(':visible'))
				return;

			this.$('#ri-status').show();
			this.$("#ri-filters")
			    .append('<option value="type">Wing Type</option>')
			    .append('<option value="date-start">Wing Date</option>');
		},

		removeFilters: function(){
			if (!this.$('#ri-status').is(':visible'))
				return;

			this.$('#ri-status').hide();
			this.$("#ri-filters")
				.find('option[value=type], option[value=date-start]')
				.remove();
		},

		renderCounters: function(){
			var args = arguments;
			this.$(".resultCounter").find("span").wrap(function(span){
				$(this).text(args[span]);
			});
		},

		nextPage: function(e){
			if (e) e.preventDefault();
			if (this.activePage + 1 > this.lastPage)
				return Promise.resolved(false);

			++this.activePage;
			return this.applyFilters();
		},

		previousPage: function(e){
			if (e) e.preventDefault();
			if (this.activePage - 1 < 1)
				return Promise.resolved(false);

			--this.activePage;
			return this.applyFilters();
		},

		resetPager: function(){
			this.activePage = 1;
			this.lastPage = null;
		}
	});

	return new NotificationsView;
});

define('tmpl!templates/app/thread.html',[ 'core/view' ], function(view) {return view('<div class="searchbar">\n\t<div id="search">\n\t\t<input type="text" id="search-query" class="size-extralarge">\n\t\t<a id="search-btn" class="button">\n\t\t\t<i class="icon-search">Search icon</i>\n\t\t</a>\n</div>\n</div>\n\n<div class="messages-header">\n\t<div class="messages-tabs">\n\t\t<ul id="notification-type">\n\t\t\t<li class="button selected" data-filter="">All</li>\n\t\t\t<li class="button" data-filter="reqinv">Request & Invitations</li>\n\t\t\t<li class="button" data-filter="msg">Messages</li>\n\t\t</ul>\n\t</div>\n\n\t<div class="button-bar">\n\t\t<ul>\n\t\t\t<li><button class="button1 send-message-btn">MESSAGE</button></li>\n\t\t\t<li><button class="button1 send-request-btn selected">REQUEST</button></li>\n\t\t\t<li><button class="button1 send-invitation-btn">INVITE</button></li>\n\t\t</ul>\n\t</div><!-- EOF button-bar -->\n</div><!-- EOF thread-header -->\n\n<div class="messages-msg">\n\t<div class="floatality">\n\t\t<a id="back" class="button-back">\n\t\t\t<i class="icon-back">Back</i>\n\t\t</a>\n\t\t<button id="delete-thread" class="button-delete" value="Delete">Delete</button>\n\t\t<div class="messages-pager">\n\t\t\t<!--<div class="resultCounter">\n\t\t\t\t<span>1</span>\n\t\t\t\t<span>10</span>\n\t\t\t\t<span>50</span>\n\t\t\t</div>-->\n\t\t\t<div class="button-group">\n\t\t\t\t<a class="button-pager-previous" id="previous" data-id="{{previous}}" {{#unless previous}}disabled{{/unless}}>\n\t\t\t\t\t<i class="icon-pager-previous">button previous</i>\n\t\t\t\t</a>\n\t\t\t\t<a class="button-pager-next" id="next" data-id="{{next}}" {{#unless next}}disabled{{/unless}}>\n\t\t\t\t\t<i class="icon-pager-next">button next</i>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<ul id="notif-list">\n\t\t{{{items}}}\n\t\t<li class="thread-item">\n\t\t\t<div class="message-arrow">\n\t\t\t\t<span class="msg-arrow">message arrow</span>\n\t\t\t</div>\n\t\t\t<div class="response-item">\n\t\t\t\t<div class="messages-avatar">\n\t\t\t\t\t<!-- <span class="{{#if senderOnline}}online{{/if}}">{{senderOnline}}</span> -->\n\t\t\t\t\t<img src="{{me.avatar}}">\n\t\t\t\t</div>\n\t\t\t\t<div id="response-options">\n\t\t\t\t\t{{#if isMessage}}\n\t\t\t\t\t<span>Click to</span>\n\t\t\t\t\t<span id="response-reply">Reply</span>\n\t\t\t\t\t{{else}}\n\t\t\t\t\t<span>Click to</span>\n\n\t\t\t\t\t{{#each options}}\n\t\t\t\t\t<span class="response-option option-{{self}}">\n\t\t\t\t\t\t{{self}}</span>{{#unless last }}{{#if secondLast}} or {{else}}, {{/if}}{{/unless}}\n\t\t\t\t\t\t{{/each}}\n\t\t\t\t\t\t{{/if}}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id="write-response" style="display: none">\n\t\t\t\t\t\t<div class="response-wrapper">\n\t\t\t\t\t\t\t{{#unless isMessage}}\n\t\t\t\t\t\t\t<div class="state-flag {{#if iStarted }}from-me{{else}}to-me{{/if}} {{enum state \'notification-state\'}}" style="display: none">\n\t\t\t\t\t\t\t\t<i>state</i>\n\t\t\t\t\t\t\t\t<span>{{enum state \'notification-state\'}}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="messages-params-box" style="display: none;">\n\t\t\t\t\t\t\t\t<dl>\n\t\t\t\t\t\t\t\t\t<dt>Requested wing :</dt>\n\t\t\t\t\t\t\t\t\t<dd {{#if_contains parameters.modified "wingName"}}class="modified"{{/if_contains}}>{{parameters.wingName}} <span>({{type}} in {{parameters.wingCity}})</span></dd>\n\t\t\t\t\t\t\t\t</dl>\n\t\t\t\t\t\t\t\t<dl>\n\t\t\t\t\t\t\t\t\t<dt>Arrival date :</dt>\n\t\t\t\t\t\t\t\t\t<dd {{#if_contains parameters.modified "startDate"}}class="modified"{{/if_contains}}>{{date parameters.startDate}}</dd>\n\t\t\t\t\t\t\t\t</dl>\n\t\t\t\t\t\t\t\t<dl>\n\t\t\t\t\t\t\t\t\t<dt>Deperture date :</dt>\n\t\t\t\t\t\t\t\t\t<dd {{#if_contains parameters.modified "endDate"}}class="modified"{{/if_contains}}>{{date parameters.endDate}}</dd>\n\t\t\t\t\t\t\t\t</dl>\n\t\t\t\t\t\t\t\t<dl>\n\t\t\t\t\t\t\t\t\t<dt>Number of people :</dt>\n\t\t\t\t\t\t\t\t\t<dd {{#if_contains parameters.modified "capacity"}}class="modified"{{/if_contains}}>{{parameters.capacity}}</dd>\n\t\t\t\t\t\t\t\t</dl>\n\t\t\t\t\t\t\t\t<dl>\n\t\t\t\t\t\t\t\t\t<dt>Arriving via :</dt>\n\t\t\t\t\t\t\t\t\t<dd>{{parameters.arrivingVia}}</dd>\n\t\t\t\t\t\t\t\t</dl>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div id="edit-wing-params" style="display: none">\n\t\t\t\t\t\t\t\t<form id="wing-params-form">\n\t\t\t\t\t\t\t\t\t<div class="response-header">\n\t\t\t\t\t\t\t\t\t\t<div class="response-header-dates">\n\t\t\t\t\t\t\t\t\t\t\t<span>{{type}} in {{parameters.wingCity}}{{parameters.wingName}}</span>\n\t\t\t\t\t\t\t\t\t\t\t<input type="text" name="startDate" class="input-sdate" placeholder="Start date" value="{{date parameters.startDate \'YYYY-MM-DD\'}}">\n\t\t\t\t\t\t\t\t\t\t\t<input type="text" name="endDate" class="input-edate" placeholder="End date" value="{{date parameters.endDate \'YYYY-MM-DD\'}}">\n\t\t\t\t\t\t\t\t\t\t\t<select name="capacity" class="input-mini required">\n\t\t\t\t\t\t\t\t\t\t\t\t{{#range 9}}\n\t\t\t\t\t\t\t\t\t\t\t\t<option value="{{indexPlusOne}}" {{selected capacity indexPlusOne}}>{{indexPlusOne}}</option>\n\t\t\t\t\t\t\t\t\t\t\t\t{{/range}}\n\t\t\t\t\t\t\t\t\t\t\t\t<option value="+9" {{selected capacity \'+9\'}}>+9</option>\n\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t<span class="help-block"></span>\n\t\t\t\t\t\t\t\t\t\t</div><!-- EOF response-header-dates -->\n\t\t\t\t\t\t\t\t\t</div><!-- EOF response-header -->\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{{/unless}}\n\t\t\t\t\t\t\t<textarea placeholder="Write your message"></textarea>\n\t\t\t\t\t\t</div><!-- EOF response-wrapper -->\n\t\t\t\t\t\t<div class="button-group">\n\t\t\t\t\t\t\t<button id="cancel-response" class="button">Cancel</button>\n\t\t\t\t\t\t\t<button id="send-response" class="button-highlight"data-loading-text="Sending...">Send</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div><!-- EOF write-response -->\n\t\t\t\t</div><!-- EOF response-item-1 -->\n\t\t\t</li>\n\t\t</ul>\n\t</div><!-- EOF message-msg -->\n');});
define('tmpl!templates/app/thread-item.html',[ 'core/view' ], function(view) {return view('<li class="thread-item" data-type="notification-item" data-rel="{{ id }}" data-user-id="{{ senderId }}" data-user-name="{{ senderName }}">\n\t<div class="message-arrow">\n\t\t<span>message arrow</span>\n\t</div>\n\t<div class="messages-header">\n\t\t<div class="messages-avatar">\n\t\t\t<img src="{{ senderSmallAvatar }}">\n\t\t</div>\n\t\t<div class="messages-sender {{#unless read }}unread{{/unless}}">\n\t\t\t<legend>\n\t\t\t\t{{#if isMessage }}\n\t\t\t\t\tMessage from\n\t\t\t\t{{else}}\n\t\t\t\t\tRequest from\n\t\t\t\t{{/if}}\n\t\t\t</legend>\n\t\t\t<h1 class="messages-name">\n\t\t\t\t<a href="#/profiles/{{ senderId }}/about">{{ senderName }}</a>\n\t\t\t</h1>\n\t\t\t<span class="messages-age">[{{ senderAge }}]</span>\n\t\t\t<span class="{{#if online }}online{{/if}}">{{ senderConnected }}</span>\n\t\t\t<h2>{{ senderLocation }}</h2>\n\t\t\t<h3>{{#if fromMe }}From{{else}}To{{/if}} me</h3>\n\t\t</div>\n\t\t<div class="messages-date-msg state-flag {{#if fromMe }}from-me{{else}}to-me{{/if}} {{enum wing.state \'notification-state\' }}">\n\t\t\t<h1>{{date created "MMM Do, HH:mm" }} </h1>\n\t\t\t{{#if isMessage }}\n\t\t\t\t<h2>Message</h2>\n\t\t\t{{else}}\n\t\t\t\t<h2>Request <span>{{enum wing.state \'notification-state\' }}</span></h2>\n\t\t\t{{/if}}\n\t\t</div>\n\t</div>\n\t<div class="messages-content">\n\t\t{{#if isMessage }}\n\t\t\t{{ content.message }}\n\t\t{{else}}\n\t\t\t<div class="messages-params-box">\n\t\t\t\t<dl>\n\t\t\t\t\t<dt>Requested wing : </dt>\n\t\t\t\t\t<dd {{#if_contains wing.parameters.modified "wingName" }}class="modified"{{/if_contains}}>{{ wing.parameters.wingName }} ({{ wing.type }} in {{ wing.parameters.wingCity }})</dd>\n\t\t\t\t</dl>\n\t\t\t\t<dl>\n\t\t\t\t\t<dt>Arrival date : </dt>\n\t\t\t\t\t<dd {{#if_contains wing.parameters.modified "startDate" }}class="modified"{{/if_contains}}>{{ date wing.parameters.startDate }}</dd>\n\t\t\t\t</dl>\n\t\t\t\t<dl>\n\t\t\t\t\t<dt>Deperture date : </dt>\n\t\t\t\t\t<dd {{#if_contains wing.parameters.modified "endDate" }}class="modified"{{/if_contains}}>{{ date wing.parameters.endDate }}</dd>\n\t\t\t\t</dl>\n\t\t\t\t<dl>\n\t\t\t\t\t<dt>Number of people : </dt>\n\t\t\t\t\t<dd {{#if_contains wing.parameters.modified "capacity" }}class="modified"{{/if_contains}}>{{ wing.parameters.capacity }}</dd>\n\t\t\t\t</dl>\n\t\t\t\t<dl>\n\t\t\t\t\t<dt>Arriving via : </dt>\n\t\t\t\t\t<dd>{{ wing.parameters.arrivingVia }}</dd>\n\t\t\t\t</dl>\n\t\t\t</div>\n\t\t\t<div class="messages-msg">\n\t\t\t\t{{ content.message }}\n\t\t\t</div>\n\t\t{{/if}}\n\t</div>\n</li>\n');});
define('views/app/thread',['require','jquery','backbone','api2','promise','models/Account','views/lib/alerts','views/lib/notifications','views/app/notifications','tmpl!templates/app/thread.html','tmpl!templates/app/thread-item.html'],function(require) {

	var $ = require("jquery");
	var Backbone = require("backbone");
	var api = require("api2");
	var Promise = require("promise");
	var UserAccount = require('models/Account');
	var alerts = require('views/lib/alerts');
	var notifications = require('views/lib/notifications');
	var notifList = require("views/app/notifications");
	var threadTpl = require("tmpl!templates/app/thread.html");
	var itemTpl = require("tmpl!templates/app/thread-item.html");

	var ThreadView = Backbone.View.extend({
		el: "#main",

		events: {
			'click #back': 'back',
			'click #previous': 'previous',
			'click #next': 'next',

			'click #delete-thread': 'remove',
			'click #open-request': 'request',
			'click #open-invite': 'invite',
			'click #open-message': 'reply',

			'click #response-reply': 'reply',
			'click #response-request': 'request',
			'click #reponse-invite': 'invite',

			'click #send-response': 'sendResponse',
			'click #cancel-response': 'cancelResponse',

			'click .option-Chat': 'reply',
			'click .option-Accept': 'optAccept',
			'click .option-Maybe': 'optMaybe',
			'click .option-Reopen': 'optReopen',
			'click .option-Deny': 'optDeny',
			'click .option-Cancel': 'optDeny',

			'click li.thread-item': 'toggleContent',
		},

		responseValidation: {
			rules: {
				startDate: {
					date: true,
				},
				endDate: {
					date: true,
				}
			},
			errorPlacement: function(error, element) {
				error.appendTo(element.nextAll("span.help-block"));
			},
		},

		initialize: function() {
			this.refresh = this.refresh.bind(this);
		},

		render: function(id) {
			var self = this;

			this.current = { id: id };
			return notifList.getThreads().then(function(threads) {
				var index = threads.indexOf(id);

				var prevThread = threads[index - 1];
				var nextThread = threads[index + 1];

				return Promise.all(
					prevThread || notifList.previousPage().then(function(threads) { return threads && threads[threads.lenght - 1]; }),
					nextThread || notifList.    nextPage().then(function(threads) { return threads && threads[0]; })
				).spread(function(prevThread, nextThread) {
					return api.get('/api/v1/notificationsthread/' + id)
						.prop('data')
						.then(function(data){
							if (data.kind !== "message")
								self.parseOptions(data.options, data.firstSender, data.wing.state);

							data.items = data.items.map(function(item){
								if (item.senderLocation.indexOf('Not specified') === 0)
									item.senderLocation = null;
								return item;
							});

							self.data = data;
							return data;
						})
						.then(self.refresh.bind(self, prevThread, nextThread));
				});
			});
		},

		refresh: function(prevThread, nextThread, data) {
			var isMessage = data.kind === 'message';
			var me = api.getUserId();
			var avatar = new UserAccount({ id: api.getUserId() }).get('avatar');

			var items = data.items.map(function(item, index) {
				return _.extend(item, {
					index: index,
					fromMe: item.senderId === me,
					reference: data.reference,
					isMessage: isMessage,

					id: null,
					read: null,
					online: null,
				});
			});

			this.$el.html(threadTpl(data, {
				isMessage: isMessage,
				options: data.options,
				previous: prevThread,
				next: nextThread,
				me: { avatar: avatar },
				items: items.map(itemTpl).join(''),
			}));

			this.$('li .messages-content').hide().last().show();
		},

		remove: function() {
			var self = this;
			return api.put('/api/v1/notificationslist', {
				threads: [ this.current.id ],
			}).then(function() {
				alerts.success('Thread removed');
				self.back();
			}, function(error) {
				debugger;
				alerts.defaultError(error);
			});
		},

		toggleContent: function(event) {
			if ($(event.target).attr('href'))
				return;
			var item = $(event.target).closest('li.thread-item');
			if (!item.next().is('.response-item'))
				item.find('.messages-content').toggle();
		},

		back: function() {
			notifList.applyFilters();
		},

		previous: function() {
			document.location.hash = '#/messages/' + this.$('#previous').data('id');
		},

		next: function() {
			document.location.hash = '#/messages/' + this.$('#next').data('id');
		},

		createNotification: function() {
		},

		request: function() {
			var inter = this.current.interlocutor;
			notifications.request(inter.id, inter.name);
		},

		invite: function() {
			var inter = this.current.interlocutor;
			notifications.invitation(inter.id, inter.name);
		},

		reply: function() {
			if (this.data.kind !== "message")
				this.prevState = this.data.wing.state;

			this.$('#response-options').hide();
			this.$('#write-response')
				.show()
				.find('textarea')
					.focus();
		},

		cancelResponse: function() {
			this.$('#response-options').show();
			this.$('#write-response')
				.hide()
				.find('textarea')
					.val('');

			this.$('#write-response > span.state-flag')
					.hide();

			this.$('#edit-wing-params')
				.hide();

			if (this.prevState) {
				var e = Handlebars.helpers['enum'];
				this.$('.state-flag')
					.removeClass(e(this.data.wing.state, "notification-state"))
					.addClass(e(this.prevState, "notification-state"))
					.find("span")
					.text(e(this.prevState, "notification-state"));

				this.data.wing.state = this.prevState;
			}
		},

		sendResponse: function() {
			var form = this.$("#edit-wing-params > form");
			if (form.length && !form.valid())
				return Promise.resolved(false);

			var resp = { content: this.$('#write-response textarea').val() };
			if (!resp.content)
				return Promise.resolved(false);

			if (this.data.kind === "request" || this.data.kind === "invite"){
				resp.wingParameters = this.getWingParameters(this.data.wing.state);
				resp.state = this.getWingState();
			}

			this.$("#send-response").button('loading');

			var self = this;
			return api.post('/api/v1/notificationsthread/', {
				reference: this.current.id,
				data: resp,
			}).then(function() {
				return self.render(self.current.id);
			}).then(function() {
				alerts.success('Response sent');
				self.$("#send-response").button('reset');
			}, function() {
				debugger;
				alerts.defaultError();
			});
		},

		optAccept: function() {
			this.reply();
			this.data.wing.state = "A";
			this.$('#edit-wing-params').show();
			this.handleOption(this.data.wing.state, this.prevState);
		},

		optMaybe: function() {
			this.reply();
			this.data.wing.state = "M";
			this.$('#edit-wing-params').show();
			this.handleOption(this.data.wing.state, this.prevState);
		},

		optReopen: function() {
			this.reply();
			this.data.wing.state = "P";
			this.$('#edit-wing-params').show();
			this.handleOption(this.data.wing.state, this.prevState);
		},

		optDeny: function() {
			this.reply();
			this.data.wing.state = "D";
			this.$('#write-response > .params-box').show();
			this.handleOption(this.data.wing.state, this.prevState);
		},

		handleOption: function(option, prevState) {
			var e = Handlebars.helpers['enum'];
			this.$('.state-flag')
				.show()
				.removeClass(e(prevState, "notification-state"))
				.addClass(e(option, "notification-state"))
				.find("span")
				.text(e(option, "notification-state"));

			this.$("#wing-params-form")
				.validate(this.responseValidation);


			this.$("input[name=startDate]").datepicker({
				minDate: new Date(),
				dateFormat: "yy-mm-dd",
			});

			this.$("input[name=endDate]").datepicker({
				minDate: new Date(),
				dateFormat: "yy-mm-dd",
			}).rules("add", {
				gte: this.$("input[name=startDate]"),
			});

			this.$('select[name=capacity]')
				.val(this.data.wing.parameters.capacity);
		},

		parseOptions: function(options, firstSender, wingState){
			if (api.getUserId() === firstSender)
				options[options.indexOf("Deny")] = "Cancel";
			if (wingState === "D")
				options[options.indexOf("Pending")] = "Reopen";
		},

		getWingParameters: function(state){
			if (state === 'M' || state === 'A' || state === 'P'){
				this.data.wing.parameters.startDate = +new Date(this.$("input[name=startDate]").val())/1000;
				this.data.wing.parameters.endDate = +new Date(this.$("input[name=endDate]").val())/1000;
				this.data.wing.parameters.capacity = this.$("select[name=capacity]").val();
			}

			return {
				startDate: this.data.wing.parameters.startDate,
				endDate: this.data.wing.parameters.endDate,
				capacity: this.data.wing.parameters.capacity,
				flexibleStartDate: this.data.wing.parameters.flexibleStartDate,
				flexibleEndDate: this.data.wing.parameters.flexibleEndDate,
			};
		},

		getWingState: function(){
			return this.data.wing.state;
		}
	});

	return new ThreadView;
});

//globals _gaq

define('router',['require','jquery','backbone','api2','views/home/main','views/app/home','views/home/register','views/home/login','views/home/help','views/home/activate','views/home/password','views/app/logout','views/app/settings','views/app/deleteAccount','views/app/ProfileView','views/app/notifications','views/app/thread','views/app/header'],function(require) {

	var $ = require("jquery");
	var Backbone = require("backbone");
	var api = require("api2");

	var homeView = require("views/home/main");
	var appHomeView = require("views/app/home");
	var registerView = require("views/home/register");
	var loginView = require("views/home/login");
	var helpCenter = require("views/home/help");
	var activateView = require("views/home/activate");
	var passwordView = require("views/home/password");
	var logoutView = require("views/app/logout");
	var SettingsView = require("views/app/settings");
	var deleteAccount = require("views/app/deleteAccount");
	var ProfileView = require("views/app/ProfileView");
	var notificationsView = require("views/app/notifications");
	var threadView = require("views/app/thread");
	var Header = require("views/app/header");


	var Router = Backbone.Router.extend({
		routes: {
			"register": "register",
			"login": "login",
			"help": "help",
			"help#:tab": "help",
			"activate/:token": "activate",
			"forgot": "forgotPassword",
			"forgot/:token": "forgotPassword",
			"search/?:params": "search",
			//Logged User patterns
			"logout": "logout",
			"settings":"settings",
			"settings/delete":"deleteAccount",

			"profiles/:id/about":"aboutProfile",
			"profiles/:id/wings":"wingsProfile",

			"messages/:id": "showThread",
			"messages/filter/:filters": "showNotifications",
			"messages": "showNotifications",
			//Default action
			"*actions": "defaultAction",
		},

		//Anonymous User hashs
		register: function(){
			this.showHeaderSearch(false);
			this.showBackgroundImage(true);
			if (api.userIsLoggedIn())
				return this.defaultAction();
			registerView.render();
		},
		login: function(){
			this.showHeaderSearch(false);
			this.showBackgroundImage(true);
			if (api.userIsLoggedIn())
				return this.defaultAction();
			loginView.render();
		},
		help: function(tabId){
			var tab = tabId || null;
			this.showHeaderSearch(false);
			this.showBackgroundImage(false);
			helpCenter.render(tab);
		},
		activate: function(id){
			this.showHeaderSearch(false);
			this.showBackgroundImage(false);
			activateView.render(id);
		},
		forgotPassword: function(id){
			this.showHeaderSearch(false);
			this.showBackgroundImage(false);
			passwordView.render(id);
		},
		landing: function() {
			document.location = 'landing.html';
		},

		search: function(params){
			this.showHeaderSearch(false);
			this.showBackgroundImage(false);
			var unserialized = $.deparam(params);
			homeView.render(unserialized);

			api.get(api.getApiVersion() + "/profiles", unserialized)
				.prop('data')
				.then(function(results){
					homeView.renderResults(unserialized, results);
				});
		},
		//Logged User hashs
		logout: function() {
			this.showHeaderSearch(false);
			this.showBackgroundImage(false);
			logoutView.logout();
		},
		settings: function(){
			this.showHeaderSearch(true);
			this.showBackgroundImage(false);
			if (!api.userIsLoggedIn())
				return this.landing();

			if (!this.settingsView)
				this.settingsView = new SettingsView;
			this.settingsView.render();
		},

		deleteAccount: function(){
			this.showHeaderSearch(true);
			this.showBackgroundImage(false);
			if (!api.userIsLoggedIn())
				return this.landing();

			deleteAccount.render();
		},

		aboutProfile: function(userId){
			this.showHeaderSearch(true);
			this.showBackgroundImage(false);
			if (!api.userIsLoggedIn())
				return this.landing();

			if (!this.previewView)
				this.previewView = new ProfileView(+userId);
			this.previewView.render(+userId, "about");

		},
		wingsProfile: function(userId){
			this.showHeaderSearch(true);
			this.showBackgroundImage(false);
			if (!api.userIsLoggedIn())
				return this.landing();

			if (!this.previewView)
				this.previewView = new ProfileView(+userId);
			this.previewView.render(+userId, "wings");
		},

		showNotifications: function(filters){
			this.showHeaderSearch(true);
			this.showBackgroundImage(false);
			if (!api.userIsLoggedIn())
				return this.landing();

			notificationsView.render(JSON.parse(filters || '{}'));
		},
		showThread: function(id) {
			this.showHeaderSearch(true);
			this.showBackgroundImage(false);
			if (!api.userIsLoggedIn())
				return this.landing();

			threadView.render(id);
		},
		defaultAction: function(){
			this.showHeaderSearch(false);
			this.showBackgroundImage(false);
			console.log('router.js: defaultAction()');
			if (!api.userIsLoggedIn())
				return this.landing();

			return appHomeView.render();
		},
		_trackPageview: function() {
			var url = Backbone.history.getFragment();
			return window._gaq.push(['_trackPageview', "/" + url]);
		},
		initialize: function(){
			console.log('router.js: initialize() ', api.getAuthToken(), api.getUserId());

			if (api.userIsLoggedIn()){
				if (!this.header)
					this.header = new Header;
				else
					this.header.render();
			}

			Backbone.history.start();
			return this.bind('all', this._trackPageview);
		},

		showHeaderSearch: function(state) {
			if (this.header)
				this.header.showSearch(state);
		},

		showBackgroundImage: function(state) {
			if (state)
				$('div.background-roller').addClass('background-10');
			else
				$('div.background-roller').removeClass('background-10');
		}
	});

	return Router;

});

/* ===================================================
 * bootstrap-transition.js v2.1.0
 * http://twitter.github.com/bootstrap/javascript.html#transitions
 * ===================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */


!function ($) {

  $(function () {

     // jshint ;_;


    /* CSS TRANSITION SUPPORT (http://www.modernizr.com/)
     * ======================================================= */

    $.support.transition = (function () {

      var transitionEnd = (function () {

        var el = document.createElement('bootstrap')
          , transEndEventNames = {
               'WebkitTransition' : 'webkitTransitionEnd'
            ,  'MozTransition'    : 'transitionend'
            ,  'OTransition'      : 'oTransitionEnd otransitionend'
            ,  'transition'       : 'transitionend'
            }
          , name

        for (name in transEndEventNames){
          if (el.style[name] !== undefined) {
            return transEndEventNames[name]
          }
        }

      }())

      return transitionEnd && {
        end: transitionEnd
      }

    })()

  })

}(window.jQuery);
/* =========================================================
 * bootstrap-modal.js v2.1.0
 * http://twitter.github.com/bootstrap/javascript.html#modals
 * =========================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================= */


!function ($) {

   // jshint ;_;


 /* MODAL CLASS DEFINITION
  * ====================== */

  var Modal = function (element, options) {
    this.options = options
    this.$element = $(element)
      .delegate('[data-dismiss="modal"]', 'click.dismiss.modal', $.proxy(this.hide, this))
    this.options.remote && this.$element.find('.modal-body').load(this.options.remote)
  }

  Modal.prototype = {

      constructor: Modal

    , toggle: function () {
        return this[!this.isShown ? 'show' : 'hide']()
      }

    , show: function () {
        var that = this
          , e = $.Event('show')

        this.$element.trigger(e)

        if (this.isShown || e.isDefaultPrevented()) return

        $('body').addClass('modal-open')

        this.isShown = true

        this.escape()

        this.backdrop(function () {
          var transition = $.support.transition && that.$element.hasClass('fade')

          if (!that.$element.parent().length) {
            that.$element.appendTo(document.body) //don't move modals dom position
          }

          that.$element
            .show()

          if (transition) {
            that.$element[0].offsetWidth // force reflow
          }

          that.$element
            .addClass('in')
            .attr('aria-hidden', false)
            .focus()

          that.enforceFocus()

          transition ?
            that.$element.one($.support.transition.end, function () { that.$element.trigger('shown') }) :
            that.$element.trigger('shown')

        })
      }

    , hide: function (e) {
        e && e.preventDefault()

        var that = this

        e = $.Event('hide')

        this.$element.trigger(e)

        if (!this.isShown || e.isDefaultPrevented()) return

        this.isShown = false

        $('body').removeClass('modal-open')

        this.escape()

        $(document).off('focusin.modal')

        this.$element
          .removeClass('in')
          .attr('aria-hidden', true)

        $.support.transition && this.$element.hasClass('fade') ?
          this.hideWithTransition() :
          this.hideModal()
      }

    , enforceFocus: function () {
        var that = this
        $(document).on('focusin.modal', function (e) {
          if (that.$element[0] !== e.target && !that.$element.has(e.target).length) {
            that.$element.focus()
          }
        })
      }

    , escape: function () {
        var that = this
        if (this.isShown && this.options.keyboard) {
          this.$element.on('keyup.dismiss.modal', function ( e ) {
            e.which == 27 && that.hide()
          })
        } else if (!this.isShown) {
          this.$element.off('keyup.dismiss.modal')
        }
      }

    , hideWithTransition: function () {
        var that = this
          , timeout = setTimeout(function () {
              that.$element.off($.support.transition.end)
              that.hideModal()
            }, 500)

        this.$element.one($.support.transition.end, function () {
          clearTimeout(timeout)
          that.hideModal()
        })
      }

    , hideModal: function (that) {
        this.$element
          .hide()
          .trigger('hidden')

        this.backdrop()
      }

    , removeBackdrop: function () {
        this.$backdrop.remove()
        this.$backdrop = null
      }

    , backdrop: function (callback) {
        var that = this
          , animate = this.$element.hasClass('fade') ? 'fade' : ''

        if (this.isShown && this.options.backdrop) {
          var doAnimate = $.support.transition && animate

          this.$backdrop = $('<div class="modal-backdrop ' + animate + '" />')
            .appendTo(document.body)

          if (this.options.backdrop != 'static') {
            this.$backdrop.click($.proxy(this.hide, this))
          }

          if (doAnimate) this.$backdrop[0].offsetWidth // force reflow

          this.$backdrop.addClass('in')

          doAnimate ?
            this.$backdrop.one($.support.transition.end, callback) :
            callback()

        } else if (!this.isShown && this.$backdrop) {
          this.$backdrop.removeClass('in')

          $.support.transition && this.$element.hasClass('fade')?
            this.$backdrop.one($.support.transition.end, $.proxy(this.removeBackdrop, this)) :
            this.removeBackdrop()

        } else if (callback) {
          callback()
        }
      }
  }


 /* MODAL PLUGIN DEFINITION
  * ======================= */

  $.fn.modal = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('modal')
        , options = $.extend({}, $.fn.modal.defaults, $this.data(), typeof option == 'object' && option)
      if (!data) $this.data('modal', (data = new Modal(this, options)))
      if (typeof option == 'string') data[option]()
      else if (options.show) data.show()
    })
  }

  $.fn.modal.defaults = {
      backdrop: true
    , keyboard: true
    , show: true
  }

  $.fn.modal.Constructor = Modal


 /* MODAL DATA-API
  * ============== */

  $(function () {
    $('body').on('click.modal.data-api', '[data-toggle="modal"]', function ( e ) {
      var $this = $(this)
        , href = $this.attr('href')
        , $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\s]+$)/, ''))) //strip for ie7
        , option = $target.data('modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())

      e.preventDefault()

      $target
        .modal(option)
        .one('hide', function () {
          $this.focus()
        })
    })
  })

}(window.jQuery);
/* ============================================================
 * bootstrap-dropdown.js v2.1.0
 * http://twitter.github.com/bootstrap/javascript.html#dropdowns
 * ============================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================ */


!function ($) {

   // jshint ;_;


 /* DROPDOWN CLASS DEFINITION
  * ========================= */

  var toggle = '[data-toggle=dropdown]'
    , Dropdown = function (element) {
        var $el = $(element).on('click.dropdown.data-api', this.toggle)
        $('html').on('click.dropdown.data-api', function () {
          $el.parent().removeClass('open')
        })
      }

  Dropdown.prototype = {

    constructor: Dropdown

  , toggle: function (e) {
      var $this = $(this)
        , $parent
        , isActive

      if ($this.is('.disabled, :disabled')) return

      $parent = getParent($this)

      isActive = $parent.hasClass('open')

      clearMenus()

      if (!isActive) {
        $parent.toggleClass('open')
        $this.focus()
      }

      return false
    }

  , keydown: function (e) {
      var $this
        , $items
        , $active
        , $parent
        , isActive
        , index

      if (!/(38|40|27)/.test(e.keyCode)) return

      $this = $(this)

      e.preventDefault()
      e.stopPropagation()

      if ($this.is('.disabled, :disabled')) return

      $parent = getParent($this)

      isActive = $parent.hasClass('open')

      if (!isActive || (isActive && e.keyCode == 27)) return $this.click()

      $items = $('[role=menu] li:not(.divider) a', $parent)

      if (!$items.length) return

      index = $items.index($items.filter(':focus'))

      if (e.keyCode == 38 && index > 0) index--                                        // up
      if (e.keyCode == 40 && index < $items.length - 1) index++                        // down
      if (!~index) index = 0

      $items
        .eq(index)
        .focus()
    }

  }

  function clearMenus() {
    getParent($(toggle))
      .removeClass('open')
  }

  function getParent($this) {
    var selector = $this.attr('data-target')
      , $parent

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') //strip for ie7
    }

    $parent = $(selector)
    $parent.length || ($parent = $this.parent())

    return $parent
  }


  /* DROPDOWN PLUGIN DEFINITION
   * ========================== */

  $.fn.dropdown = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('dropdown')
      if (!data) $this.data('dropdown', (data = new Dropdown(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  $.fn.dropdown.Constructor = Dropdown


  /* APPLY TO STANDARD DROPDOWN ELEMENTS
   * =================================== */

  $(function () {
    $('html')
      .on('click.dropdown.data-api touchstart.dropdown.data-api', clearMenus)
    $('body')
      .on('click.dropdown touchstart.dropdown.data-api', '.dropdown', function (e) { e.stopPropagation() })
      .on('click.dropdown.data-api touchstart.dropdown.data-api'  , toggle, Dropdown.prototype.toggle)
      .on('keydown.dropdown.data-api touchstart.dropdown.data-api', toggle + ', [role=menu]' , Dropdown.prototype.keydown)
  })

}(window.jQuery);
/* =============================================================
 * bootstrap-scrollspy.js v2.1.0
 * http://twitter.github.com/bootstrap/javascript.html#scrollspy
 * =============================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================== */


!function ($) {

   // jshint ;_;


 /* SCROLLSPY CLASS DEFINITION
  * ========================== */

  function ScrollSpy(element, options) {
    var process = $.proxy(this.process, this)
      , $element = $(element).is('body') ? $(window) : $(element)
      , href
    this.options = $.extend({}, $.fn.scrollspy.defaults, options)
    this.$scrollElement = $element.on('scroll.scroll-spy.data-api', process)
    this.selector = (this.options.target
      || ((href = $(element).attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '')) //strip for ie7
      || '') + ' .nav li > a'
    this.$body = $('body')
    this.refresh()
    this.process()
  }

  ScrollSpy.prototype = {

      constructor: ScrollSpy

    , refresh: function () {
        var self = this
          , $targets

        this.offsets = $([])
        this.targets = $([])

        $targets = this.$body
          .find(this.selector)
          .map(function () {
            var $el = $(this)
              , href = $el.data('target') || $el.attr('href')
              , $href = /^#\w/.test(href) && $(href)
            return ( $href
              && $href.length
              && [[ $href.position().top, href ]] ) || null
          })
          .sort(function (a, b) { return a[0] - b[0] })
          .each(function () {
            self.offsets.push(this[0])
            self.targets.push(this[1])
          })
      }

    , process: function () {
        var scrollTop = this.$scrollElement.scrollTop() + this.options.offset
          , scrollHeight = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight
          , maxScroll = scrollHeight - this.$scrollElement.height()
          , offsets = this.offsets
          , targets = this.targets
          , activeTarget = this.activeTarget
          , i

        if (scrollTop >= maxScroll) {
          return activeTarget != (i = targets.last()[0])
            && this.activate ( i )
        }

        for (i = offsets.length; i--;) {
          activeTarget != targets[i]
            && scrollTop >= offsets[i]
            && (!offsets[i + 1] || scrollTop <= offsets[i + 1])
            && this.activate( targets[i] )
        }
      }

    , activate: function (target) {
        var active
          , selector

        this.activeTarget = target

        $(this.selector)
          .parent('.active')
          .removeClass('active')

        selector = this.selector
          + '[data-target="' + target + '"],'
          + this.selector + '[href="' + target + '"]'

        active = $(selector)
          .parent('li')
          .addClass('active')

        if (active.parent('.dropdown-menu').length)  {
          active = active.closest('li.dropdown').addClass('active')
        }

        active.trigger('activate')
      }

  }


 /* SCROLLSPY PLUGIN DEFINITION
  * =========================== */

  $.fn.scrollspy = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('scrollspy')
        , options = typeof option == 'object' && option
      if (!data) $this.data('scrollspy', (data = new ScrollSpy(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.scrollspy.Constructor = ScrollSpy

  $.fn.scrollspy.defaults = {
    offset: 10
  }


 /* SCROLLSPY DATA-API
  * ================== */

  $(window).on('load', function () {
    $('[data-spy="scroll"]').each(function () {
      var $spy = $(this)
      $spy.scrollspy($spy.data())
    })
  })

}(window.jQuery);
/* ========================================================
 * bootstrap-tab.js v2.1.0
 * http://twitter.github.com/bootstrap/javascript.html#tabs
 * ========================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================== */


!function ($) {

   // jshint ;_;


 /* TAB CLASS DEFINITION
  * ==================== */

  var Tab = function (element) {
    this.element = $(element)
  }

  Tab.prototype = {

    constructor: Tab

  , show: function () {
      var $this = this.element
        , $ul = $this.closest('ul:not(.dropdown-menu)')
        , selector = $this.attr('data-target')
        , previous
        , $target
        , e

      if (!selector) {
        selector = $this.attr('href')
        selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') //strip for ie7
      }

      if ( $this.parent('li').hasClass('active') ) return

      previous = $ul.find('.active a').last()[0]

      e = $.Event('show', {
        relatedTarget: previous
      })

      $this.trigger(e)

      if (e.isDefaultPrevented()) return

      $target = $(selector)

      this.activate($this.parent('li'), $ul)
      this.activate($target, $target.parent(), function () {
        $this.trigger({
          type: 'shown'
        , relatedTarget: previous
        })
      })
    }

  , activate: function ( element, container, callback) {
      var $active = container.find('> .active')
        , transition = callback
            && $.support.transition
            && $active.hasClass('fade')

      function next() {
        $active
          .removeClass('active')
          .find('> .dropdown-menu > .active')
          .removeClass('active')

        element.addClass('active')

        if (transition) {
          element[0].offsetWidth // reflow for transition
          element.addClass('in')
        } else {
          element.removeClass('fade')
        }

        if ( element.parent('.dropdown-menu') ) {
          element.closest('li.dropdown').addClass('active')
        }

        callback && callback()
      }

      transition ?
        $active.one($.support.transition.end, next) :
        next()

      $active.removeClass('in')
    }
  }


 /* TAB PLUGIN DEFINITION
  * ===================== */

  $.fn.tab = function ( option ) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('tab')
      if (!data) $this.data('tab', (data = new Tab(this)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.tab.Constructor = Tab


 /* TAB DATA-API
  * ============ */

  $(function () {
    $('body').on('click.tab.data-api', '[data-toggle="tab"], [data-toggle="pill"]', function (e) {
      e.preventDefault()
      $(this).tab('show')
    })
  })

}(window.jQuery);
/* ===========================================================
 * bootstrap-tooltip.js v2.1.0
 * http://twitter.github.com/bootstrap/javascript.html#tooltips
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ===========================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */


!function ($) {

   // jshint ;_;


 /* TOOLTIP PUBLIC CLASS DEFINITION
  * =============================== */

  var Tooltip = function (element, options) {
    this.init('tooltip', element, options)
  }

  Tooltip.prototype = {

    constructor: Tooltip

  , init: function (type, element, options) {
      var eventIn
        , eventOut

      this.type = type
      this.$element = $(element)
      this.options = this.getOptions(options)
      this.enabled = true

      if (this.options.trigger == 'click') {
        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))
      } else if (this.options.trigger != 'manual') {
        eventIn = this.options.trigger == 'hover' ? 'mouseenter' : 'focus'
        eventOut = this.options.trigger == 'hover' ? 'mouseleave' : 'blur'
        this.$element.on(eventIn + '.' + this.type, this.options.selector, $.proxy(this.enter, this))
        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))
      }

      this.options.selector ?
        (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :
        this.fixTitle()
    }

  , getOptions: function (options) {
      options = $.extend({}, $.fn[this.type].defaults, options, this.$element.data())

      if (options.delay && typeof options.delay == 'number') {
        options.delay = {
          show: options.delay
        , hide: options.delay
        }
      }

      return options
    }

  , enter: function (e) {
      var self = $(e.currentTarget)[this.type](this._options).data(this.type)

      if (!self.options.delay || !self.options.delay.show) return self.show()

      clearTimeout(this.timeout)
      self.hoverState = 'in'
      this.timeout = setTimeout(function() {
        if (self.hoverState == 'in') self.show()
      }, self.options.delay.show)
    }

  , leave: function (e) {
      var self = $(e.currentTarget)[this.type](this._options).data(this.type)

      if (this.timeout) clearTimeout(this.timeout)
      if (!self.options.delay || !self.options.delay.hide) return self.hide()

      self.hoverState = 'out'
      this.timeout = setTimeout(function() {
        if (self.hoverState == 'out') self.hide()
      }, self.options.delay.hide)
    }

  , show: function () {
      var $tip
        , inside
        , pos
        , actualWidth
        , actualHeight
        , placement
        , tp

      if (this.hasContent() && this.enabled) {
        $tip = this.tip()
        this.setContent()

        if (this.options.animation) {
          $tip.addClass('fade')
        }

        placement = typeof this.options.placement == 'function' ?
          this.options.placement.call(this, $tip[0], this.$element[0]) :
          this.options.placement

        inside = /in/.test(placement)

        $tip
          .remove()
          .css({ top: 0, left: 0, display: 'block' })
          .appendTo(inside ? this.$element : document.body)

        pos = this.getPosition(inside)

        actualWidth = $tip[0].offsetWidth
        actualHeight = $tip[0].offsetHeight

        switch (inside ? placement.split(' ')[1] : placement) {
          case 'bottom':
            tp = {top: pos.top + pos.height, left: pos.left + pos.width / 2 - actualWidth / 2}
            break
          case 'top':
            tp = {top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2}
            break
          case 'left':
            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth}
            break
          case 'right':
            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width}
            break
        }

        $tip
          .css(tp)
          .addClass(placement)
          .addClass('in')
      }
    }

  , setContent: function () {
      var $tip = this.tip()
        , title = this.getTitle()

      $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)
      $tip.removeClass('fade in top bottom left right')
    }

  , hide: function () {
      var that = this
        , $tip = this.tip()

      $tip.removeClass('in')

      function removeWithAnimation() {
        var timeout = setTimeout(function () {
          $tip.off($.support.transition.end).remove()
        }, 500)

        $tip.one($.support.transition.end, function () {
          clearTimeout(timeout)
          $tip.remove()
        })
      }

      $.support.transition && this.$tip.hasClass('fade') ?
        removeWithAnimation() :
        $tip.remove()

      return this
    }

  , fixTitle: function () {
      var $e = this.$element
      if ($e.attr('title') || typeof($e.attr('data-original-title')) != 'string') {
        $e.attr('data-original-title', $e.attr('title') || '').removeAttr('title')
      }
    }

  , hasContent: function () {
      return this.getTitle()
    }

  , getPosition: function (inside) {
      return $.extend({}, (inside ? {top: 0, left: 0} : this.$element.offset()), {
        width: this.$element[0].offsetWidth
      , height: this.$element[0].offsetHeight
      })
    }

  , getTitle: function () {
      var title
        , $e = this.$element
        , o = this.options

      title = $e.attr('data-original-title')
        || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)

      return title
    }

  , tip: function () {
      return this.$tip = this.$tip || $(this.options.template)
    }

  , validate: function () {
      if (!this.$element[0].parentNode) {
        this.hide()
        this.$element = null
        this.options = null
      }
    }

  , enable: function () {
      this.enabled = true
    }

  , disable: function () {
      this.enabled = false
    }

  , toggleEnabled: function () {
      this.enabled = !this.enabled
    }

  , toggle: function () {
      this[this.tip().hasClass('in') ? 'hide' : 'show']()
    }

  , destroy: function () {
      this.hide().$element.off('.' + this.type).removeData(this.type)
    }

  }


 /* TOOLTIP PLUGIN DEFINITION
  * ========================= */

  $.fn.tooltip = function ( option ) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('tooltip')
        , options = typeof option == 'object' && option
      if (!data) $this.data('tooltip', (data = new Tooltip(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.tooltip.Constructor = Tooltip

  $.fn.tooltip.defaults = {
    animation: true
  , placement: 'top'
  , selector: false
  , template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>'
  , trigger: 'hover'
  , title: ''
  , delay: 0
  , html: true
  }

}(window.jQuery);

/* ===========================================================
 * bootstrap-popover.js v2.1.0
 * http://twitter.github.com/bootstrap/javascript.html#popovers
 * ===========================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =========================================================== */


!function ($) {

   // jshint ;_;


 /* POPOVER PUBLIC CLASS DEFINITION
  * =============================== */

  var Popover = function (element, options) {
    this.init('popover', element, options)
  }


  /* NOTE: POPOVER EXTENDS BOOTSTRAP-TOOLTIP.js
     ========================================== */

  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype, {

    constructor: Popover

  , setContent: function () {
      var $tip = this.tip()
        , title = this.getTitle()
        , content = this.getContent()

      $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)
      $tip.find('.popover-content > *')[this.options.html ? 'html' : 'text'](content)

      $tip.removeClass('fade top bottom left right in')
    }

  , hasContent: function () {
      return this.getTitle() || this.getContent()
    }

  , getContent: function () {
      var content
        , $e = this.$element
        , o = this.options

      content = $e.attr('data-content')
        || (typeof o.content == 'function' ? o.content.call($e[0]) :  o.content)

      return content
    }

  , tip: function () {
      if (!this.$tip) {
        this.$tip = $(this.options.template)
      }
      return this.$tip
    }

  , destroy: function () {
      this.hide().$element.off('.' + this.type).removeData(this.type)
    }

  })


 /* POPOVER PLUGIN DEFINITION
  * ======================= */

  $.fn.popover = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('popover')
        , options = typeof option == 'object' && option
      if (!data) $this.data('popover', (data = new Popover(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.popover.Constructor = Popover

  $.fn.popover.defaults = $.extend({} , $.fn.tooltip.defaults, {
    placement: 'right'
  , trigger: 'click'
  , content: ''
  , template: '<div class="popover"><div class="arrow"></div><div class="popover-inner"><h3 class="popover-title"></h3><div class="popover-content"><p></p></div></div></div>'
  })

}(window.jQuery);
/* ==========================================================
 * bootstrap-affix.js v2.1.0
 * http://twitter.github.com/bootstrap/javascript.html#affix
 * ==========================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */


!function ($) {

   // jshint ;_;


 /* AFFIX CLASS DEFINITION
  * ====================== */

  var Affix = function (element, options) {
    this.options = $.extend({}, $.fn.affix.defaults, options)
    this.$window = $(window).on('scroll.affix.data-api', $.proxy(this.checkPosition, this))
    this.$element = $(element)
    this.checkPosition()
  }

  Affix.prototype.checkPosition = function () {
    if (!this.$element.is(':visible')) return

    var scrollHeight = $(document).height()
      , scrollTop = this.$window.scrollTop()
      , position = this.$element.offset()
      , offset = this.options.offset
      , offsetBottom = offset.bottom
      , offsetTop = offset.top
      , reset = 'affix affix-top affix-bottom'
      , affix

    if (typeof offset != 'object') offsetBottom = offsetTop = offset
    if (typeof offsetTop == 'function') offsetTop = offset.top()
    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom()

    affix = this.unpin != null && (scrollTop + this.unpin <= position.top) ?
      false    : offsetBottom != null && (position.top + this.$element.height() >= scrollHeight - offsetBottom) ?
      'bottom' : offsetTop != null && scrollTop <= offsetTop ?
      'top'    : false

    if (this.affixed === affix) return

    this.affixed = affix
    this.unpin = affix == 'bottom' ? position.top - scrollTop : null

    this.$element.removeClass(reset).addClass('affix' + (affix ? '-' + affix : ''))
  }


 /* AFFIX PLUGIN DEFINITION
  * ======================= */

  $.fn.affix = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('affix')
        , options = typeof option == 'object' && option
      if (!data) $this.data('affix', (data = new Affix(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.affix.Constructor = Affix

  $.fn.affix.defaults = {
    offset: 0
  }


 /* AFFIX DATA-API
  * ============== */

  $(window).on('load', function () {
    $('[data-spy="affix"]').each(function () {
      var $spy = $(this)
        , data = $spy.data()

      data.offset = data.offset || {}

      data.offsetBottom && (data.offset.bottom = data.offsetBottom)
      data.offsetTop && (data.offset.top = data.offsetTop)

      $spy.affix(data)
    })
  })


}(window.jQuery);
/* ==========================================================
 * bootstrap-alert.js v2.1.0
 * http://twitter.github.com/bootstrap/javascript.html#alerts
 * ==========================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */


!function ($) {

   // jshint ;_;


 /* ALERT CLASS DEFINITION
  * ====================== */

  var dismiss = '[data-dismiss="alert"]'
    , Alert = function (el) {
        $(el).on('click', dismiss, this.close)
      }

  Alert.prototype.close = function (e) {
    var $this = $(this)
      , selector = $this.attr('data-target')
      , $parent

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') //strip for ie7
    }

    $parent = $(selector)

    e && e.preventDefault()

    $parent.length || ($parent = $this.hasClass('alert') ? $this : $this.parent())

    $parent.trigger(e = $.Event('close'))

    if (e.isDefaultPrevented()) return

    $parent.removeClass('in')

    function removeElement() {
      $parent
        .trigger('closed')
        .remove()
    }

    $.support.transition && $parent.hasClass('fade') ?
      $parent.on($.support.transition.end, removeElement) :
      removeElement()
  }


 /* ALERT PLUGIN DEFINITION
  * ======================= */

  $.fn.alert = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('alert')
      if (!data) $this.data('alert', (data = new Alert(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  $.fn.alert.Constructor = Alert


 /* ALERT DATA-API
  * ============== */

  $(function () {
    $('body').on('click.alert.data-api', dismiss, Alert.prototype.close)
  })

}(window.jQuery);
/* ============================================================
 * bootstrap-button.js v2.1.0
 * http://twitter.github.com/bootstrap/javascript.html#buttons
 * ============================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================ */


!function ($) {

   // jshint ;_;


 /* BUTTON PUBLIC CLASS DEFINITION
  * ============================== */

  var Button = function (element, options) {
    this.$element = $(element)
    this.options = $.extend({}, $.fn.button.defaults, options)
  }

  Button.prototype.setState = function (state) {
    var d = 'disabled'
      , $el = this.$element
      , data = $el.data()
      , val = $el.is('input') ? 'val' : 'html'

    state = state + 'Text'
    data.resetText || $el.data('resetText', $el[val]())

    $el[val](data[state] || this.options[state])

    // push to event loop to allow forms to submit
    setTimeout(function () {
      state == 'loadingText' ?
        $el.addClass(d).attr(d, d) :
        $el.removeClass(d).removeAttr(d)
    }, 0)
  }

  Button.prototype.toggle = function () {
    var $parent = this.$element.parent('[data-toggle="buttons-radio"]')

    $parent && $parent
      .find('.active')
      .removeClass('active')

    this.$element.toggleClass('active')
  }


 /* BUTTON PLUGIN DEFINITION
  * ======================== */

  $.fn.button = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('button')
        , options = typeof option == 'object' && option
      if (!data) $this.data('button', (data = new Button(this, options)))
      if (option == 'toggle') data.toggle()
      else if (option) data.setState(option)
    })
  }

  $.fn.button.defaults = {
    loadingText: 'loading...'
  }

  $.fn.button.Constructor = Button


 /* BUTTON DATA-API
  * =============== */

  $(function () {
    $('body').on('click.button.data-api', '[data-toggle^=button]', function ( e ) {
      var $btn = $(e.target)
      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')
      $btn.button('toggle')
    })
  })

}(window.jQuery);
/* =============================================================
 * bootstrap-collapse.js v2.1.0
 * http://twitter.github.com/bootstrap/javascript.html#collapse
 * =============================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================ */


!function ($) {

   // jshint ;_;


 /* COLLAPSE PUBLIC CLASS DEFINITION
  * ================================ */

  var Collapse = function (element, options) {
    this.$element = $(element)
    this.options = $.extend({}, $.fn.collapse.defaults, options)

    if (this.options.parent) {
      this.$parent = $(this.options.parent)
    }

    this.options.toggle && this.toggle()
  }

  Collapse.prototype = {

    constructor: Collapse

  , dimension: function () {
      var hasWidth = this.$element.hasClass('width')
      return hasWidth ? 'width' : 'height'
    }

  , show: function () {
      var dimension
        , scroll
        , actives
        , hasData

      if (this.transitioning) return

      dimension = this.dimension()
      scroll = $.camelCase(['scroll', dimension].join('-'))
      actives = this.$parent && this.$parent.find('> .accordion-group > .in')

      if (actives && actives.length) {
        hasData = actives.data('collapse')
        if (hasData && hasData.transitioning) return
        actives.collapse('hide')
        hasData || actives.data('collapse', null)
      }

      this.$element[dimension](0)
      this.transition('addClass', $.Event('show'), 'shown')
      $.support.transition && this.$element[dimension](this.$element[0][scroll])
    }

  , hide: function () {
      var dimension
      if (this.transitioning) return
      dimension = this.dimension()
      this.reset(this.$element[dimension]())
      this.transition('removeClass', $.Event('hide'), 'hidden')
      this.$element[dimension](0)
    }

  , reset: function (size) {
      var dimension = this.dimension()

      this.$element
        .removeClass('collapse')
        [dimension](size || 'auto')
        [0].offsetWidth

      this.$element[size !== null ? 'addClass' : 'removeClass']('collapse')

      return this
    }

  , transition: function (method, startEvent, completeEvent) {
      var that = this
        , complete = function () {
            if (startEvent.type == 'show') that.reset()
            that.transitioning = 0
            that.$element.trigger(completeEvent)
          }

      this.$element.trigger(startEvent)

      if (startEvent.isDefaultPrevented()) return

      this.transitioning = 1

      this.$element[method]('in')

      $.support.transition && this.$element.hasClass('collapse') ?
        this.$element.one($.support.transition.end, complete) :
        complete()
    }

  , toggle: function () {
      this[this.$element.hasClass('in') ? 'hide' : 'show']()
    }

  }


 /* COLLAPSIBLE PLUGIN DEFINITION
  * ============================== */

  $.fn.collapse = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('collapse')
        , options = typeof option == 'object' && option
      if (!data) $this.data('collapse', (data = new Collapse(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.collapse.defaults = {
    toggle: true
  }

  $.fn.collapse.Constructor = Collapse


 /* COLLAPSIBLE DATA-API
  * ==================== */

  $(function () {
    $('body').on('click.collapse.data-api', '[data-toggle=collapse]', function (e) {
      var $this = $(this), href
        , target = $this.attr('data-target')
          || e.preventDefault()
          || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '') //strip for ie7
        , option = $(target).data('collapse') ? 'toggle' : $this.data()
      $this[$(target).hasClass('in') ? 'addClass' : 'removeClass']('collapsed')
      $(target).collapse(option)
    })
  })

}(window.jQuery);
/* ==========================================================
 * bootstrap-carousel.js v2.1.0
 * http://twitter.github.com/bootstrap/javascript.html#carousel
 * ==========================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */


!function ($) {

   // jshint ;_;


 /* CAROUSEL CLASS DEFINITION
  * ========================= */

  var Carousel = function (element, options) {
    this.$element = $(element)
    this.options = options
    this.options.slide && this.slide(this.options.slide)
    this.options.pause == 'hover' && this.$element
      .on('mouseenter', $.proxy(this.pause, this))
      .on('mouseleave', $.proxy(this.cycle, this))
  }

  Carousel.prototype = {

    cycle: function (e) {
      if (!e) this.paused = false
      this.options.interval
        && !this.paused
        && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))
      return this
    }

  , to: function (pos) {
      var $active = this.$element.find('.item.active')
        , children = $active.parent().children()
        , activePos = children.index($active)
        , that = this

      if (pos > (children.length - 1) || pos < 0) return

      if (this.sliding) {
        return this.$element.one('slid', function () {
          that.to(pos)
        })
      }

      if (activePos == pos) {
        return this.pause().cycle()
      }

      return this.slide(pos > activePos ? 'next' : 'prev', $(children[pos]))
    }

  , pause: function (e) {
      if (!e) this.paused = true
      if (this.$element.find('.next, .prev').length && $.support.transition.end) {
        this.$element.trigger($.support.transition.end)
        this.cycle()
      }
      clearInterval(this.interval)
      this.interval = null
      return this
    }

  , next: function () {
      if (this.sliding) return
      return this.slide('next')
    }

  , prev: function () {
      if (this.sliding) return
      return this.slide('prev')
    }

  , slide: function (type, next) {
      var $active = this.$element.find('.item.active')
        , $next = next || $active[type]()
        , isCycling = this.interval
        , direction = type == 'next' ? 'left' : 'right'
        , fallback  = type == 'next' ? 'first' : 'last'
        , that = this
        , e = $.Event('slide', {
            relatedTarget: $next[0]
          })

      this.sliding = true

      isCycling && this.pause()

      $next = $next.length ? $next : this.$element.find('.item')[fallback]()

      if ($next.hasClass('active')) return

      if ($.support.transition && this.$element.hasClass('slide')) {
        this.$element.trigger(e)
        if (e.isDefaultPrevented()) return
        $next.addClass(type)
        $next[0].offsetWidth // force reflow
        $active.addClass(direction)
        $next.addClass(direction)
        this.$element.one($.support.transition.end, function () {
          $next.removeClass([type, direction].join(' ')).addClass('active')
          $active.removeClass(['active', direction].join(' '))
          that.sliding = false
          setTimeout(function () { that.$element.trigger('slid') }, 0)
        })
      } else {
        this.$element.trigger(e)
        if (e.isDefaultPrevented()) return
        $active.removeClass('active')
        $next.addClass('active')
        this.sliding = false
        this.$element.trigger('slid')
      }

      isCycling && this.cycle()

      return this
    }

  }


 /* CAROUSEL PLUGIN DEFINITION
  * ========================== */

  $.fn.carousel = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('carousel')
        , options = $.extend({}, $.fn.carousel.defaults, typeof option == 'object' && option)
        , action = typeof option == 'string' ? option : options.slide
      if (!data) $this.data('carousel', (data = new Carousel(this, options)))
      if (typeof option == 'number') data.to(option)
      else if (action) data[action]()
      else if (options.interval) data.cycle()
    })
  }

  $.fn.carousel.defaults = {
    interval: 5000
  , pause: 'hover'
  }

  $.fn.carousel.Constructor = Carousel


 /* CAROUSEL DATA-API
  * ================= */

  $(function () {
    $('body').on('click.carousel.data-api', '[data-slide]', function ( e ) {
      var $this = $(this), href
        , $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '')) //strip for ie7
        , options = !$target.data('modal') && $.extend({}, $target.data(), $this.data())
      $target.carousel(options)
      e.preventDefault()
    })
  })

}(window.jQuery);
/* =============================================================
 * bootstrap-typeahead.js v2.1.0
 * http://twitter.github.com/bootstrap/javascript.html#typeahead
 * =============================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================ */


!function($){

   // jshint ;_;


 /* TYPEAHEAD PUBLIC CLASS DEFINITION
  * ================================= */

  var Typeahead = function (element, options) {
    this.$element = $(element)
    this.options = $.extend({}, $.fn.typeahead.defaults, options)
    this.matcher = this.options.matcher || this.matcher
    this.sorter = this.options.sorter || this.sorter
    this.highlighter = this.options.highlighter || this.highlighter
    this.updater = this.options.updater || this.updater
    this.$menu = $(this.options.menu).appendTo('body')
    this.source = this.options.source
    this.shown = false
    this.listen()
  }

  Typeahead.prototype = {

    constructor: Typeahead

  , select: function () {
      var val = this.$menu.find('.active').attr('data-value')
      this.$element
        .val(this.updater(val))
        .change()
      return this.hide()
    }

  , updater: function (item) {
      return item
    }

  , show: function () {
      var pos = $.extend({}, this.$element.offset(), {
        height: this.$element[0].offsetHeight
      })

      this.$menu.css({
        top: pos.top + pos.height
      , left: pos.left
      })

      this.$menu.show()
      this.shown = true
      return this
    }

  , hide: function () {
      this.$menu.hide()
      this.shown = false
      return this
    }

  , lookup: function (event) {
      var items

      this.query = this.$element.val()

      if (!this.query || this.query.length < this.options.minLength) {
        return this.shown ? this.hide() : this
      }

      items = $.isFunction(this.source) ? this.source(this.query, $.proxy(this.process, this)) : this.source

      return items ? this.process(items) : this
    }

  , process: function (items) {
      var that = this

      items = $.grep(items, function (item) {
        return that.matcher(item)
      })

      items = this.sorter(items)

      if (!items.length) {
        return this.shown ? this.hide() : this
      }

      return this.render(items.slice(0, this.options.items)).show()
    }

  , matcher: function (item) {
      return ~item.toLowerCase().indexOf(this.query.toLowerCase())
    }

  , sorter: function (items) {
      var beginswith = []
        , caseSensitive = []
        , caseInsensitive = []
        , item

      while (item = items.shift()) {
        if (!item.toLowerCase().indexOf(this.query.toLowerCase())) beginswith.push(item)
        else if (~item.indexOf(this.query)) caseSensitive.push(item)
        else caseInsensitive.push(item)
      }

      return beginswith.concat(caseSensitive, caseInsensitive)
    }

  , highlighter: function (item) {
      var query = this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, '\\$&')
      return item.replace(new RegExp('(' + query + ')', 'ig'), function ($1, match) {
        return '<strong>' + match + '</strong>'
      })
    }

  , render: function (items) {
      var that = this

      items = $(items).map(function (i, item) {
        i = $(that.options.item).attr('data-value', item)
        i.find('a').html(that.highlighter(item))
        return i[0]
      })

      items.first().addClass('active')
      this.$menu.html(items)
      return this
    }

  , next: function (event) {
      var active = this.$menu.find('.active').removeClass('active')
        , next = active.next()

      if (!next.length) {
        next = $(this.$menu.find('li')[0])
      }

      next.addClass('active')
    }

  , prev: function (event) {
      var active = this.$menu.find('.active').removeClass('active')
        , prev = active.prev()

      if (!prev.length) {
        prev = this.$menu.find('li').last()
      }

      prev.addClass('active')
    }

  , listen: function () {
      this.$element
        .on('blur',     $.proxy(this.blur, this))
        .on('keypress', $.proxy(this.keypress, this))
        .on('keyup',    $.proxy(this.keyup, this))

      if ($.browser.webkit || $.browser.msie) {
        this.$element.on('keydown', $.proxy(this.keydown, this))
      }

      this.$menu
        .on('click', $.proxy(this.click, this))
        .on('mouseenter', 'li', $.proxy(this.mouseenter, this))
    }

  , move: function (e) {
      if (!this.shown) return

      switch(e.keyCode) {
        case 9: // tab
        case 13: // enter
        case 27: // escape
          e.preventDefault()
          break

        case 38: // up arrow
          e.preventDefault()
          this.prev()
          break

        case 40: // down arrow
          e.preventDefault()
          this.next()
          break
      }

      e.stopPropagation()
    }

  , keydown: function (e) {
      this.suppressKeyPressRepeat = !~$.inArray(e.keyCode, [40,38,9,13,27])
      this.move(e)
    }

  , keypress: function (e) {
      if (this.suppressKeyPressRepeat) return
      this.move(e)
    }

  , keyup: function (e) {
      switch(e.keyCode) {
        case 40: // down arrow
        case 38: // up arrow
          break

        case 9: // tab
        case 13: // enter
          if (!this.shown) return
          this.select()
          break

        case 27: // escape
          if (!this.shown) return
          this.hide()
          break

        default:
          this.lookup()
      }

      e.stopPropagation()
      e.preventDefault()
  }

  , blur: function (e) {
      var that = this
      setTimeout(function () { that.hide() }, 150)
    }

  , click: function (e) {
      e.stopPropagation()
      e.preventDefault()
      this.select()
    }

  , mouseenter: function (e) {
      this.$menu.find('.active').removeClass('active')
      $(e.currentTarget).addClass('active')
    }

  }


  /* TYPEAHEAD PLUGIN DEFINITION
   * =========================== */

  $.fn.typeahead = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('typeahead')
        , options = typeof option == 'object' && option
      if (!data) $this.data('typeahead', (data = new Typeahead(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.typeahead.defaults = {
    source: []
  , items: 8
  , menu: '<ul class="typeahead dropdown-menu"></ul>'
  , item: '<li><a href="#"></a></li>'
  , minLength: 1
  }

  $.fn.typeahead.Constructor = Typeahead


 /*   TYPEAHEAD DATA-API
  * ================== */

  $(function () {
    $('body').on('focus.typeahead.data-api', '[data-provide="typeahead"]', function (e) {
      var $this = $(this)
      if ($this.data('typeahead')) return
      e.preventDefault()
      $this.typeahead($this.data())
    })
  })

}(window.jQuery);

define("bootstrap", function(){});

/* =============================================================
 * bootstrap-typeahead.js v2.0.3
 * http://twitter.github.com/bootstrap/javascript.html#typeahead
 * =============================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================ */

/*
 * 
 * Modifications by Paul Warelis
 * 
 */

!function($){

	 // jshint ;_;

	/* TYPEAHEAD PUBLIC CLASS DEFINITION
	 * ================================= */

	var Typeahead = function (element, options) {
		this.$element = $(element)
		this.options = $.extend({}, $.fn.typeahead.defaults, options)
		this.matcher = this.options.matcher || this.matcher
		this.sorter = this.options.sorter || this.sorter
		this.highlighter = this.options.highlighter || this.highlighter
		this.updater = this.options.updater || this.updater
		this.$menu = $(this.options.menu).appendTo('body')
		if (this.options.ajax) {
			var ajax = this.options.ajax;
			if (typeof ajax == "string") {
				ajax = { url:ajax };
			}
			this.ajax = {
				url : ajax.url,
				timeout : ajax.timeout || 300,
				method: ajax.method || "post",
				triggerLength : ajax.triggerLength || 3,
				loadingClass : ajax.loadingClass || null,
				displayField : ajax.displayField || null,
				preDispatch : ajax.preDispatch || null,
				preProcess : ajax.preProcess || null
			}
			this.query = "";
		} else {
			this.source = this.options.source
			this.ajax = null;
		}
		this.shown = false
		this.listen()
	}

	Typeahead.prototype = {

		constructor: Typeahead,

		select: function () {
			var val = this.$menu.find('.active').attr('data-value')
			this.$element
				.val(this.updater(val))
				.change()
			return this.hide()
		},

		updater: function (item) {
			return item
		},

		show: function () {
			var pos = $.extend({}, this.$element.offset(), {
				height: this.$element[0].offsetHeight
			})
			
			this.$menu.css({
				top: pos.top + pos.height,
				left: pos.left
			})
			
			this.$menu.show()
			this.shown = true
			return this
		},

		hide: function () {
			this.$menu.hide()
			this.shown = false
			return this
		},

		ajaxLookup: function () {
	
			var query = this.$element.val();
			
			if (query == this.query) {
				return this;
			}
	
			// Query changed
			this.query = query
	
			// Cancel last timer if set
			if (this.ajax.timerId) {
				clearTimeout(this.ajax.timerId);
				this.ajax.timerId = null;
			}
			
			if (!query || query.length < this.ajax.triggerLength) {
				// cancel the ajax callback if in progress
				if (this.ajax.xhr) {
					this.ajax.xhr.abort();
					this.ajax.xhr = null;
					this.ajaxToggleLoadClass(false);
				}
				return this.shown ? this.hide() : this
			}
	
			function execute() {
				this.ajaxToggleLoadClass(true);
				
				// Cancel last call if already in progress
				if (this.ajax.xhr) this.ajax.xhr.abort();
				
				var params = this.ajax.preDispatch ? this.ajax.preDispatch(query) : { query : query }
				var jAjax = (this.ajax.method == "post") ? $.post : $.get;
				this.ajax.xhr = jAjax(this.ajax.url, params, $.proxy(this.ajaxSource, this));
				this.ajax.timerId = null;
			}
			
			// Query is good to send, set a timer
			this.ajax.timerId = setTimeout($.proxy(execute, this), this.ajax.timeout);
			
			return this;
		},
	
		ajaxSource: function (data) {
			this.ajaxToggleLoadClass(false);
	
			var that = this, items
			
			if (!this.ajax.xhr) return;
			
			if (this.ajax.preProcess) {
				data = this.ajax.preProcess(data);
			}
			// Save for selection retreival
			this.ajax.data = data;
	
			items = $.grep(data, function (item) {
				if (that.ajax.displayField) {
					item = item[that.ajax.displayField]
				}
				if (that.matcher(item)) return item
			})
	
			items = this.sorter(items)
			
			if (!items.length) {
				return this.shown ? this.hide() : this
			}
	
			this.ajax.xhr = null;
			return this.render(items.slice(0, this.options.items)).show()
		},
		
		ajaxToggleLoadClass: function (enable) {
			if (!this.ajax.loadingClass) return;
			this.$element.toggleClass(this.ajax.loadingClass, enable);
		},

		lookup: function (event) {
			var that = this, items
			
			this.query = this.$element.val()
			
			if (!this.query) {
				return this.shown ? this.hide() : this
			}
			
			items = $.grep(this.source, function (item) {
				return that.matcher(item)
			})
			
			items = this.sorter(items)
			
			if (!items.length) {
				return this.shown ? this.hide() : this
			}
			
			return this.render(items.slice(0, this.options.items)).show()
		},
	
		matcher: function (item) {
			return ~item.toLowerCase().indexOf(this.query.toLowerCase())
		},

		sorter: function (items) {
			var beginswith = [],
				caseSensitive = [],
				caseInsensitive = [],
				item
			
			while (item = items.shift()) {
				if (this.ajax && this.ajax.displayField) {
					item = item[this.ajax.displayField]
				}
				if (!item.toLowerCase().indexOf(this.query.toLowerCase())) beginswith.push(item)
				else if (~item.indexOf(this.query)) caseSensitive.push(item)
				else caseInsensitive.push(item)
			}
			
			return beginswith.concat(caseSensitive, caseInsensitive)
		},

		highlighter: function (item) {
			var query = this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, '\\$&')
			return item.replace(new RegExp('(' + query + ')', 'ig'), function ($1, match) {
				return '<strong>' + match + '</strong>'
			})
		},

		render: function (items) {
			var that = this
			
			items = $(items).map(function (i, item) {
				i = $(that.options.item).attr('data-value', item)
				i.find('a').html(that.highlighter(item))
				return i[0]
			})
			
			items.first().addClass('active')
			this.$menu.html(items)
			return this
		},
		
		next: function (event) {
			var active = this.$menu.find('.active').removeClass('active'),
				next = active.next()
			
			if (!next.length) {
				next = $(this.$menu.find('li')[0])
			}
			
			next.addClass('active')
		},

		prev: function (event) {
			var active = this.$menu.find('.active').removeClass('active'),
				prev = active.prev()
			
			if (!prev.length) {
				prev = this.$menu.find('li').last()
			}
			
			prev.addClass('active')
		},

		listen: function () {
			this.$element
				.on('blur',     $.proxy(this.blur, this))
				.on('keypress', $.proxy(this.keypress, this))
				.on('keyup',    $.proxy(this.keyup, this))
			
			// Firefox needs this too
			this.$element.on('keydown', $.proxy(this.keypress, this))
			
			this.$menu
				.on('click', $.proxy(this.click, this))
				.on('mouseenter', 'li', $.proxy(this.mouseenter, this))
		},

		keyup: function (e) {
			switch(e.keyCode) {
				case 40: // down arrow
				case 38: // up arrow
					break
				
				case 9: // tab
				case 13: // enter
					if (!this.shown) return
					this.select()
					break
				
				case 27: // escape
					if (!this.shown) return
					this.hide()
					break
				
				default:
					if (this.ajax) this.ajaxLookup()
					else this.lookup()
			}
			
			e.stopPropagation()
			e.preventDefault()
		},

		keypress: function (e) {
			if (!this.shown) return
			
			switch(e.keyCode) {
				case 9: // tab
				case 13: // enter
				case 27: // escape
					e.preventDefault()
					break
				
				case 38: // up arrow
					if (e.type != 'keydown') break
					e.preventDefault()
					this.prev()
					break
				
				case 40: // down arrow
					if (e.type != 'keydown') break
					e.preventDefault()
					this.next()
					break
			}
			
			e.stopPropagation()
		},

		blur: function (e) {
			var that = this
			setTimeout(function () { that.hide() }, 150)
		},
		
		click: function (e) {
			e.stopPropagation()
			e.preventDefault()
			this.select()
		},

		mouseenter: function (e) {
			this.$menu.find('.active').removeClass('active')
			$(e.currentTarget).addClass('active')
		}
	}


	/* TYPEAHEAD PLUGIN DEFINITION
	 * =========================== */

	$.fn.typeahead = function (option) {
		return this.each(function () {
			var $this = $(this),
				data = $this.data('typeahead'),
				options = typeof option == 'object' && option
			if (!data) $this.data('typeahead', (data = new Typeahead(this, options)))
			if (typeof option == 'string') data[option]()
		})
	}

	$.fn.typeahead.defaults = {
		source: [],
		items: 8,
		menu: '<ul class="typeahead dropdown-menu"></ul>',
		item: '<li><a href="#"></a></li>'
	}

	$.fn.typeahead.Constructor = Typeahead

	/* TYPEAHEAD DATA-API
	 * ================== */

	$(function () {
		$('body').on('focus.typeahead.data-api', '[data-provide="typeahead"]', function (e) {
			var $this = $(this)
			if ($this.data('typeahead')) return
			e.preventDefault()
			$this.typeahead($this.data())
		})
	})

}(window.jQuery);
define("typeahead", function(){});

/**
 * jQuery Validation Plugin 1.11.0pre
 *
 * http://bassistance.de/jquery-plugins/jquery-plugin-validation/
 * http://docs.jquery.com/Plugins/Validation
 *
 * Copyright 2013 Jörn Zaefferer
 * Released under the MIT license:
 *   http://www.opensource.org/licenses/mit-license.php
 */

(function($) {

$.extend($.fn, {
	// http://docs.jquery.com/Plugins/Validation/validate
	validate: function( options ) {

		// if nothing is selected, return nothing; can't chain anyway
		if (!this.length) {
			if (options && options.debug && window.console) {
				console.warn( "nothing selected, can't validate, returning nothing" );
			}
			return;
		}

		// check if a validator for this form was already created
		var validator = $.data(this[0], 'validator');
		if ( validator ) {
			return validator;
		}

		// Add novalidate tag if HTML5.
		this.attr('novalidate', 'novalidate');

		validator = new $.validator( options, this[0] );
		$.data(this[0], 'validator', validator);

		if ( validator.settings.onsubmit ) {

			this.validateDelegate( ":submit", "click", function(ev) {
				if ( validator.settings.submitHandler ) {
					validator.submitButton = ev.target;
				}
				// allow suppressing validation by adding a cancel class to the submit button
				if ( $(ev.target).hasClass('cancel') ) {
					validator.cancelSubmit = true;
				}
			});

			// validate the form on submit
			this.submit( function( event ) {
				if ( validator.settings.debug ) {
					// prevent form submit to be able to see console output
					event.preventDefault();
				}
				function handle() {
					var hidden;
					if ( validator.settings.submitHandler ) {
						if (validator.submitButton) {
							// insert a hidden input as a replacement for the missing submit button
							hidden = $("<input type='hidden'/>").attr("name", validator.submitButton.name).val(validator.submitButton.value).appendTo(validator.currentForm);
						}
						validator.settings.submitHandler.call( validator, validator.currentForm, event );
						if (validator.submitButton) {
							// and clean up afterwards; thanks to no-block-scope, hidden can be referenced
							hidden.remove();
						}
						return false;
					}
					return true;
				}

				// prevent submit for invalid forms or custom submit handlers
				if ( validator.cancelSubmit ) {
					validator.cancelSubmit = false;
					return handle();
				}
				if ( validator.form() ) {
					if ( validator.pendingRequest ) {
						validator.formSubmitted = true;
						return false;
					}
					return handle();
				} else {
					validator.focusInvalid();
					return false;
				}
			});
		}

		return validator;
	},
	// http://docs.jquery.com/Plugins/Validation/valid
	valid: function() {
		if ( $(this[0]).is('form')) {
			return this.validate().form();
		} else {
			var valid = true;
			var validator = $(this[0].form).validate();
			this.each(function() {
				valid &= validator.element(this);
			});
			return valid;
		}
	},
	// attributes: space seperated list of attributes to retrieve and remove
	removeAttrs: function(attributes) {
		var result = {},
			$element = this;
		$.each(attributes.split(/\s/), function(index, value) {
			result[value] = $element.attr(value);
			$element.removeAttr(value);
		});
		return result;
	},
	// http://docs.jquery.com/Plugins/Validation/rules
	rules: function(command, argument) {
		var element = this[0];

		if (command) {
			var settings = $.data(element.form, 'validator').settings;
			var staticRules = settings.rules;
			var existingRules = $.validator.staticRules(element);
			switch(command) {
			case "add":
				$.extend(existingRules, $.validator.normalizeRule(argument));
				staticRules[element.name] = existingRules;
				if (argument.messages) {
					settings.messages[element.name] = $.extend( settings.messages[element.name], argument.messages );
				}
				break;
			case "remove":
				if (!argument) {
					delete staticRules[element.name];
					return existingRules;
				}
				var filtered = {};
				$.each(argument.split(/\s/), function(index, method) {
					filtered[method] = existingRules[method];
					delete existingRules[method];
				});
				return filtered;
			}
		}

		var data = $.validator.normalizeRules(
		$.extend(
			{},
			$.validator.classRules(element),
			$.validator.attributeRules(element),
			$.validator.dataRules(element),
			$.validator.staticRules(element)
		), element);

		// make sure required is at front
		if (data.required) {
			var param = data.required;
			delete data.required;
			data = $.extend({required: param}, data);
		}

		return data;
	}
});

// Custom selectors
$.extend($.expr[":"], {
	// http://docs.jquery.com/Plugins/Validation/blank
	blank: function(a) {return !$.trim("" + a.value);},
	// http://docs.jquery.com/Plugins/Validation/filled
	filled: function(a) {return !!$.trim("" + a.value);},
	// http://docs.jquery.com/Plugins/Validation/unchecked
	unchecked: function(a) {return !a.checked;}
});

// constructor for validator
$.validator = function( options, form ) {
	this.settings = $.extend( true, {}, $.validator.defaults, options );
	this.currentForm = form;
	this.init();
};

$.validator.format = function(source, params) {
	if ( arguments.length === 1 ) {
		return function() {
			var args = $.makeArray(arguments);
			args.unshift(source);
			return $.validator.format.apply( this, args );
		};
	}
	if ( arguments.length > 2 && params.constructor !== Array  ) {
		params = $.makeArray(arguments).slice(1);
	}
	if ( params.constructor !== Array ) {
		params = [ params ];
	}
	$.each(params, function(i, n) {
		source = source.replace(new RegExp("\\{" + i + "\\}", "g"), n);
	});
	return source;
};

$.extend($.validator, {

	defaults: {
		messages: {},
		groups: {},
		rules: {},
		errorClass: "error",
		validClass: "valid",
		errorElement: "label",
		focusInvalid: true,
		errorContainer: $( [] ),
		errorLabelContainer: $( [] ),
		onsubmit: true,
		ignore: ":hidden",
		ignoreTitle: false,
		onfocusin: function(element, event) {
			this.lastActive = element;

			// hide error label and remove error class on focus if enabled
			if ( this.settings.focusCleanup && !this.blockFocusCleanup ) {
				if ( this.settings.unhighlight ) {
					this.settings.unhighlight.call( this, element, this.settings.errorClass, this.settings.validClass );
				}
				this.addWrapper(this.errorsFor(element)).hide();
			}
		},
		onfocusout: function(element, event) {
			if ( !this.checkable(element) && (element.name in this.submitted || !this.optional(element)) ) {
				this.element(element);
			}
		},
		onkeyup: function(element, event) {
			if ( event.which === 9 && this.elementValue(element) === '' ) {
				return;
			} else if ( element.name in this.submitted || element === this.lastElement ) {
				this.element(element);
			}
		},
		onclick: function(element, event) {
			// click on selects, radiobuttons and checkboxes
			if ( element.name in this.submitted ) {
				this.element(element);
			}
			// or option elements, check parent select in that case
			else if (element.parentNode.name in this.submitted) {
				this.element(element.parentNode);
			}
		},
		highlight: function(element, errorClass, validClass) {
			if (element.type === 'radio') {
				this.findByName(element.name).addClass(errorClass).removeClass(validClass);
			} else {
				$(element).addClass(errorClass).removeClass(validClass);
			}
		},
		unhighlight: function(element, errorClass, validClass) {
			if (element.type === 'radio') {
				this.findByName(element.name).removeClass(errorClass).addClass(validClass);
			} else {
				$(element).removeClass(errorClass).addClass(validClass);
			}
		}
	},

	// http://docs.jquery.com/Plugins/Validation/Validator/setDefaults
	setDefaults: function(settings) {
		$.extend( $.validator.defaults, settings );
	},

	messages: {
		required: "This field is required.",
		remote: "Please fix this field.",
		email: "Please enter a valid email address.",
		url: "Please enter a valid URL.",
		date: "Please enter a valid date.",
		dateISO: "Please enter a valid date (ISO).",
		number: "Please enter a valid number.",
		digits: "Please enter only digits.",
		creditcard: "Please enter a valid credit card number.",
		equalTo: "Please enter the same value again.",
		maxlength: $.validator.format("Please enter no more than {0} characters."),
		minlength: $.validator.format("Please enter at least {0} characters."),
		rangelength: $.validator.format("Please enter a value between {0} and {1} characters long."),
		range: $.validator.format("Please enter a value between {0} and {1}."),
		max: $.validator.format("Please enter a value less than or equal to {0}."),
		min: $.validator.format("Please enter a value greater than or equal to {0}.")
	},

	autoCreateRanges: false,

	prototype: {

		init: function() {
			this.labelContainer = $(this.settings.errorLabelContainer);
			this.errorContext = this.labelContainer.length && this.labelContainer || $(this.currentForm);
			this.containers = $(this.settings.errorContainer).add( this.settings.errorLabelContainer );
			this.submitted = {};
			this.valueCache = {};
			this.pendingRequest = 0;
			this.pending = {};
			this.invalid = {};
			this.reset();

			var groups = (this.groups = {});
			$.each(this.settings.groups, function(key, value) {
				if (typeof value === "string") {
					value = value.split(/\s/);
				}
				$.each(value, function(index, name) {
					groups[name] = key;
				});
			});
			var rules = this.settings.rules;
			$.each(rules, function(key, value) {
				rules[key] = $.validator.normalizeRule(value);
			});

			function delegate(event) {
				var validator = $.data(this[0].form, "validator"),
					eventType = "on" + event.type.replace(/^validate/, "");
				if (validator.settings[eventType]) {
					validator.settings[eventType].call(validator, this[0], event);
				}
			}
			$(this.currentForm)
				.validateDelegate(":text, [type='password'], [type='file'], select, textarea, " +
					"[type='number'], [type='search'] ,[type='tel'], [type='url'], " +
					"[type='email'], [type='datetime'], [type='date'], [type='month'], " +
					"[type='week'], [type='time'], [type='datetime-local'], " +
					"[type='range'], [type='color'] ",
					"focusin focusout keyup", delegate)
				.validateDelegate("[type='radio'], [type='checkbox'], select, option", "click", delegate);

			if (this.settings.invalidHandler) {
				$(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler);
			}
		},

		// http://docs.jquery.com/Plugins/Validation/Validator/form
		form: function() {
			this.checkForm();
			$.extend(this.submitted, this.errorMap);
			this.invalid = $.extend({}, this.errorMap);
			if (!this.valid()) {
				$(this.currentForm).triggerHandler("invalid-form", [this]);
			}
			this.showErrors();
			return this.valid();
		},

		checkForm: function() {
			this.prepareForm();
			for ( var i = 0, elements = (this.currentElements = this.elements()); elements[i]; i++ ) {
				this.check( elements[i] );
			}
			return this.valid();
		},

		// http://docs.jquery.com/Plugins/Validation/Validator/element
		element: function( element ) {
			element = this.validationTargetFor( this.clean( element ) );
			this.lastElement = element;
			this.prepareElement( element );
			this.currentElements = $(element);
			var result = this.check( element ) !== false;
			if (result) {
				delete this.invalid[element.name];
			} else {
				this.invalid[element.name] = true;
			}
			if ( !this.numberOfInvalids() ) {
				// Hide error containers on last error
				this.toHide = this.toHide.add( this.containers );
			}
			this.showErrors();
			return result;
		},

		// http://docs.jquery.com/Plugins/Validation/Validator/showErrors
		showErrors: function(errors) {
			if(errors) {
				// add items to error list and map
				$.extend( this.errorMap, errors );
				this.errorList = [];
				for ( var name in errors ) {
					this.errorList.push({
						message: errors[name],
						element: this.findByName(name)[0]
					});
				}
				// remove items from success list
				this.successList = $.grep( this.successList, function(element) {
					return !(element.name in errors);
				});
			}
			if (this.settings.showErrors) {
				this.settings.showErrors.call( this, this.errorMap, this.errorList );
			} else {
				this.defaultShowErrors();
			}
		},

		// http://docs.jquery.com/Plugins/Validation/Validator/resetForm
		resetForm: function() {
			if ( $.fn.resetForm ) {
				$( this.currentForm ).resetForm();
			}
			this.submitted = {};
			this.lastElement = null;
			this.prepareForm();
			this.hideErrors();
			this.elements().removeClass( this.settings.errorClass ).removeData( "previousValue" );
		},

		numberOfInvalids: function() {
			return this.objectLength(this.invalid);
		},

		objectLength: function( obj ) {
			var count = 0;
			for ( var i in obj ) {
				count++;
			}
			return count;
		},

		hideErrors: function() {
			this.addWrapper( this.toHide ).hide();
		},

		valid: function() {
			return this.size() === 0;
		},

		size: function() {
			return this.errorList.length;
		},

		focusInvalid: function() {
			if( this.settings.focusInvalid ) {
				try {
					$(this.findLastActive() || this.errorList.length && this.errorList[0].element || [])
					.filter(":visible")
					.focus()
					// manually trigger focusin event; without it, focusin handler isn't called, findLastActive won't have anything to find
					.trigger("focusin");
				} catch(e) {
					// ignore IE throwing errors when focusing hidden elements
				}
			}
		},

		findLastActive: function() {
			var lastActive = this.lastActive;
			return lastActive && $.grep(this.errorList, function(n) {
				return n.element.name === lastActive.name;
			}).length === 1 && lastActive;
		},

		elements: function() {
			var validator = this,
				rulesCache = {};

			// select all valid inputs inside the form (no submit or reset buttons)
			return $(this.currentForm)
			.find("input, select, textarea")
			.not(":submit, :reset, :image, [disabled]")
			.not( this.settings.ignore )
			.filter(function() {
				if ( !this.name && validator.settings.debug && window.console ) {
					console.error( "%o has no name assigned", this);
				}

				// select only the first element for each name, and only those with rules specified
				if ( this.name in rulesCache || !validator.objectLength($(this).rules()) ) {
					return false;
				}

				rulesCache[this.name] = true;
				return true;
			});
		},

		clean: function( selector ) {
			return $( selector )[0];
		},

		errors: function() {
			var errorClass = this.settings.errorClass.replace(' ', '.');
			return $( this.settings.errorElement + "." + errorClass, this.errorContext );
		},

		reset: function() {
			this.successList = [];
			this.errorList = [];
			this.errorMap = {};
			this.toShow = $([]);
			this.toHide = $([]);
			this.currentElements = $([]);
		},

		prepareForm: function() {
			this.reset();
			this.toHide = this.errors().add( this.containers );
		},

		prepareElement: function( element ) {
			this.reset();
			this.toHide = this.errorsFor(element);
		},

		elementValue: function( element ) {
			var type = $(element).attr('type'),
				val = $(element).val();

			if ( type === 'radio' || type === 'checkbox' ) {
				return $('input[name="' + $(element).attr('name') + '"]:checked').val();
			}

			if ( typeof val === 'string' ) {
				return val.replace(/\r/g, "");
			}
			return val;
		},

		check: function( element ) {
			element = this.validationTargetFor( this.clean( element ) );

			var rules = $(element).rules();
			var dependencyMismatch = false;
			var val = this.elementValue(element);
			var result;

			for (var method in rules ) {
				var rule = { method: method, parameters: rules[method] };
				try {

					result = $.validator.methods[method].call( this, val, element, rule.parameters );

					// if a method indicates that the field is optional and therefore valid,
					// don't mark it as valid when there are no other rules
					if ( result === "dependency-mismatch" ) {
						dependencyMismatch = true;
						continue;
					}
					dependencyMismatch = false;

					if ( result === "pending" ) {
						this.toHide = this.toHide.not( this.errorsFor(element) );
						return;
					}

					if( !result ) {
						this.formatAndAdd( element, rule );
						return false;
					}
				} catch(e) {
					if ( this.settings.debug && window.console ) {
						console.log("exception occured when checking element " + element.id + ", check the '" + rule.method + "' method", e);
					}
					throw e;
				}
			}
			if (dependencyMismatch) {
				return;
			}
			if ( this.objectLength(rules) ) {
				this.successList.push(element);
			}
			return true;
		},

		// return the custom message for the given element and validation method
		// specified in the element's HTML5 data attribute
		customDataMessage: function(element, method) {
			return $(element).data('msg-' + method.toLowerCase()) || (element.attributes && $(element).attr('data-msg-' + method.toLowerCase()));
		},

		// return the custom message for the given element name and validation method
		customMessage: function( name, method ) {
			var m = this.settings.messages[name];
			return m && (m.constructor === String ? m : m[method]);
		},

		// return the first defined argument, allowing empty strings
		findDefined: function() {
			for(var i = 0; i < arguments.length; i++) {
				if (arguments[i] !== undefined) {
					return arguments[i];
				}
			}
			return undefined;
		},

		defaultMessage: function( element, method) {
			return this.findDefined(
				this.customMessage( element.name, method ),
				this.customDataMessage( element, method ),
				// title is never undefined, so handle empty string as undefined
				!this.settings.ignoreTitle && element.title || undefined,
				$.validator.messages[method],
				"<strong>Warning: No message defined for " + element.name + "</strong>"
			);
		},

		formatAndAdd: function( element, rule ) {
			var message = this.defaultMessage( element, rule.method ),
				theregex = /\$?\{(\d+)\}/g;
			if ( typeof message === "function" ) {
				message = message.call(this, rule.parameters, element);
			} else if (theregex.test(message)) {
				message = $.validator.format(message.replace(theregex, '{$1}'), rule.parameters);
			}
			this.errorList.push({
				message: message,
				element: element
			});

			this.errorMap[element.name] = message;
			this.submitted[element.name] = message;
		},

		addWrapper: function(toToggle) {
			if ( this.settings.wrapper ) {
				toToggle = toToggle.add( toToggle.parent( this.settings.wrapper ) );
			}
			return toToggle;
		},

		defaultShowErrors: function() {
			var i, elements;
			for ( i = 0; this.errorList[i]; i++ ) {
				var error = this.errorList[i];
				if ( this.settings.highlight ) {
					this.settings.highlight.call( this, error.element, this.settings.errorClass, this.settings.validClass );
				}
				this.showLabel( error.element, error.message );
			}
			if( this.errorList.length ) {
				this.toShow = this.toShow.add( this.containers );
			}
			if (this.settings.success) {
				for ( i = 0; this.successList[i]; i++ ) {
					this.showLabel( this.successList[i] );
				}
			}
			if (this.settings.unhighlight) {
				for ( i = 0, elements = this.validElements(); elements[i]; i++ ) {
					this.settings.unhighlight.call( this, elements[i], this.settings.errorClass, this.settings.validClass );
				}
			}
			this.toHide = this.toHide.not( this.toShow );
			this.hideErrors();
			this.addWrapper( this.toShow ).show();
		},

		validElements: function() {
			return this.currentElements.not(this.invalidElements());
		},

		invalidElements: function() {
			return $(this.errorList).map(function() {
				return this.element;
			});
		},

		showLabel: function(element, message) {
			var label = this.errorsFor( element );
			if ( label.length ) {
				// refresh error/success class
				label.removeClass( this.settings.validClass ).addClass( this.settings.errorClass );

				// check if we have a generated label, replace the message then
				if ( label.attr("generated") ) {
					label.html(message);
				}
			} else {
				// create label
				label = $("<" + this.settings.errorElement + "/>")
					.attr({"for":  this.idOrName(element), generated: true})
					.addClass(this.settings.errorClass)
					.html(message || "");
				if ( this.settings.wrapper ) {
					// make sure the element is visible, even in IE
					// actually showing the wrapped element is handled elsewhere
					label = label.hide().show().wrap("<" + this.settings.wrapper + "/>").parent();
				}
				if ( !this.labelContainer.append(label).length ) {
					if ( this.settings.errorPlacement ) {
						this.settings.errorPlacement(label, $(element) );
					} else {
						label.insertAfter(element);
					}
				}
			}
			if ( !message && this.settings.success ) {
				label.text("");
				if ( typeof this.settings.success === "string" ) {
					label.addClass( this.settings.success );
				} else {
					this.settings.success( label, element );
				}
			}
			this.toShow = this.toShow.add(label);
		},

		errorsFor: function(element) {
			var name = this.idOrName(element);
			return this.errors().filter(function() {
				return $(this).attr('for') === name;
			});
		},

		idOrName: function(element) {
			return this.groups[element.name] || (this.checkable(element) ? element.name : element.id || element.name);
		},

		validationTargetFor: function(element) {
			// if radio/checkbox, validate first element in group instead
			if (this.checkable(element)) {
				element = this.findByName( element.name ).not(this.settings.ignore)[0];
			}
			return element;
		},

		checkable: function( element ) {
			return (/radio|checkbox/i).test(element.type);
		},

		findByName: function( name ) {
			return $(this.currentForm).find('[name="' + name + '"]');
		},

		getLength: function(value, element) {
			switch( element.nodeName.toLowerCase() ) {
			case 'select':
				return $("option:selected", element).length;
			case 'input':
				if( this.checkable( element) ) {
					return this.findByName(element.name).filter(':checked').length;
				}
			}
			return value.length;
		},

		depend: function(param, element) {
			return this.dependTypes[typeof param] ? this.dependTypes[typeof param](param, element) : true;
		},

		dependTypes: {
			"boolean": function(param, element) {
				return param;
			},
			"string": function(param, element) {
				return !!$(param, element.form).length;
			},
			"function": function(param, element) {
				return param(element);
			}
		},

		optional: function(element) {
			var val = this.elementValue(element);
			return !$.validator.methods.required.call(this, val, element) && "dependency-mismatch";
		},

		startRequest: function(element) {
			if (!this.pending[element.name]) {
				this.pendingRequest++;
				this.pending[element.name] = true;
			}
		},

		stopRequest: function(element, valid) {
			this.pendingRequest--;
			// sometimes synchronization fails, make sure pendingRequest is never < 0
			if (this.pendingRequest < 0) {
				this.pendingRequest = 0;
			}
			delete this.pending[element.name];
			if ( valid && this.pendingRequest === 0 && this.formSubmitted && this.form() ) {
				$(this.currentForm).submit();
				this.formSubmitted = false;
			} else if (!valid && this.pendingRequest === 0 && this.formSubmitted) {
				$(this.currentForm).triggerHandler("invalid-form", [this]);
				this.formSubmitted = false;
			}
		},

		previousValue: function(element) {
			return $.data(element, "previousValue") || $.data(element, "previousValue", {
				old: null,
				valid: true,
				message: this.defaultMessage( element, "remote" )
			});
		}

	},

	classRuleSettings: {
		required: {required: true},
		email: {email: true},
		url: {url: true},
		date: {date: true},
		dateISO: {dateISO: true},
		number: {number: true},
		digits: {digits: true},
		creditcard: {creditcard: true}
	},

	addClassRules: function(className, rules) {
		if ( className.constructor === String ) {
			this.classRuleSettings[className] = rules;
		} else {
			$.extend(this.classRuleSettings, className);
		}
	},

	classRules: function(element) {
		var rules = {};
		var classes = $(element).attr('class');
		if ( classes ) {
			$.each(classes.split(' '), function() {
				if (this in $.validator.classRuleSettings) {
					$.extend(rules, $.validator.classRuleSettings[this]);
				}
			});
		}
		return rules;
	},

	attributeRules: function(element) {
		var rules = {};
		var $element = $(element);

		for (var method in $.validator.methods) {
			var value;

			// support for <input required> in both html5 and older browsers
			if (method === 'required') {
				value = $element.get(0).getAttribute(method);
				// Some browsers return an empty string for the required attribute
				// and non-HTML5 browsers might have required="" markup
				if (value === "") {
					value = true;
				}
				// force non-HTML5 browsers to return bool
				value = !!value;
			} else {
				value = $element.attr(method);
			}

			if (value) {
				rules[method] = value;
			} else if ($element[0].getAttribute("type") === method) {
				rules[method] = true;
			}
		}

		// maxlength may be returned as -1, 2147483647 (IE) and 524288 (safari) for text inputs
		if (rules.maxlength && /-1|2147483647|524288/.test(rules.maxlength)) {
			delete rules.maxlength;
		}

		return rules;
	},

	dataRules: function(element) {
		var method, value,
			rules = {}, $element = $(element);
		for (method in $.validator.methods) {
			value = $element.data('rule-' + method.toLowerCase());
			if (value !== undefined) {
				rules[method] = value;
			}
		}
		return rules;
	},

	staticRules: function(element) {
		var rules = {};
		var validator = $.data(element.form, 'validator');
		if (validator.settings.rules) {
			rules = $.validator.normalizeRule(validator.settings.rules[element.name]) || {};
		}
		return rules;
	},

	normalizeRules: function(rules, element) {
		// handle dependency check
		$.each(rules, function(prop, val) {
			// ignore rule when param is explicitly false, eg. required:false
			if (val === false) {
				delete rules[prop];
				return;
			}
			if (val.param || val.depends) {
				var keepRule = true;
				switch (typeof val.depends) {
				case "string":
					keepRule = !!$(val.depends, element.form).length;
					break;
				case "function":
					keepRule = val.depends.call(element, element);
					break;
				}
				if (keepRule) {
					rules[prop] = val.param !== undefined ? val.param : true;
				} else {
					delete rules[prop];
				}
			}
		});

		// evaluate parameters
		$.each(rules, function(rule, parameter) {
			rules[rule] = $.isFunction(parameter) ? parameter(element) : parameter;
		});

		// clean number parameters
		$.each(['minlength', 'maxlength', 'min', 'max'], function() {
			if (rules[this]) {
				rules[this] = Number(rules[this]);
			}
		});
		$.each(['rangelength', 'range'], function() {
			var parts;
			if (rules[this]) {
				if ($.isArray(rules[this])) {
					rules[this] = [Number(rules[this][0]), Number(rules[this][1])];
				} else if (typeof rules[this] === 'string') {
					parts = rules[this].split(/[\s,]+/);
					rules[this] = [Number(parts[0]), Number(parts[1])];
				}
			}
		});

		if ($.validator.autoCreateRanges) {
			// auto-create ranges
			if (rules.min && rules.max) {
				rules.range = [rules.min, rules.max];
				delete rules.min;
				delete rules.max;
			}
			if (rules.minlength && rules.maxlength) {
				rules.rangelength = [rules.minlength, rules.maxlength];
				delete rules.minlength;
				delete rules.maxlength;
			}
		}

		return rules;
	},

	// Converts a simple string to a {string: true} rule, e.g., "required" to {required:true}
	normalizeRule: function(data) {
		if( typeof data === "string" ) {
			var transformed = {};
			$.each(data.split(/\s/), function() {
				transformed[this] = true;
			});
			data = transformed;
		}
		return data;
	},

	// http://docs.jquery.com/Plugins/Validation/Validator/addMethod
	addMethod: function(name, method, message) {
		$.validator.methods[name] = method;
		$.validator.messages[name] = message !== undefined ? message : $.validator.messages[name];
		if (method.length < 3) {
			$.validator.addClassRules(name, $.validator.normalizeRule(name));
		}
	},

	methods: {

		// http://docs.jquery.com/Plugins/Validation/Methods/required
		required: function(value, element, param) {
			// check if dependency is met
			if ( !this.depend(param, element) ) {
				return "dependency-mismatch";
			}
			if ( element.nodeName.toLowerCase() === "select" ) {
				// could be an array for select-multiple or a string, both are fine this way
				var val = $(element).val();
				return val && val.length > 0;
			}
			if ( this.checkable(element) ) {
				return this.getLength(value, element) > 0;
			}
			return $.trim(value).length > 0;
		},

		// http://docs.jquery.com/Plugins/Validation/Methods/remote
		remote: function(value, element, param) {
			if ( this.optional(element) ) {
				return "dependency-mismatch";
			}

			var previous = this.previousValue(element);
			if (!this.settings.messages[element.name] ) {
				this.settings.messages[element.name] = {};
			}
			previous.originalMessage = this.settings.messages[element.name].remote;
			this.settings.messages[element.name].remote = previous.message;

			param = typeof param === "string" && {url:param} || param;

			if ( previous.old === value ) {
				return previous.valid;
			}

			previous.old = value;
			var validator = this;
			this.startRequest(element);
			var data = {};
			data[element.name] = value;
			$.ajax($.extend(true, {
				url: param,
				mode: "abort",
				port: "validate" + element.name,
				dataType: "json",
				data: data,
				success: function(response) {
					validator.settings.messages[element.name].remote = previous.originalMessage;
					var valid = response === true || response === "true";
					if ( valid ) {
						var submitted = validator.formSubmitted;
						validator.prepareElement(element);
						validator.formSubmitted = submitted;
						validator.successList.push(element);
						delete validator.invalid[element.name];
						validator.showErrors();
					} else {
						var errors = {};
						var message = response || validator.defaultMessage( element, "remote" );
						errors[element.name] = previous.message = $.isFunction(message) ? message(value) : message;
						validator.invalid[element.name] = true;
						validator.showErrors(errors);
					}
					previous.valid = valid;
					validator.stopRequest(element, valid);
				}
			}, param));
			return "pending";
		},

		// http://docs.jquery.com/Plugins/Validation/Methods/minlength
		minlength: function(value, element, param) {
			var length = $.isArray( value ) ? value.length : this.getLength($.trim(value), element);
			return this.optional(element) || length >= param;
		},

		// http://docs.jquery.com/Plugins/Validation/Methods/maxlength
		maxlength: function(value, element, param) {
			var length = $.isArray( value ) ? value.length : this.getLength($.trim(value), element);
			return this.optional(element) || length <= param;
		},

		// http://docs.jquery.com/Plugins/Validation/Methods/rangelength
		rangelength: function(value, element, param) {
			var length = $.isArray( value ) ? value.length : this.getLength($.trim(value), element);
			return this.optional(element) || ( length >= param[0] && length <= param[1] );
		},

		// http://docs.jquery.com/Plugins/Validation/Methods/min
		min: function( value, element, param ) {
			return this.optional(element) || value >= param;
		},

		// http://docs.jquery.com/Plugins/Validation/Methods/max
		max: function( value, element, param ) {
			return this.optional(element) || value <= param;
		},

		// http://docs.jquery.com/Plugins/Validation/Methods/range
		range: function( value, element, param ) {
			return this.optional(element) || ( value >= param[0] && value <= param[1] );
		},

		// http://docs.jquery.com/Plugins/Validation/Methods/email
		email: function(value, element) {
			// contributed by Scott Gonzalez: http://projects.scottsplayground.com/email_address_validation/
			return this.optional(element) || /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i.test(value);
		},

		// http://docs.jquery.com/Plugins/Validation/Methods/url
		url: function(value, element) {
			// contributed by Scott Gonzalez: http://projects.scottsplayground.com/iri/
			return this.optional(element) || /^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(value);
		},

		// http://docs.jquery.com/Plugins/Validation/Methods/date
		date: function(value, element) {
			return this.optional(element) || !/Invalid|NaN/.test(new Date(value).toString());
		},

		// http://docs.jquery.com/Plugins/Validation/Methods/dateISO
		dateISO: function(value, element) {
			return this.optional(element) || /^\d{4}[\/\-]\d{1,2}[\/\-]\d{1,2}$/.test(value);
		},

		// http://docs.jquery.com/Plugins/Validation/Methods/number
		number: function(value, element) {
			return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(value);
		},

		// http://docs.jquery.com/Plugins/Validation/Methods/digits
		digits: function(value, element) {
			return this.optional(element) || /^\d+$/.test(value);
		},

		// http://docs.jquery.com/Plugins/Validation/Methods/creditcard
		// based on http://en.wikipedia.org/wiki/Luhn
		creditcard: function(value, element) {
			if ( this.optional(element) ) {
				return "dependency-mismatch";
			}
			// accept only spaces, digits and dashes
			if (/[^0-9 \-]+/.test(value)) {
				return false;
			}
			var nCheck = 0,
				nDigit = 0,
				bEven = false;

			value = value.replace(/\D/g, "");

			for (var n = value.length - 1; n >= 0; n--) {
				var cDigit = value.charAt(n);
				nDigit = parseInt(cDigit, 10);
				if (bEven) {
					if ((nDigit *= 2) > 9) {
						nDigit -= 9;
					}
				}
				nCheck += nDigit;
				bEven = !bEven;
			}

			return (nCheck % 10) === 0;
		},

		// http://docs.jquery.com/Plugins/Validation/Methods/equalTo
		equalTo: function(value, element, param) {
			// bind to the blur event of the target in order to revalidate whenever the target field is updated
			// TODO find a way to bind the event just once, avoiding the unbind-rebind overhead
			var target = $(param);
			if (this.settings.onfocusout) {
				target.unbind(".validate-equalTo").bind("blur.validate-equalTo", function() {
					$(element).valid();
				});
			}
			return value === target.val();
		}

	}

});

// deprecated, use $.validator.format instead
$.format = $.validator.format;

}(jQuery));

// ajax mode: abort
// usage: $.ajax({ mode: "abort"[, port: "uniqueport"]});
// if mode:"abort" is used, the previous request on that port (port can be undefined) is aborted via XMLHttpRequest.abort()
(function($) {
	var pendingRequests = {};
	// Use a prefilter if available (1.5+)
	if ( $.ajaxPrefilter ) {
		$.ajaxPrefilter(function(settings, _, xhr) {
			var port = settings.port;
			if (settings.mode === "abort") {
				if ( pendingRequests[port] ) {
					pendingRequests[port].abort();
				}
				pendingRequests[port] = xhr;
			}
		});
	} else {
		// Proxy ajax
		var ajax = $.ajax;
		$.ajax = function(settings) {
			var mode = ( "mode" in settings ? settings : $.ajaxSettings ).mode,
				port = ( "port" in settings ? settings : $.ajaxSettings ).port;
			if (mode === "abort") {
				if ( pendingRequests[port] ) {
					pendingRequests[port].abort();
				}
				return (pendingRequests[port] = ajax.apply(this, arguments));
			}
			return ajax.apply(this, arguments);
		};
	}
}(jQuery));

// provides delegate(type: String, delegate: Selector, handler: Callback) plugin for easier event delegation
// handler is only called when $(event.target).is(delegate), in the scope of the jquery-object for event.target
(function($) {
	$.extend($.fn, {
		validateDelegate: function(delegate, type, handler) {
			return this.bind(type, function(event) {
				var target = $(event.target);
				if (target.is(delegate)) {
					return handler.apply(target, arguments);
				}
			});
		}
	});
}(jQuery));

define("jquery.Validate", function(){});

define('jquery.Extensions',['require'],function(require) {
	
	$.validator.addMethod("validpassword", function(value, element) {
		return this.optional(element) ||
		/^.*(?=.*\d)(?=.*[a-zA-Z]).*$/.test(value)
	},
	"Password too weak: use digits and letters");

	$.validator.addMethod("lessThan", function(small, element, big) {
		return new Date(small) < new Date(big.val());
	},
	"Check your dates: invalid lapse of time");

	$.validator.addMethod("greatThan", function(small, element, big) {
		return new Date(small) > new Date(big.val());
	},
	"Check your dates: invalid lapse of time");

	$.validator.addMethod("gte", function(small, element, big) {
		var a = new Date(small) > new Date(big.val());
		var b = new Date(small).valueOf() === new Date(big.val()).valueOf();
		return (a || b);
	},
	"Check your dates: invalid lapse of time");

	$.deparam  = function( params, coerce ) {
		var obj = {};

    	if( ! params){
        	return obj;
    	}

		coerce_types = { 'true': !0, 'false': !1, 'null': null };

			// Iterate over all name=value pairs.
			$.each( params.replace( /\+/g, ' ' ).split( '&' ), function(j,v){
				var param = v.split( '=' ),
				key = decodeURIComponent( param[0] ),
				val,
				cur = obj,
				i = 0,
				
				// If key is more complex than 'foo', like 'a[]' or 'a[b][c]', split it
				// into its component parts.
				keys = key.split( '][' ),
				keys_last = keys.length - 1;

			  // If the first keys part contains [ and the last ends with ], then []
			  // are correctly balanced.
			  if ( /\[/.test( keys[0] ) && /\]$/.test( keys[ keys_last ] ) ) {
				// Remove the trailing ] from the last keys part.
				keys[ keys_last ] = keys[ keys_last ].replace( /\]$/, '' );
				
				// Split first keys part into two parts on the [ and add them back onto
				// the beginning of the keys array.
				keys = keys.shift().split('[').concat( keys );
				
				keys_last = keys.length - 1;
			} else {
				// Basic 'foo' style key.
				keys_last = 0;
			}

			  // Are we dealing with a name=value pair, or just a name?
			  if ( param.length === 2 ) {
			  	val = decodeURIComponent( param[1] );

				// Coerce values.
				if ( coerce ) {
				  val = val && !isNaN(val)            ? +val              // number
					: val === 'undefined'             ? undefined         // undefined
					: coerce_types[val] !== undefined ? coerce_types[val] // true, false, null
					: val;                                                // string
				}
				
				if ( keys_last ) {
				  // Complex key, build deep object structure based on a few rules:
				  // * The 'cur' pointer starts at the object top-level.
				  // * [] = array push (n is set to array length), [n] = array if n is 
				  //   numeric, otherwise object.
				  // * If at the last keys part, set the value.
				  // * For each keys part, if the current level is undefined create an
				  //   object or array based on the type of the next keys part.
				  // * Move the 'cur' pointer to the next level.
				  // * Rinse & repeat.
				  for ( ; i <= keys_last; i++ ) {
				  	key = keys[i] === '' ? cur.length : keys[i];
				  	cur = cur[key] = i < keys_last
				  	? cur[key] || ( keys[i+1] && isNaN( keys[i+1] ) ? {} : [] )
				  	: val;
				  }
				  
				} else {
				  // Simple key, even simpler rules, since only scalars and shallow
				  // arrays are allowed.
				  
				  if ( $.isArray( obj[key] ) ) {
					// val is already an array, so push on the next value.
					obj[key].push( val );
					
				} else if ( obj[key] !== undefined ) {
					// val isn't an array, but since a second value has been specified,
					// convert val into an array.
					obj[key] = [ obj[key], val ];
					
				} else {
					// val is a scalar.
					obj[key] = val;
				}
			}

		} else if ( key ) {
				// No value was defined, so set something meaningful.
				obj[key] = coerce
				? undefined
				: '';
			}
		});

		return obj;
	};

});
/** @license
 * RequireJS plugin for async dependency load like JSONP and Google Maps
 * Author: Miller Medeiros
 * Version: 0.1.1 (2011/11/17)
 * Released under the MIT license
 */
define('async',[],function(){

    var DEFAULT_PARAM_NAME = 'callback',
        _uid = 0;

    function injectScript(src){
        var s, t;
        s = document.createElement('script'); s.type = 'text/javascript'; s.async = true; s.src = src;
        t = document.getElementsByTagName('script')[0]; t.parentNode.insertBefore(s,t);
    }

    function formatUrl(name, id){
        var paramRegex = /!(.+)/,
            url = name.replace(paramRegex, ''),
            param = (paramRegex.test(name))? name.replace(/.+!/, '') : DEFAULT_PARAM_NAME;
        url += (url.indexOf('?') < 0)? '?' : '&';
        return url + param +'='+ id;
    }

    function uid() {
        _uid += 1;
        return '__async_req_'+ _uid +'__';
    }

    return{
        load : function(name, req, onLoad, config){
            if(config.isBuild){
                onLoad(null); //avoid errors on the optimizer
            }else{
                var id = uid();
                window[id] = onLoad; //create a global variable that stores onLoad so callback function can define new module after async load
                injectScript(formatUrl(name, id));
            }
        }
    };
});

// Sets the require.js configuration for your application.
requirejs.config({

	urlArgs: "nocache=" +  Date.now(),

	// 3rd party script alias names (Easier to type "jquery" than "libs/jquery-1.7.2.min")
	paths: {
		// Core Libraries
		"modernizr": "lib/modernizr",
		"jquery": "lib/jquery",
		"bootstrap": "lib/plugins/bootstrap",
		"underscore": "lib/lodash",
		"backbone": "lib/backbone",
		"handlebars": "lib/handlebars",
		// jQuery Plugins 
		"jquery.Validate": "lib/plugins/jquery.validate",
		"jquery.Extensions": "lib/plugins/jq-extensions",
		"jquery.Jcrop": "lib/plugins/jquery.Jcrop",
		"jquery.Datepicker": "lib/plugins/jquery-ui-1.9.1.custom.min",
		// Bootstrap plugins
		"typeahead": "lib/plugins/bootstrap-typeahead-ajax",
		// Require plugins
		"async": "lib/plugins/async",
		"text": "lib/plugins/text",
		"tmpl": "lib/plugins/tmpl",
		// Custom core libs
		"templates": "../templates",
		"api": "core/api",
		"api2": "core/api2",
		"utils": "core/utils",
		"promise": "core/promise",
		"phrases": "core/phrases",
		"config": "core/config",
	},

	// Sets the configuration for your third party scripts that are not AMD compatible
	shim: {
		"handlebars": {
			"exports": "Handlebars"
		},
		"api": {
			"exports": "API"
		},
		"utils": {
			"exports": "Utils"
		},
		// Twitter Bootstrap jQuery plugins
		"bootstrap": ["jquery"],
		"typeahead": ["bootstrap"],
		"backbone": {
			"deps": ["underscore", "jquery"],
			"exports": "Backbone" //attaches "Backbone" to the window object
		},
		"jquery.Jcrop": ["jquery"],
		"jquery.Datepicker": ["jquery"],
		"jquery.Validate": ["jquery"],
		"jquery.Extensions": ["jquery.Validate"],

	} // end Shim Configuration
});

// Include Desktop Specific JavaScript files here (or inside of your Desktop router)
requirejs(['modernizr', 'jquery', 'backbone', 'router', 'promise', 'bootstrap', 'typeahead', 'jquery.Extensions', 'async'], function(Modernizr, $, Backbone, Router, Promise) {
	Promise.debug = true;
	// Instantiates a new Router
	window.router = new Router();
});

define("main", function(){});
